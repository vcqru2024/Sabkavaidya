<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ControlTitle_adminproduct_statistic.Text" xml:space="preserve">
    <value>Sales Statistic</value>
  </data>
  <data name="lblUserSell1.Text" xml:space="preserve">
    <value>User Sell:</value>
  </data>
  <data name="lblUsername.Text" xml:space="preserve">
    <value>User Name</value>
  </data>
  <data name="lblUserRemain.Text" xml:space="preserve">
    <value>User Remain</value>
  </data>
  <data name="lblUserId.Text" xml:space="preserve">
    <value>User Id</value>
  </data>
  <data name="lblUserSell.Text" xml:space="preserve">
    <value>User Sell</value>
  </data>
  <data name="lblSiteCharge.Text" xml:space="preserve">
    <value>Site Charge</value>
  </data>
  <data name="lblProductType.Text" xml:space="preserve">
    <value>Department:</value>
  </data>
  <data name="lblUserName1.Text" xml:space="preserve">
    <value>User Name:</value>
  </data>
  <data name="imgViewPayment.Text" xml:space="preserve">
    <value>View seller payment information if you want to send money to him/her.</value>
  </data>
  <data name="lblDisplayName.Text" xml:space="preserve">
    <value>Display Name</value>
  </data>
  <data name="lblEnd.Text" xml:space="preserve">
    <value>End:</value>
  </data>
  <data name="lblP_C_Address1.Text" xml:space="preserve">
    <value>Address 1</value>
  </data>
  <data name="lblP_C_Address2.Text" xml:space="preserve">
    <value>Address 2</value>
  </data>
  <data name="lblP_C_City.Text" xml:space="preserve">
    <value>City</value>
  </data>
  <data name="lblP_C_CountryCode.Text" xml:space="preserve">
    <value>Country</value>
  </data>
  <data name="lblP_C_Payee.Text" xml:space="preserve">
    <value>Payee Name</value>
  </data>
  <data name="lblP_C_RegionCode.Text" xml:space="preserve">
    <value>Region</value>
  </data>
  <data name="lblP_DD_AccountNumber.Text" xml:space="preserve">
    <value>Account Number</value>
  </data>
  <data name="lblP_DD_AccountType.Text" xml:space="preserve">
    <value>Account Type</value>
  </data>
  <data name="lblP_DD_BankName.Text" xml:space="preserve">
    <value>Bank Name</value>
  </data>
  <data name="lblP_DD_RoutingNumber.Text" xml:space="preserve">
    <value>Routing Number</value>
  </data>
  <data name="lblP_Paypal.Text" xml:space="preserve">
    <value>PayPal Account</value>
  </data>
  <data name="lblP_Type.Text" xml:space="preserve">
    <value>Payment Type</value>
  </data>
  <data name="lblSiteCharge1.Text" xml:space="preserve">
    <value>Site Charge:</value>
  </data>
  <data name="lblStart.Text" xml:space="preserve">
    <value>Start:</value>
  </data>
  <data name="lblUserRemain1.Text" xml:space="preserve">
    <value>User Remain:</value>
  </data>
  <data name="li_P_DD_AccountType_Checking.Text" xml:space="preserve">
    <value>Checking</value>
  </data>
  <data name="li_P_DD_AccountType_Savings.Text" xml:space="preserve">
    <value>Savings</value>
  </data>
  <data name="li_P_Type_Check.Text" xml:space="preserve">
    <value>Check</value>
  </data>
  <data name="li_P_Type_DirectDeposit.Text" xml:space="preserve">
    <value>Direct Deposit</value>
  </data>
  <data name="li_P_Type_Paypal.Text" xml:space="preserve">
    <value>PayPal</value>
  </data>
  <data name="secCheck.Text" xml:space="preserve">
    <value>Check</value>
  </data>
  <data name="secDirectDeposit.Text" xml:space="preserve">
    <value>Direct Deposit</value>
  </data>
  <data name="secPaypal.Text" xml:space="preserve">
    <value>PayPal</value>
  </data>
  <data name="UserPayment.Text" xml:space="preserve">
    <value>"{0}" payment information</value>
  </data>
  <data name="lblP_Alipay.Text" xml:space="preserve">
    <value>Alipay Account</value>
  </data>
  <data name="li_P_Type_Alipay.Text" xml:space="preserve">
    <value>Alipay</value>
  </data>
  <data name="secAlipay.Text" xml:space="preserve">
    <value>Alipay</value>
  </data>
  <data name="btnCreatePayPalMass.Text" xml:space="preserve">
    <value>Create PayPal Mass Payment File</value>
  </data>
  <data name="lblCurrency.Text" xml:space="preserve">
    <value>Currency</value>
  </data>
  <data name="lblMassPaymentTip.Text" xml:space="preserve">
    <value>&amp;nbsp;&amp;nbsp;If you are using PayPal to distribute sellers' income periodic, instead of send them one by one in PayPal control panel, you can try to create a mass payment file below and upload it to PayPal, then let PayPal to process the payment to all sellers automatically. Please note:&lt;br/&gt;

&amp;nbsp;&amp;nbsp;1. Before sending money to a group, please contact PayPal Customer Service or your account manager to make sure your PayPal account is eligible. Normally you need to upgrade your PayPal account to business account first.&lt;br/&gt;
&amp;nbsp;&amp;nbsp;2. Select a right currency,and provide a payment note. The {startdate} and {enddate} in note will be replaced using the true date specifying above. Of course, you can ignore them and change it as your wish, like "Payment from April 2018".&lt;br/&gt;
&amp;nbsp;&amp;nbsp;3. Click the "Create PayPal Mass Payment File" button you will get the PayPal mass payment file, upload it after login PayPal website. For more detail, visit &lt;a href="https://www.paypal.com/au/cgi-bin/webscr?cmd=_batch-payment-overview-outside" target="blank"&gt;PayPal Mass Payment Overview&lt;/a&gt;.</value>
  </data>
  <data name="li_Currency_AUD.Text" xml:space="preserve">
    <value>Australian Dollars</value>
  </data>
  <data name="li_Currency_CAD.Text" xml:space="preserve">
    <value>Canadian Dollars</value>
  </data>
  <data name="li_Currency_CHF.Text" xml:space="preserve">
    <value>Swiss Francs</value>
  </data>
  <data name="li_Currency_CZK.Text" xml:space="preserve">
    <value>Czech Koruny</value>
  </data>
  <data name="li_Currency_DKK.Text" xml:space="preserve">
    <value>Danish Kroner</value>
  </data>
  <data name="li_Currency_EUR.Text" xml:space="preserve">
    <value>Euros</value>
  </data>
  <data name="li_Currency_GBP.Text" xml:space="preserve">
    <value>British Pounds</value>
  </data>
  <data name="li_Currency_HKD.Text" xml:space="preserve">
    <value>Hong Kong Dollars</value>
  </data>
  <data name="li_Currency_HUF.Text" xml:space="preserve">
    <value>Hungarian Forints</value>
  </data>
  <data name="li_Currency_ILS.Text" xml:space="preserve">
    <value>Israeli New Shekels</value>
  </data>
  <data name="li_Currency_JPY.Text" xml:space="preserve">
    <value>Japanese Yen</value>
  </data>
  <data name="li_Currency_MXN.Text" xml:space="preserve">
    <value>Mexican Pesos</value>
  </data>
  <data name="li_Currency_NOK.Text" xml:space="preserve">
    <value>Norwegian Kroner</value>
  </data>
  <data name="li_Currency_NZD.Text" xml:space="preserve">
    <value>New Zealand Dollars</value>
  </data>
  <data name="li_Currency_PHP.Text" xml:space="preserve">
    <value>Philippine Pesos</value>
  </data>
  <data name="li_Currency_PLN.Text" xml:space="preserve">
    <value>Polish Zlotys</value>
  </data>
  <data name="li_Currency_RUB.Text" xml:space="preserve">
    <value>Russian Rubles</value>
  </data>
  <data name="li_Currency_SEK.Text" xml:space="preserve">
    <value>Swedish Kronor</value>
  </data>
  <data name="li_Currency_SGD.Text" xml:space="preserve">
    <value>Singapore Dollars</value>
  </data>
  <data name="li_Currency_THB.Text" xml:space="preserve">
    <value>Thai Baht</value>
  </data>
  <data name="li_Currency_TWD.Text" xml:space="preserve">
    <value>New Taiwan Dollars</value>
  </data>
  <data name="li_Currency_USD.Text" xml:space="preserve">
    <value>U.S. Dollars</value>
  </data>
  <data name="MassFileUrl.Text" xml:space="preserve">
    <value>PayPal mass payment file was created successfully, click &lt;a href="{0}" target="_blank"&gt;{1}&lt;/a&gt; to download it.</value>
  </data>
  <data name="NoRecord.Text" xml:space="preserve">
    <value>There is no record for the specified date range.</value>
  </data>
  <data name="lblNote.Text" xml:space="preserve">
    <value>Note:</value>
  </data>
</root>