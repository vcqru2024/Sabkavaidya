<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Boolean.ErrorMessage" xml:space="preserve">
    <value>Please enter a valid True/False value.</value>
  </data>
  <data name="Boolean.Text" xml:space="preserve">
    <value>True/False</value>
  </data>
  <data name="Boolean_DefaultValue.Help" xml:space="preserve">
    <value>New records will use this value as the default value, for example, "True" or "False".</value>
  </data>
  <data name="Boolean_DefaultValue.Text" xml:space="preserve">
    <value>Default Value:</value>
  </data>
  <data name="Boolean_OutputSetting.Help" xml:space="preserve">
    <value>Text of the label to the RIGHT of checkbox</value>
  </data>
  <data name="Boolean_OutputSetting.Text" xml:space="preserve">
    <value>Right label text:</value>
  </data>
  <data name="Currency.ErrorMessage" xml:space="preserve">
    <value>Please enter a valid Currency value.</value>
  </data>
  <data name="Currency.Text" xml:space="preserve">
    <value>Currency</value>
  </data>
  <data name="Currency_DefaultValue.Help" xml:space="preserve">
    <value>New records will use this amount as the default value. </value>
  </data>
  <data name="Currency_DefaultValue.Text" xml:space="preserve">
    <value>Default Value:</value>
  </data>
  <data name="Currency_InputSetting.Help" xml:space="preserve">
    <value>Enter a list of numbers separated with ";", for example, 1;12, 23;99, 87.</value>
  </data>
  <data name="Currency_InputSetting.Text" xml:space="preserve">
    <value>List of Values:</value>
  </data>
  <data name="Currency_OutputSetting.Help" xml:space="preserve">
    <value>Enter the name or symbol of the currency.</value>
  </data>
  <data name="Currency_OutputSetting.Text" xml:space="preserve">
    <value>Currency Symbol:</value>
  </data>
  <data name="DataType_Currency.Text" xml:space="preserve">
    <value>Currency</value>
  </data>
  <data name="DataType_Date.Text" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="DataType_DateTime.Text" xml:space="preserve">
    <value>DateTime</value>
  </data>
  <data name="DataType_Decimal.Text" xml:space="preserve">
    <value>Decimal</value>
  </data>
  <data name="DataType_EMail.Text" xml:space="preserve">
    <value>EMail</value>
  </data>
  <data name="DataType_Image.Text" xml:space="preserve">
    <value>Image</value>
  </data>
  <data name="DataType_Int32.Text" xml:space="preserve">
    <value>Int32</value>
  </data>
  <data name="DataType_String.Text" xml:space="preserve">
    <value>String</value>
  </data>
  <data name="DataType_TextHtml.Text" xml:space="preserve">
    <value>Text Html</value>
  </data>
  <data name="DataType_Time.Text" xml:space="preserve">
    <value>Time</value>
  </data>
  <data name="DataType_URL.Text" xml:space="preserve">
    <value>Url</value>
  </data>
  <data name="DataType_UserLink.Text" xml:space="preserve">
    <value>User link</value>
  </data>
  <data name="Date.ErrorMessage" xml:space="preserve">
    <value>Please enter a valid Date value.</value>
  </data>
  <data name="Date.Text" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="DateTime.ErrorMessage" xml:space="preserve">
    <value>Please enter a valid Date and Time value.</value>
  </data>
  <data name="DateTime.Text" xml:space="preserve">
    <value>Date and Time</value>
  </data>
  <data name="DateTime_DefaultValue.Help" xml:space="preserve">
    <value>New records will use this value as the default value, for example, 2000-01-01T12:00:00.</value>
  </data>
  <data name="DateTime_DefaultValue.Text" xml:space="preserve">
    <value>Default Value:</value>
  </data>
  <data name="DateTime_NormalizeFlag.Help" xml:space="preserve">
    <value>Activate to store values with respect to the users timezone.</value>
  </data>
  <data name="DateTime_NormalizeFlag.Text" xml:space="preserve">
    <value>Convert TimeZone?</value>
  </data>
  <data name="DateTime_OutputSetting.Help" xml:space="preserve">
    <value>Enter a date format, for example, "dd.MM.yyyy".</value>
  </data>
  <data name="DateTime_OutputSetting.Text" xml:space="preserve">
    <value>Output Format:</value>
  </data>
  <data name="DateType_Boolean.Text" xml:space="preserve">
    <value>Boolean</value>
  </data>
  <data name="Date_DefaultValue.Help" xml:space="preserve">
    <value>New records will use this value as the default value. You can enter a format, for example, MM/DD/YYYY.</value>
  </data>
  <data name="Date_DefaultValue.Text" xml:space="preserve">
    <value>Default Value:</value>
  </data>
  <data name="Date_InputSetting.Help" xml:space="preserve">
    <value>Enter a list of dates separated with ";", for example, 2000-01-01;2000-12-31;2001-7-24.</value>
  </data>
  <data name="Date_InputSetting.Text" xml:space="preserve">
    <value>List of Values:</value>
  </data>
  <data name="Date_OutputSetting.Help" xml:space="preserve">
    <value>New records will use this date as the default value, for example, "MM/dd/yyyy".</value>
  </data>
  <data name="Date_OutputSetting.Text" xml:space="preserve">
    <value>Output Format:</value>
  </data>
  <data name="Decimal.ErrorMessage" xml:space="preserve">
    <value>Please enter a valid Decimal value.</value>
  </data>
  <data name="Decimal.Text" xml:space="preserve">
    <value>Decimal</value>
  </data>
  <data name="Decimal_DefaultValue.Help" xml:space="preserve">
    <value>New records will use this value as the default value, for example, 12.23.</value>
  </data>
  <data name="Decimal_DefaultValue.Text" xml:space="preserve">
    <value>Default Value:</value>
  </data>
  <data name="Decimal_InputSetting.Help" xml:space="preserve">
    <value>Enter a list of numbers separated with ";", for example, 1;12.23;99.87.</value>
  </data>
  <data name="Decimal_InputSetting.Text" xml:space="preserve">
    <value>List of Values:</value>
  </data>
  <data name="Decimal_OutputSetting.Help" xml:space="preserve">
    <value>Enter a number format, for example, "0.00".</value>
  </data>
  <data name="Decimal_OutputSetting.Text" xml:space="preserve">
    <value>Output Format:</value>
  </data>
  <data name="EMail.ErrorMessage" xml:space="preserve">
    <value>Please enter a valid Email address.</value>
  </data>
  <data name="EMail.Text" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="EMail_DefaultValue.Help" xml:space="preserve">
    <value>New records will use this default value. Enter a valid email address.</value>
  </data>
  <data name="EMail_DefaultValue.Text" xml:space="preserve">
    <value>Default Value:</value>
  </data>
  <data name="EMail_InputSetting.Help" xml:space="preserve">
    <value>Enter a list of email addresses separated by ";".</value>
  </data>
  <data name="EMail_InputSetting.Text" xml:space="preserve">
    <value>List of Values:</value>
  </data>
  <data name="EMail_NormalizeFlag.Help" xml:space="preserve">
    <value>Enable to display email address as text.</value>
  </data>
  <data name="EMail_NormalizeFlag.Text" xml:space="preserve">
    <value>Disable Hyperlink?</value>
  </data>
  <data name="EMail_OutputSetting.Help" xml:space="preserve">
    <value>Enter the static text that is displayed instead of an email address (with mailto: link).</value>
  </data>
  <data name="EMail_OutputSetting.Text" xml:space="preserve">
    <value>Link Caption:</value>
  </data>
  <data name="Image.ErrorMessage" xml:space="preserve">
    <value>Please specify a valid image</value>
  </data>
  <data name="Image.Text" xml:space="preserve">
    <value>Image</value>
  </data>
  <data name="ImageViewSetting.Text" xml:space="preserve">
    <value>Display options for image columns:</value>
  </data>
  <data name="Image_DefaultValue.Help" xml:space="preserve">
    <value>New records will use this default value. Enter a valid image link.</value>
  </data>
  <data name="Image_DefaultValue.Text" xml:space="preserve">
    <value>Default Value:</value>
  </data>
  <data name="Image_InputSetting.Help" xml:space="preserve">
    <value>Enter a list of image links separated with ";".</value>
  </data>
  <data name="Image_InputSetting.Text" xml:space="preserve">
    <value>List of Values:</value>
  </data>
  <data name="Image_NormalizeFlag.Help" xml:space="preserve">
    <value>Enable to display thumbnail image as a link to open full sized image in new window.</value>
  </data>
  <data name="Image_NormalizeFlag.Text" xml:space="preserve">
    <value>Hyperlink:</value>
  </data>
  <data name="Image_OutputSetting.Help" xml:space="preserve">
    <value>Enter text to be used as "ALT tag" for all records.</value>
  </data>
  <data name="Image_OutputSetting.Text" xml:space="preserve">
    <value>ALT Tag:</value>
  </data>
  <data name="Int32.ErrorMessage" xml:space="preserve">
    <value>Please enter a valid Integer value.</value>
  </data>
  <data name="Int32.Text" xml:space="preserve">
    <value>Integer</value>
  </data>
  <data name="Int32_DefaultValue.Help" xml:space="preserve">
    <value>New records will use this number as the default value. </value>
  </data>
  <data name="Int32_DefaultValue.Text" xml:space="preserve">
    <value>Default Value:</value>
  </data>
  <data name="Int32_InputSetting.Help" xml:space="preserve">
    <value>Enter a list of integers separated with ";", for example, 5;10;50;100</value>
  </data>
  <data name="Int32_InputSetting.Text" xml:space="preserve">
    <value>List of Values:</value>
  </data>
  <data name="Int32_OutputSetting.Help" xml:space="preserve">
    <value>Enter a format string, for example, "###.###"</value>
  </data>
  <data name="Int32_OutputSetting.Text" xml:space="preserve">
    <value>Output Format:</value>
  </data>
  <data name="PageNotFound.ErrorMessage" xml:space="preserve">
    <value>Page not found</value>
  </data>
  <data name="Required.ErrorMessage" xml:space="preserve">
    <value>This field is required.</value>
  </data>
  <data name="Required2.ErrorMessage" xml:space="preserve">
    <value>This field is required.</value>
  </data>
  <data name="RequiredFootnote.Text" xml:space="preserve">
    <value>* required</value>
  </data>
  <data name="RequiredIndicator.Text" xml:space="preserve">
    <value>(*)</value>
  </data>
  <data name="String.ErrorMessage" xml:space="preserve">
    <value>Please specify a valid string</value>
  </data>
  <data name="String.Text" xml:space="preserve">
    <value>Text</value>
  </data>
  <data name="String_DefaultValue.Help" xml:space="preserve">
    <value>New records will auto-fill using this default value.</value>
  </data>
  <data name="String_DefaultValue.Text" xml:space="preserve">
    <value>Default Value:</value>
  </data>
  <data name="String_InputSetting.Help" xml:space="preserve">
    <value>Enter either a list of values (1;2;3 or A;B;C) or name|value pairs (One|1;Two|2;Three|3), with elements separated by a ";" (semicolon).</value>
  </data>
  <data name="String_InputSetting.Text" xml:space="preserve">
    <value>List of Values:</value>
  </data>
  <data name="TextHtml.Text" xml:space="preserve">
    <value>Rich Text (Html)</value>
  </data>
  <data name="TextHtml_DefaultValue.Help" xml:space="preserve">
    <value>New records will use this HTML text as the default value.</value>
  </data>
  <data name="TextHtml_DefaultValue.Text" xml:space="preserve">
    <value>Default Value:</value>
  </data>
  <data name="TextHtml_NormalizeFlag.Help" xml:space="preserve">
    <value>Enable to display a Plain Text Box instead of a Rich Text (HTML) editor.</value>
  </data>
  <data name="TextHtml_NormalizeFlag.Text" xml:space="preserve">
    <value>Plain Text Box?</value>
  </data>
  <data name="Time.ErrorMessage" xml:space="preserve">
    <value>Please enter a valid Time value.</value>
  </data>
  <data name="Time.Text" xml:space="preserve">
    <value>Time</value>
  </data>
  <data name="Time_DefaultValue.Help" xml:space="preserve">
    <value>New records will use this default time value.</value>
  </data>
  <data name="Time_DefaultValue.Text" xml:space="preserve">
    <value>Default Value:</value>
  </data>
  <data name="Time_InputSetting.Help" xml:space="preserve">
    <value>Enter a list of times separated with ";", for example, 10:00:00;11:30:00;13:00:00.</value>
  </data>
  <data name="Time_InputSetting.Text" xml:space="preserve">
    <value>List of Values:</value>
  </data>
  <data name="Time_NormalizeFlag.Help" xml:space="preserve">
    <value>Enable to store time based on the user's timezone.</value>
  </data>
  <data name="Time_NormalizeFlag.Text" xml:space="preserve">
    <value>Convert TimeZone?</value>
  </data>
  <data name="Time_OutputSetting.Help" xml:space="preserve">
    <value>You can specify an appropriate output format, for example, "hh:mm".</value>
  </data>
  <data name="Time_OutputSetting.Text" xml:space="preserve">
    <value>Output Format:</value>
  </data>
  <data name="URL.ErrorMessage" xml:space="preserve">
    <value>Please enter a valid URL.</value>
  </data>
  <data name="URL.Text" xml:space="preserve">
    <value>URL</value>
  </data>
  <data name="URL_DefaultValue.Help" xml:space="preserve">
    <value>New records will use this value as the default value. Enter a valid URL.</value>
  </data>
  <data name="URL_DefaultValue.Text" xml:space="preserve">
    <value>Default Value:</value>
  </data>
  <data name="URL_InputSetting.Help" xml:space="preserve">
    <value>Enter a list of URLs separated with ";".</value>
  </data>
  <data name="URL_InputSetting.Text" xml:space="preserve">
    <value>List of Values:</value>
  </data>
  <data name="URL_NormalizeFlag.Help" xml:space="preserve">
    <value>Enable to display file or page name only.</value>
  </data>
  <data name="URL_NormalizeFlag.Text" xml:space="preserve">
    <value>Abbreviated URL:</value>
  </data>
  <data name="URL_OutputSetting.Help" xml:space="preserve">
    <value>Enter a static (HTML) value to be used as a link caption.</value>
  </data>
  <data name="URL_OutputSetting.Text" xml:space="preserve">
    <value>Link Caption:</value>
  </data>
  <data name="UserLink.ErrorMessage" xml:space="preserve">
    <value>Please enter a valid user link.</value>
  </data>
  <data name="UserLink.Text" xml:space="preserve">
    <value>Link to User's Profile</value>
  </data>
  <data name="UserLink_DefaultValue.Help" xml:space="preserve">
    <value>New records will use this username.</value>
  </data>
  <data name="UserLink_DefaultValue.Text" xml:space="preserve">
    <value>Default Value:</value>
  </data>
  <data name="UserLink_InputSetting.Help" xml:space="preserve">
    <value>Enter a list of usernames separated with ";".</value>
  </data>
  <data name="UserLink_InputSetting.Text" xml:space="preserve">
    <value>List of Values:</value>
  </data>
  <data name="UserLink_NormalizeFlag.Help" xml:space="preserve">
    <value>Show user's username instead of his displayname</value>
  </data>
  <data name="UserLink_NormalizeFlag.Text" xml:space="preserve">
    <value>Show Username</value>
  </data>
  <data name="UserLink_OutputSetting.Help" xml:space="preserve">
    <value>Output of Caption can be controlled with Tokens. It defaults to [User:Displayname]</value>
  </data>
  <data name="UserLink_OutputSetting.Text" xml:space="preserve">
    <value>Caption options:</value>
  </data>
  <data name="ValueTooLong.ErrorMessage" xml:space="preserve">
    <value>Value entered is too long. Please shorten your input.</value>
  </data>
</root>