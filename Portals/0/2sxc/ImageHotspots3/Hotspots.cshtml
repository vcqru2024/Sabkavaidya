@inherits Custom.Hybrid.RazorTyped
@using ToSic.Razor.Blade;
@{
  // Get some helper commands for later on
  var helpers = GetCode("Helpers.cs");

  // Merge the settings on current item with the predefined Settings
  var hotspots = MyItem; // give it a nicer name so the code is easier to read
  var sharedSettings = AsStack(hotspots, App.Settings);
  var moduleId = MyContext.Module.Id;

  // define dom attribute for fancybox
  var fancyboxAttribute = "app-gallery7-fancybox-" + UniqueKey; 
}

@* The visible parts - image and dots to click on *@
<div class="app-hotspot3" @Kit.Toolbar.Default(hotspots)>
  <div class="hotspots" @helpers.EditAttr(moduleId, hotspots, sharedSettings)>
    @foreach (var marker in hotspots.Children("HotSpots")) {
      // Merge settings of marker, hotspot-set and defaults to always take the best option
      var markerSettings = AsStack(marker, hotspots, App.Settings);
      var markerIcon = markerSettings.Url("HotspotMarker.HotspotIcon");

      <div class="hotspot3-marker" style="@helpers.MarkerStyles(marker, markerSettings)" @fancyboxAttribute data-src='#hotspot3-content-@marker.Id-@UniqueKey'>
        <img loading="lazy" src='@Link.Image(markerIcon)' alt="@marker.Title" class="heartbeat">
      </div>
    }

    @* The main image, on which the the hotspots are placed - will adhere to "Content" image conventions *@
    @{
      var pictureClass = hotspots.IsDemoItem ? "" : "hotspot3-js-image ";
      var hotspotImgClass = pictureClass + "hotspot3-image";
    }
    @hotspots.Picture("Image", settings: "Content", imgClass: hotspotImgClass, imgAltFallback : hotspots.String("Title"))
  </div>
</div>

@Html.Partial("Hotspots.PartLayers.cshtml", new { hotspots })

@Html.Partial("Assets.cshtml", new { fancyboxAttribute })
