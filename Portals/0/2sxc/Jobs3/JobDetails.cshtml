@inherits Custom.Hybrid.RazorTyped
@using ToSic.Razor.Blade
@{
    var domAttribute = "app-jobs2-" + UniqueKey;

    // Get current job to show from the View-Query + some Helpers
    var job = AsItems(MyData).FirstOrDefault();

    @* Preflight: check if job found, else show notification and stop processing *@
    if (job == null)
    {
        <h1>@App.Resources.String("LabelNoResults")</h1>
        <a href="@App.Settings.Url("MainPage")" class="btn btn-outline-secondary">zur√ºck</a>
        Kit.Page.SetHttpStatus(404, "Error: Job not Found.");
        return;
    }

    var employmentTypes = AsItems(job.Children("EmploymentType")).ToArray();

    Kit.Page.SetTitle(job.String("Name"), "Details");

    if (App.Settings.Bool("GoogleJobsApi")) {
        #region Build JSON-LD

        var jsonDescription = Tag.Strong(job.String("Description")) + "<br/><br/>" + job.String("Intro") + "<br/><br/>" +
                            Tag.Strong(App.Resources.String("TasksHeading")) + job.String("Tasks") + Tag.Strong(App.Resources.String("QualificationsHeading")) +
                            job.String("Qualifications") + Tag.Strong(App.Resources.String("OurOfferHeading")) + job.String("OurOffer");

        var jsonLd = new Dictionary<string, object> {
            { "@context", "https://schema.org"},
            { "@type", "JobPosting" },
            { "title", job.String("Name") },
            { "description", jsonDescription},
            { "datePosted", job.DateTime("Date").ToString("s") },
            { "hiringOrganization", new Dictionary<string, object> {
                { "@type", "Organization" },
                { "name", App.Settings.String("Organization") },
                { "logo", MyContext.Site.Url.Replace("/job-app", "") + "/Portals/job-app/2sxc/Jobs2/src/2sic-logo-square.png" },
                { "sameAs", MyContext.Site.Url }
            }},
            { "jobLocation", new Dictionary<string, object> {
                {"@type", "Place"},
                { "address", new Dictionary<string, object> {
                    { "@type", "PostalAddress" },
                    { "streetAddress", App.Settings.String("OrganizationStreet") },
                    { "addressLocality", App.Settings.String("OrganizationCity") },
                    { "addressRegion", App.Settings.String("OrganizationRegion") },
                    { "postalCode", App.Settings.Int("OrganizationZip") },
                    { "addressCountry", App.Settings.String("OrganizationCountry") }

                }}
            }},
            { "employmentType", employmentTypes.Select(e => e.String("Key")) },
            { "directApply", true },
            { "identifier", new Dictionary<string, object> {
                { "@type", "PropertyValue" },
                { "name", App.Settings.String("Identifier") },
                { "value", job.Id }
            }}
        };

        Kit.Page.AddJsonLd(jsonLd);
        #endregion
    }
}
<div class="app-jobs2-details"  @Kit.Toolbar.Default(job)>
    <div class="row mb-3 mb-lg-5">
        <div class="col-md-7 order-md-first">
            <h1 class="display-2">
                <span class="mb-1 d-block">@App.Resources.String("NamePrefix")</span>
                @job.String("Name")
            </h1>
            <div>@App.Resources.String("DatePosted"): @job.DateTime("Date").ToString("d")</div>
        </div>
        <div class="col-md-4 order-md-last offset-lg-1">
            @if (Text.Has(job.String("Image"))) {
                @job.Picture("Image", settings: "Content", factor: "1/2", imgClass: "rounded", imgAltFallback : job.String("Name"))
            }
        </div>
    </div>

    <div class="row mb-3 mb-lg-4">
        <div class="col-12">
            <h2>@job.String("Description")</h2>
            <p>&nbsp;</p>
            <p style="white-space: pre-line">@job.String("Intro")</p>
        </div>
    </div>

    <div class="row mb-3 mb-lg-4">
        <div class="col-12">
            <h2>@App.Resources.String("TasksHeading")</h2>
            @job.Html("Tasks", container:"")
        </div>
    </div>

    <div class="row mb-3 mb-lg-4">
        <div class="col-12">
            <h2>@App.Resources.String("QualificationsHeading")</h2>
            @job.Html("Qualifications", container:"")
        </div>
    </div>

    <div class="row mb-3 mb-lg-4">
        <div class="col-12 mb-2">
            <h2>@App.Resources.String("OurOfferHeading")</h2>
            @job.Html("OurOffer", container:"")
        </div>
    </div>

    <div class="row mb-3 mb-lg-4">
        <div class="col-12 mb-2">
            @job.Html("Outro", container:"")
        </div>
    </div>

    <a href="@App.Settings.Url("MainPage")" class="btn btn-outline-secondary">@App.Resources.String("BtnBack")</a>
    @if (App.Settings.Bool("EnableRegistration")) {
        <a href="@App.Settings.Url("RegistrationPage")/jobId/@job.Id" class="btn btn-primary">@App.Resources.String("BtnRegistration")</a>
    }
</div>


@Html.Partial("shared/Assets.cshtml", new { domAttribute })
