@inherits Custom.Hybrid.RazorTyped
@using ToSic.Razor.Blade;

@{
  var fieldBuilder = GetCode("shared/FieldBuilder.cs");
  var job = AsItems(MyData["Job"]).FirstOrDefault();
  var domAttribute = "app-jobs2-" + UniqueKey;
}

@if (!App.Settings.Bool("EnableRegistration")) {
	<div class="alert alert-danger" role="alert">
    <span class="sr-only">Error:</span>
    @Html.Raw(App.Resources.String("MessageRegistrationDisabled", scrubHtml: "p"))
  </div>
  <a href="@App.Settings.Url("MainPage")" class="btn btn-outline-primary">@Html.Raw(App.Resources.String("BtnBack"))</a>
	
	Kit.Page.SetHttpStatus(404);
  return;
}

@* Show warning if 404, event not found *@
@if (job == null) {
  <div class="alert alert-danger" role="alert">
    <span class="sr-only">Error:</span>
    @App.Resources.String("LabelNoResults")
  </div>
  <a href="@App.Settings.Url("MainPage")" class="btn btn-outline-primary">@Html.Raw(App.Resources.String("BtnBack"))</a>

  Kit.Page.SetHttpStatus(404);
  return;
}

<div class="app-jobs2 app-jobs2-form" 
  @Kit.Toolbar.Default(job)
  @domAttribute
  data-webservice="app/auto/api/Form/ProcessForm"
>
	<input type="hidden" id="Job" name="Job" value="@job.Guid">

	@fieldBuilder.Text("JobName", true, true, job.String("Name"))

	@* Salutation *@
    @fieldBuilder.Radio("Salutation", true, 
      	new string[] {
        App.Resources.String("LabelMr"),
		App.Resources.String("LabelMrs")
      }
    )

	@fieldBuilder.Text("FirstName", true)
	@fieldBuilder.Text("LastName", true)
	@fieldBuilder.EMail("Mail", true)    
	@fieldBuilder.Text("Phone", false)
	@fieldBuilder.Text("MobilePhone", false)
	@fieldBuilder.Text("Street", true)
	@fieldBuilder.Text("ZIPCity", true)

	@* Country Select *@
	@fieldBuilder.DropDown("Country", true, App.Resources.String("CountrySelection").Split('\n'))    

	@fieldBuilder.File("ApplicationFile", true, ".pdf", "ApplicationFile")

	@* Terms *@
  @fieldBuilder.Checkbox("Gpdr", true)

	@* Submit Button *@
	<div class="mb-3 row">
		<div class="col-md-9 offset-sm-3">
			<a href="@App.Settings.Url("DetailsPage")/id/@job.Id" class='btn @(Kit.Css.Is("bs3") ? "btn-default" : "btn-outline-primary")'>@Html.Raw(App.Resources.String("BtnBack"))</a>
			<button type="button" app-jobs2-send class="btn btn-primary">@Html.Raw(App.Resources.String("BtnRegistration"))</button>
		</div>
	</div>  

	@AddHiddenMessage(App.Resources.String("MessageSending"), "warning", "msgSending")
	@AddHiddenMessage(App.Resources.String("ValidationRequired"), "danger", "msgIncomplete")
	@AddHiddenMessage(App.Resources.String("RegistrationError"), "danger", "msgError")
	<div id="msgOk" class="alert alert-success app-jobs2-message" role="alert">
		<strong>@Html.Raw(App.Resources.String("SuccessThanks"))</strong>
		@Html.Raw(App.Resources.String("SuccessMessage"))
	</div>

	@* if is required, because all app-job2-config-warning are shown after submit *@
	@if (!Text.Has(App.Settings.String("OwnerMail")) || !Text.Has(App.Settings.String("MailFrom"))) {

		<div class="alert alert-warning" id="" role="alert" app-job2-config-warning>
			@Html.Raw(App.Resources.String("MessageDefaultMailSettings", scrubHtml: "p"))
		</div>		
	}      
</div>

@functions {
  object AddHiddenMessage(string message, string type = "warning", string id = "", string attribute = "") {
    var classes = "alert alert-" + type + " app-jobs2-message";
		var rawMessage = Kit.Scrub.Only(message, "p");
    var messageDiv = Tag.Div(rawMessage).Class(classes).Id(id).Attr("role", "alert");
    if (attribute != "") { messageDiv.Attr(attribute, ""); }
    return messageDiv;
  }
}

@Html.Partial("shared/Assets.cshtml", new { domAttribute })