/************************************************************/
/*****              SqlDataProvider                     *****/
/*****                                                  *****/
/*****                                                  *****/
/***** Note: To manually execute this script you must   *****/
/*****       perform a search and replace operation     *****/
/*****       for {databaseOwner} and {objectQualifier}  *****/
/*****                                                  *****/
/************************************************************/


CREATE TABLE {databaseOwner}[{objectQualifier}ContentPro_ContentSocialGroup](
	[ContentSocialGroupID] [int] IDENTITY(1,1) NOT NULL,
	[RoleID] [int] NOT NULL,
	[ContentID] [int] NOT NULL,
 CONSTRAINT [PK{objectQualifier}ContentPro_ContentSocialGroup] PRIMARY KEY CLUSTERED 
(
	[ContentSocialGroupID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)
)

GO

ALTER TABLE {databaseOwner}[{objectQualifier}ContentPro_ContentSocialGroup]  WITH CHECK ADD  CONSTRAINT [FK{objectQualifier}ContentPro_ContentSocialGroup_ContentPro_Content] FOREIGN KEY([ContentID])
REFERENCES {databaseOwner}[{objectQualifier}ContentPro_Content] ([ContentID])
ON DELETE CASCADE
GO

ALTER TABLE {databaseOwner}[{objectQualifier}ContentPro_ContentSocialGroup] CHECK CONSTRAINT [FK{objectQualifier}ContentPro_ContentSocialGroup_ContentPro_Content]
GO

ALTER TABLE {databaseOwner}[{objectQualifier}ContentPro_ContentSocialGroup]  WITH CHECK ADD  CONSTRAINT [FK{objectQualifier}ContentPro_ContentSocialGroup_Roles] FOREIGN KEY([RoleID])
REFERENCES {databaseOwner}[{objectQualifier}Roles] ([RoleID])
GO

ALTER TABLE {databaseOwner}[{objectQualifier}ContentPro_ContentSocialGroup] CHECK CONSTRAINT [FK{objectQualifier}ContentPro_ContentSocialGroup_Roles]
GO


if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}{objectQualifier}ContentPro_GetArticlesDelSort') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
	drop procedure {databaseOwner}{objectQualifier}ContentPro_GetArticlesDelSort
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}ContentPro_GetArticlesDelSort] 
	
	@RoleID INTEGER,
	@FieldSetID INTEGER
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	Select *
from {databaseOwner}{objectQualifier}ContentPro_Content  inner join {databaseOwner}{objectQualifier}ContentPro_ContentSocialGroup ss on ss.ContentID={databaseOwner}{objectQualifier}ContentPro_Content.ContentID
WHERE ss.RoleID = @RoleID and  FieldSetID = @FieldSetID and Active = 1 AND ((StartDT<=GETDATE() AND EndDT >= GETDATE()) OR (StartDT IS NULL AND EndDT IS NULL) OR (StartDT IS NULL AND EndDT >= GETDATE()) OR (StartDT <= GETDATE() AND EndDT IS NULL)) ORDER BY {databaseOwner}{objectQualifier}ContentPro_Content.ContentID
END

GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}{objectQualifier}ContentPro_GetFilterCategoryContentGroupID') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
	drop procedure {databaseOwner}{objectQualifier}ContentPro_GetFilterCategoryContentGroupID
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}ContentPro_GetFilterCategoryContentGroupID]
	-- Add the parameters for the stored procedure here
		@RoleID INTEGER,
		@CatIDs {databaseOwner}{objectQualifier}ContentProCategoryList READONLY,
	@FieldSetID INTEGER,
	@Field nvarchar(max),
	@SortDirection nvarchar(max),
	@NumberOfArticles int
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
		IF (@NumberOfArticles = 0)
	BEGIN
	   select * from {databaseOwner}{objectQualifier}ContentPro_Content Content
      inner join {databaseOwner}{objectQualifier}ContentPro_ContentSocialGroup ss on ss.ContentID=Content.ContentID
WHERE ss.RoleID = @RoleID and ((Content.StartDT<=GETDATE() AND Content.EndDT >=GETDATE()) 
	   OR (Content.StartDT IS NULL AND Content.EndDT >=GETDATE()) 
	   OR (StartDT IS NULL AND EndDT IS NULL)
	   OR (Content.StartDT<=GETDATE() AND Content.EndDT IS NULL ))
       AND @FieldSetID = Content.FieldSetID AND Content.Active = 1

       order by 
	   
		CASE WHEN @SortDirection = 'asc' AND IsNumeric(@Field) = 1 then ContentXML.value('(/Article/Field[@FieldName=sql:variable("@Field")])[1]', 'nvarchar(max)') END ASC,
		CASE WHEN @SortDirection = 'desc' AND IsNumeric(@Field) = 1 then ContentXML.value('(/Article/Field[@FieldName=sql:variable("@Field")])[1]', 'nvarchar(max)') END DESC,
		CASE WHEN @SortDirection = 'desc' AND @Field = 'StartDT' then Content.StartDT END DESC,
		CASE WHEN @SortDirection = 'asc' AND @Field = 'StartDT' then Content.StartDT END ASC,
		CASE WHEN @SortDirection = 'asc' AND @Field = 'EndDT' then Content.EndDT END ASC,
		CASE WHEN @SortDirection = 'desc' AND @Field = 'EndDT' then Content.EndDT END DESC,
		CASE WHEN @SortDirection = 'asc' AND @Field = 'Title' then Content.Title END ASC,
		CASE WHEN @SortDirection = 'desc' AND @Field = 'Title' then Content.Title END DESC,
		CASE WHEN @SortDirection = 'asc' AND @Field = 'Sort' then Content.Sort END ASC,
		CASE WHEN @SortDirection = 'desc' AND @Field = 'Sort' then Content.Sort END DESC
	END
	ELSE
	BEGIN
	   select top (@NumberOfArticles) * from {databaseOwner}{objectQualifier}ContentPro_Content Content
        inner join {databaseOwner}{objectQualifier}ContentPro_ContentSocialGroup ss on ss.ContentID=Content.ContentID
WHERE ss.RoleID = @RoleID and  ((Content.StartDT<=GETDATE() AND Content.EndDT >=GETDATE()) 
	   OR (Content.StartDT IS NULL AND Content.EndDT >=GETDATE()) 
	   OR (StartDT IS NULL AND EndDT IS NULL)
	   OR (Content.StartDT<=GETDATE() AND Content.EndDT IS NULL ))
       AND @FieldSetID = Content.FieldSetID AND Content.Active = 1

       order by 
	   
		CASE WHEN @SortDirection = 'asc' AND IsNumeric(@Field) = 1 then ContentXML.value('(/Article/Field[@FieldName=sql:variable("@Field")])[1]', 'nvarchar(max)') END ASC,
		CASE WHEN @SortDirection = 'desc' AND IsNumeric(@Field) = 1 then ContentXML.value('(/Article/Field[@FieldName=sql:variable("@Field")])[1]', 'nvarchar(max)') END DESC,
		CASE WHEN @SortDirection = 'desc' AND @Field = 'StartDT' then Content.StartDT END DESC,
		CASE WHEN @SortDirection = 'asc' AND @Field = 'StartDT' then Content.StartDT END ASC,
		CASE WHEN @SortDirection = 'asc' AND @Field = 'EndDT' then Content.EndDT END ASC,
		CASE WHEN @SortDirection = 'desc' AND @Field = 'EndDT' then Content.EndDT END DESC,
		CASE WHEN @SortDirection = 'asc' AND @Field = 'Title' then Content.Title END ASC,
		CASE WHEN @SortDirection = 'desc' AND @Field = 'Title' then Content.Title END DESC,
		CASE WHEN @SortDirection = 'asc' AND @Field = 'Sort' then Content.Sort END ASC,
		CASE WHEN @SortDirection = 'desc' AND @Field = 'Sort' then Content.Sort END DESC
	END

END

GO


if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}{objectQualifier}ContentPro_GetFilterCategoryContentDateGroupID') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
	drop procedure {databaseOwner}{objectQualifier}ContentPro_GetFilterCategoryContentDateGroupID
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}ContentPro_GetFilterCategoryContentDateGroupID]
	@RoleID INTEGER,
	@FieldSetID INTEGER,
	@Field nvarchar(max),
	@SortDirection nvarchar(max),
	@Month integer,
	@Year integer
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    select * from {databaseOwner}{objectQualifier}ContentPro_Content
        inner join {databaseOwner}{objectQualifier}ContentPro_ContentSocialGroup ss on ss.ContentID={databaseOwner}{objectQualifier}ContentPro_Content.ContentID
       
       where ss.RoleID = @RoleID 
       
       AND (YEAR({databaseOwner}{objectQualifier}ContentPro_Content.StartDT)=@Year AND MONTH({databaseOwner}{objectQualifier}ContentPro_Content.StartDT)=@Month)
	   
       AND @FieldSetID = {databaseOwner}{objectQualifier}ContentPro_Content.FieldSetID AND {databaseOwner}{objectQualifier}ContentPro_Content.Active = 1

       order by 
	   
		CASE WHEN @SortDirection = 'asc' AND IsNumeric(@Field) = 1 then ContentXML.value('(/Article/Field[@FieldName=sql:variable("@Field")])[1]', 'nvarchar(max)') END ASC,
		CASE WHEN @SortDirection = 'desc' AND IsNumeric(@Field) = 1 then ContentXML.value('(/Article/Field[@FieldName=sql:variable("@Field")])[1]', 'nvarchar(max)') END DESC,
		CASE WHEN @SortDirection = 'desc' AND @Field = 'StartDT' then {databaseOwner}{objectQualifier}ContentPro_Content.StartDT END DESC,
		CASE WHEN @SortDirection = 'asc' AND @Field = 'StartDT' then {databaseOwner}{objectQualifier}ContentPro_Content.StartDT END ASC,
		CASE WHEN @SortDirection = 'asc' AND @Field = 'EndDT' then {databaseOwner}{objectQualifier}ContentPro_Content.EndDT END ASC,
		CASE WHEN @SortDirection = 'desc' AND @Field = 'EndDT' then {databaseOwner}{objectQualifier}ContentPro_Content.EndDT END DESC,
		CASE WHEN @SortDirection = 'asc' AND @Field = 'Title' then {databaseOwner}{objectQualifier}ContentPro_Content.Title END ASC,
		CASE WHEN @SortDirection = 'desc' AND @Field = 'Title' then {databaseOwner}{objectQualifier}ContentPro_Content.Title END DESC,
		CASE WHEN @SortDirection = 'asc' AND @Field = 'Sort' then {databaseOwner}{objectQualifier}ContentPro_Content.Sort END ASC,
		CASE WHEN @SortDirection = 'desc' AND @Field = 'Sort' then {databaseOwner}{objectQualifier}ContentPro_Content.Sort END DESC
END

GO


if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}{objectQualifier}ContentPro_GetFilterContentGroupID') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
	drop procedure {databaseOwner}{objectQualifier}ContentPro_GetFilterContentGroupID
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}ContentPro_GetFilterContentGroupID]
@RoleID INTEGER,
	@FieldSetID INTEGER,
	@Field nvarchar(max),
	@SortDirection nvarchar(max)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

      select * from {databaseOwner}{objectQualifier}ContentPro_Content Content
         inner join {databaseOwner}{objectQualifier}ContentPro_ContentSocialGroup ss on ss.ContentID=Content.ContentID
WHERE ss.RoleID = @RoleID and ((Content.StartDT<=GETDATE() AND Content.EndDT >=GETDATE()) 
	   OR (Content.StartDT IS NULL AND Content.EndDT >=GETDATE()) 
	   OR (StartDT IS NULL AND EndDT IS NULL)
	   OR (Content.StartDT<=GETDATE() AND Content.EndDT IS NULL ))
       AND @FieldSetID = Content.FieldSetID AND Content.Active = 1

       order by 
                 ContentXML.value('(/Article/Field[@FieldName=sql:variable("@Field")])[1]', 'nvarchar(max)') asc
END

GO




/************************************************************/
/*****              SqlDataProvider                     *****/
/************************************************************/