<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="plTabName.Help" xml:space="preserve">
    <value>Enter product detail page name, it can't be null.</value>
  </data>
  <data name="wsPage.Text" xml:space="preserve">
    <value>Detail Page</value>
  </data>
  <data name="ControlTitle_adminproduct_typedetailwizard.Text" xml:space="preserve">
    <value>Department Detail Page Settings Wizard</value>
  </data>
  <data name="lblFinish.Text" xml:space="preserve">
    <value>Click "Finish" button to save data</value>
  </data>
  <data name="valTabName.ErrorMessage" xml:space="preserve">
    <value>Product detail page name can't be null.</value>
  </data>
  <data name="plTabDescription.Text" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="plParentTab.Help" xml:space="preserve">
    <value>Select the page that you would like this page to be a child of.</value>
  </data>
  <data name="Tip_General.Text" xml:space="preserve">
    <value>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;For each department, Classified Pro needs a page to dispaly product detail which belongs to it. That page should have a Cp_Product_Detail sub module instance on it and its "product department" property must be the same as current department.&lt;br/&gt;&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Would you like Classified Pro to create a new page and add Cp_Product_Detail sub module instance for you?</value>
  </data>
  <data name="li_CreateType_CreateNew.Text" xml:space="preserve">
    <value>Yes, create a new page and add Cp_Product_Detail sub module instance for me.</value>
  </data>
  <data name="li_CreateType_UseExisting.Text" xml:space="preserve">
    <value>No, I want select a existing page and add Cp_Product_Detail sub module instance by myself.</value>
  </data>
  <data name="lblPage.Text" xml:space="preserve">
    <value>Department detail page</value>
  </data>
  <data name="plTabKeywords.Text" xml:space="preserve">
    <value>Keywords</value>
  </data>
  <data name="plTabKeywords.Help" xml:space="preserve">
    <value>Enter some keywords for this page (separated by commas).  These keywords are used by search engines to help index your site's pages.</value>
  </data>
  <data name="plParentTab.Text" xml:space="preserve">
    <value>Parent Page</value>
  </data>
  <data name="plTabTitle.Text" xml:space="preserve">
    <value>Page Title</value>
  </data>
  <data name="plTabTitle.Help" xml:space="preserve">
    <value>Enter a title for the page here. The text you enter will be displayed in the browser window title.</value>
  </data>
  <data name="General.Text" xml:space="preserve">
    <value>"{0}" detail page</value>
  </data>
  <data name="plExistingTab.Text" xml:space="preserve">
    <value>Existing Page</value>
  </data>
  <data name="plExistingTab.Help" xml:space="preserve">
    <value>Select existing page as department detail page, please make sure there is Cp_Product_Detail sub module instance on it. You can add Cp_Product_Detail sub module instance later. Note, its "product department" must be the same as current department.</value>
  </data>
  <data name="wsGeneral.Text" xml:space="preserve">
    <value>General</value>
  </data>
  <data name="plTabName.Text" xml:space="preserve">
    <value>Page Name</value>
  </data>
  <data name="plTabDescription.Help" xml:space="preserve">
    <value>Enter a description about this page here.</value>
  </data>
  <data name="error_ExistingTabPath.Text" xml:space="preserve">
    <value>There is a existing tab which has a same tab name, please check it.</value>
  </data>
  <data name="error_InvalidTabName.Text" xml:space="preserve">
    <value>Invalid page name, please change it.</value>
  </data>
  <data name="plPermissions.Help" xml:space="preserve">
    <value>Choose the groups of people that can view and administer this page .Please make sure "View Page" permission is selected to "All Users" if you allow all users to view product.</value>
  </data>
  <data name="plPermissions.Text" xml:space="preserve">
    <value>Permissions</value>
  </data>
  <data name="error_InvalidTab.Text" xml:space="preserve">
    <value>Please select a existing tab as department detail page.</value>
  </data>
  <data name="li_CreateType_Later.Text" xml:space="preserve">
    <value>I will consider it later. (You can click the "Run detail page setting wizard" later in "Department" admin page).</value>
  </data>
</root>