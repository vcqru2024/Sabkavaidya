<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="plRatingImage.Text" xml:space="preserve">
    <value>Rating Image</value>
  </data>
  <data name="plRatingImage.Help" xml:space="preserve">
    <value>Rating Image</value>
  </data>
  <data name="plRelatedProductRows.Text" xml:space="preserve">
    <value>Related Product Rows</value>
  </data>
  <data name="plRelatedProductRows.Help" xml:space="preserve">
    <value>Related product rows</value>
  </data>
  <data name="plShowRelatedProduct.Text" xml:space="preserve">
    <value>Show Related Products</value>
  </data>
  <data name="plShowRelatedProduct.Help" xml:space="preserve">
    <value>Show Related Products</value>
  </data>
  <data name="plShowPrice.Help" xml:space="preserve">
    <value>Check to show product price</value>
  </data>
  <data name="plShowPrice.Text" xml:space="preserve">
    <value>Show Price</value>
  </data>
  <data name="plShowOrderCount.Help" xml:space="preserve">
    <value>Show order count input text which allows user modify while ordering.This is useful for most situations.However, if you sell roles or software, you may not need it.</value>
  </data>
  <data name="plShowOrderCount.Text" xml:space="preserve">
    <value>Show Order Count</value>
  </data>
  <data name="plShowPromoStart.Help" xml:space="preserve">
    <value>Check to show promo price start date in detail (if it exist).</value>
  </data>
  <data name="plShowPromoStart.Text" xml:space="preserve">
    <value>Show Promo Start</value>
  </data>
  <data name="plShowName.Help" xml:space="preserve">
    <value>Show product name</value>
  </data>
  <data name="plShowName.Text" xml:space="preserve">
    <value>Show Name</value>
  </data>
  <data name="plShowSummary.Help" xml:space="preserve">
    <value>Show product summary</value>
  </data>
  <data name="plShowSummary.Text" xml:space="preserve">
    <value>Show Summary</value>
  </data>
  <data name="plType.Help" xml:space="preserve">
    <value>Select product department which will display their detail.</value>
  </data>
  <data name="plType.Text" xml:space="preserve">
    <value>Select Department</value>
  </data>
  <data name="ControlTitle_edit.Text" xml:space="preserve">
    <value>Product Detail Settings</value>
  </data>
  <data name="plCommentRowCount.Help" xml:space="preserve">
    <value>Enter comment rows per page</value>
  </data>
  <data name="plCommentRowCount.Text" xml:space="preserve">
    <value>Comment Rows</value>
  </data>
  <data name="plShowDescription.Help" xml:space="preserve">
    <value>Show product description.</value>
  </data>
  <data name="plShowDescription.Text" xml:space="preserve">
    <value>Show Description</value>
  </data>
  <data name="plShowAuthorAvatar.Help" xml:space="preserve">
    <value>Check to show creator avatar in author information</value>
  </data>
  <data name="plShowAuthorAvatar.Text" xml:space="preserve">
    <value>Show Creator Avatar</value>
  </data>
  <data name="plShowAuthorBiography.Help" xml:space="preserve">
    <value>Check to display author biography as "About author"</value>
  </data>
  <data name="plShowAuthorBiography.Text" xml:space="preserve">
    <value>Show Creator Biography</value>
  </data>
  <data name="plShowSocialBookmarks.Help" xml:space="preserve">
    <value>Check to display show social bookmarks</value>
  </data>
  <data name="plShowSocialBookmarks.Text" xml:space="preserve">
    <value>Show Social Bookmarks</value>
  </data>
  <data name="plShowTags.Help" xml:space="preserve">
    <value>Check to show product tags</value>
  </data>
  <data name="plShowTags.Text" xml:space="preserve">
    <value>Show Tags</value>
  </data>
  <data name="plShowAuthor.Help" xml:space="preserve">
    <value>Show product created user</value>
  </data>
  <data name="plShowAuthor.Text" xml:space="preserve">
    <value>Show Creator</value>
  </data>
  <data name="plShowViews.Help" xml:space="preserve">
    <value>Check to show product view numbers</value>
  </data>
  <data name="plShowViews.Text" xml:space="preserve">
    <value>Show Views</value>
  </data>
  <data name="plTagsPerRow.Help" xml:space="preserve">
    <value>Enter tags which will be displayed per row.</value>
  </data>
  <data name="plTagsPerRow.Text" xml:space="preserve">
    <value>Tags Per Row</value>
  </data>
  <data name="plShowAddFavorite.Help" xml:space="preserve">
    <value>Check to display a "add favorite" button to let user add this page as favorite.</value>
  </data>
  <data name="plShowAddFavorite.Text" xml:space="preserve">
    <value>Show "Add Favorite" Button</value>
  </data>
  <data name="plShowPrint.Help" xml:space="preserve">
    <value>Check to display a "print" button to let user print this page.</value>
  </data>
  <data name="plShowPrint.Text" xml:space="preserve">
    <value>Show "Print" button</value>
  </data>
  <data name="plShowReturn.Help" xml:space="preserve">
    <value>Check to display a "return" button to let user navigate back.</value>
  </data>
  <data name="plShowReturn.Text" xml:space="preserve">
    <value>Show "Return" Button</value>
  </data>
  <data name="plUDFieldList.Help" xml:space="preserve">
    <value>Choose user defined fields which will be displayed in built in template.Note, it works only when "Use built in template" option is checked.</value>
  </data>
  <data name="plUDFieldList.Text" xml:space="preserve">
    <value>Show Fields</value>
  </data>
  <data name="plUDField_ImageHeight.Help" xml:space="preserve">
    <value>Control the image height of user defined fields.</value>
  </data>
  <data name="plUDField_ImageHeight.Text" xml:space="preserve">
    <value>User defined image height</value>
  </data>
  <data name="plUDField_ImageWidth.Help" xml:space="preserve">
    <value>Control the image width of user defined fields. </value>
  </data>
  <data name="plUDField_ImageWidth.Text" xml:space="preserve">
    <value>User Defined Image Width</value>
  </data>
  <data name="plUseBuiltInTemplate.Help" xml:space="preserve">
    <value>Use built in tempate to display user defined fields.Uncheck this option if you want to display user defined fields via your own tempaltes. For more detail about customize template, please see user guide document.</value>
  </data>
  <data name="plUseBuiltInTemplate.Text" xml:space="preserve">
    <value>Use Built-in Template</value>
  </data>
  <data name="secGeneral.Text" xml:space="preserve">
    <value>General</value>
  </data>
  <data name="secUDField.Text" xml:space="preserve">
    <value>Custom Attributes</value>
  </data>
  <data name="plRelatedAudioPerRow.Help" xml:space="preserve">
    <value>Column per row when display Audio list</value>
  </data>
  <data name="plRelatedAudioPerRow.Text" xml:space="preserve">
    <value>Columns Per Row</value>
  </data>
  <data name="plRelatedImagePerRow.Help" xml:space="preserve">
    <value>Column per row when display Image list</value>
  </data>
  <data name="plRelatedImagePerRow.Text" xml:space="preserve">
    <value>Columns Per Row</value>
  </data>
  <data name="plRelatedImageWidth.Help" xml:space="preserve">
    <value>Related image width while displaying in list. default value is 90.</value>
  </data>
  <data name="plRelatedImageWidth.Text" xml:space="preserve">
    <value>Related Image Width</value>
  </data>
  <data name="plRelatedProductImageWidth.Help" xml:space="preserve">
    <value>Related product image width while displaying. default value is 90.</value>
  </data>
  <data name="plRelatedProductImageWidth.Text" xml:space="preserve">
    <value>Related Product Image Width</value>
  </data>
  <data name="plRelatedVideoPerRow.Help" xml:space="preserve">
    <value>Column per row when display video list</value>
  </data>
  <data name="plRelatedVideoPerRow.Text" xml:space="preserve">
    <value>Columns Per Row</value>
  </data>
  <data name="plShowDelivery.Help" xml:space="preserve">
    <value>Show product delivery information in detail (if it exist).</value>
  </data>
  <data name="plShowDelivery.Text" xml:space="preserve">
    <value>Show Delivery</value>
  </data>
  <data name="plShowLicense.Help" xml:space="preserve">
    <value>Show product license information in detail (if it exist).</value>
  </data>
  <data name="plShowLicense.Text" xml:space="preserve">
    <value>Show License</value>
  </data>
  <data name="plShowPromoEnd.Help" xml:space="preserve">
    <value>Check to show promo price end date in detail (if it exist).</value>
  </data>
  <data name="plShowPromoEnd.Text" xml:space="preserve">
    <value>Show Promo End</value>
  </data>
  <data name="plShowRelatedAudio.Help" xml:space="preserve">
    <value>Show related audio list (if exist)</value>
  </data>
  <data name="plShowRelatedAudio.Text" xml:space="preserve">
    <value>Show Related Audio</value>
  </data>
  <data name="plShowRelatedImage.Help" xml:space="preserve">
    <value>Show related Image list (if exist)</value>
  </data>
  <data name="plShowRelatedImage.Text" xml:space="preserve">
    <value>Show Related Images</value>
  </data>
  <data name="plShowRelatedVideo.Help" xml:space="preserve">
    <value>Show related video list (if exist)</value>
  </data>
  <data name="plShowRelatedVideo.Text" xml:space="preserve">
    <value>Show Related Videos</value>
  </data>
  <data name="plShowSpecialOffer.Help" xml:space="preserve">
    <value>Show product special offer information in detail (if it exist).</value>
  </data>
  <data name="plShowSpecialOffer.Text" xml:space="preserve">
    <value>Show Special Offer</value>
  </data>
  <data name="plShowStockQuantity.Help" xml:space="preserve">
    <value>Show product stock quantity information in detail (if it exist).</value>
  </data>
  <data name="plShowStockQuantity.Text" xml:space="preserve">
    <value>Show Stock Quantity</value>
  </data>
  <data name="plShowSupport.Help" xml:space="preserve">
    <value>Show product support information in detail (if it exist).</value>
  </data>
  <data name="plShowSupport.Text" xml:space="preserve">
    <value>Show Support</value>
  </data>
  <data name="plVideoImageWidth.Help" xml:space="preserve">
    <value>Enter video image width</value>
  </data>
  <data name="plVideoImageWidth.Text" xml:space="preserve">
    <value>Video Image Width</value>
  </data>
  <data name="plVideoPlayerHeight.Help" xml:space="preserve">
    <value>Enter video player width, default value is 380 (note, the video player control bar need 20px)</value>
  </data>
  <data name="plVideoPlayerHeight.Text" xml:space="preserve">
    <value>Video Player Height</value>
  </data>
  <data name="plVideoPlayerWidth.Help" xml:space="preserve">
    <value>Enter video player width, default value is 480</value>
  </data>
  <data name="plVideoPlayerWidth.Text" xml:space="preserve">
    <value>Video Player Width</value>
  </data>
  <data name="secRelatedAudio.Text" xml:space="preserve">
    <value>Related Audio</value>
  </data>
  <data name="secRelatedImage.Text" xml:space="preserve">
    <value>Related Images</value>
  </data>
  <data name="secRelatedProduct.Text" xml:space="preserve">
    <value>Related Products</value>
  </data>
  <data name="secRelatedVideo.Text" xml:space="preserve">
    <value>Related Videos</value>
  </data>
  <data name="plShowOptionList.Help" xml:space="preserve">
    <value>Show product options  in detail (if it exist).</value>
  </data>
  <data name="plShowOptionList.Text" xml:space="preserve">
    <value>Show Product Options</value>
  </data>
  <data name="plShowAddWatch.Help" xml:space="preserve">
    <value>Check to show "Add To Watch List" button</value>
  </data>
  <data name="plShowAddWatch.Text" xml:space="preserve">
    <value>Show "Add To Watch List" Button</value>
  </data>
  <data name="plRatingRowCount.Help" xml:space="preserve">
    <value>Enter rating rows  which displayed after product detail per page</value>
  </data>
  <data name="plRatingRowCount.Text" xml:space="preserve">
    <value>Rating Rows</value>
  </data>
  <data name="plShowComment.Help" xml:space="preserve">
    <value>Check to show product comment in detail.</value>
  </data>
  <data name="plShowComment.Text" xml:space="preserve">
    <value>Show Comment</value>
  </data>
  <data name="plShowRating.Help" xml:space="preserve">
    <value>Check to show product rating in detail.</value>
  </data>
  <data name="plShowRating.Text" xml:space="preserve">
    <value>Show Rating</value>
  </data>
  <data name="secOrder.Text" xml:space="preserve">
    <value>Online Order (apply to "Fixed Price" department)</value>
  </data>
  <data name="plTabStyle.Help" xml:space="preserve">
    <value>Choose tab css style while displaying product information in detail. Css package locate under desktopmodules/crossclassified/css/jquery folder, you can customize your own.</value>
  </data>
  <data name="plTabStyle.Text" xml:space="preserve">
    <value>Tab Css</value>
  </data>
  <data name="plCheckXhtmlDocType.Help" xml:space="preserve">
    <value>Module needs a skin which doctype is  xhtml compitable (this is the recommend settings in DNN 5 skins).If your skin is not xhmtl compitable, check this option to let module fix it.</value>
  </data>
  <data name="plCheckXhtmlDocType.Text" xml:space="preserve">
    <value>Check Xhtml Compitable</value>
  </data>
  <data name="plShowAttachment.Help" xml:space="preserve">
    <value>Check to show product related attachments in detail (if exist)</value>
  </data>
  <data name="plShowAttachment.Text" xml:space="preserve">
    <value>Show Attachments</value>
  </data>
  <data name="plShowPublishDate.Help" xml:space="preserve">
    <value>Check to show product publish date in detail.</value>
  </data>
  <data name="plShowPublishDate.Text" xml:space="preserve">
    <value>Show Publish Date</value>
  </data>
  <data name="plShowAddTicket.Help" xml:space="preserve">
    <value>Check to show a "add help ticket" button to let user add help ticket</value>
  </data>
  <data name="plShowAddTicket.Text" xml:space="preserve">
    <value>Show "Add Ticket" Button</value>
  </data>
  <data name="plShowField.Help" xml:space="preserve">
    <value>Check to show {0} in detail</value>
  </data>
  <data name="plShowField.Text" xml:space="preserve">
    <value>Show {0}</value>
  </data>
  <data name="plShowPackageFee.Help" xml:space="preserve">
    <value>Show product package fee in detail</value>
  </data>
  <data name="plShowPackageFee.Text" xml:space="preserve">
    <value>Show Package Fee</value>
  </data>
  <data name="plShowSku.Help" xml:space="preserve">
    <value>Show product sku in detail</value>
  </data>
  <data name="plShowSku.Text" xml:space="preserve">
    <value>Show Sku</value>
  </data>
  <data name="plShowWeight.Help" xml:space="preserve">
    <value>Show product weight in detail</value>
  </data>
  <data name="plShowWeight.Text" xml:space="preserve">
    <value>Show Weight</value>
  </data>
  <data name="plHideEmptyTransactionHistory.Help" xml:space="preserve">
    <value>Check this option to hide transaction history tab if no transaction occured for current product.</value>
  </data>
  <data name="plHideEmptyTransactionHistory.Text" xml:space="preserve">
    <value>Hide Empty Transaction</value>
  </data>
  <data name="plShowPriceInTransaction.Help" xml:space="preserve">
    <value>Check to show price in transaction history.</value>
  </data>
  <data name="plShowPriceInTransaction.Text" xml:space="preserve">
    <value>Show Price In Transaction</value>
  </data>
  <data name="plShowTransactionHistory.Help" xml:space="preserve">
    <value>Check to show transaction history in product detail.Note, if current department doesn't support online order, then module will ignore this settings.</value>
  </data>
  <data name="plShowTransactionHistory.Text" xml:space="preserve">
    <value>Show Transaction History</value>
  </data>
  <data name="plTransactionPerPage.Help" xml:space="preserve">
    <value>Enter how many transaction history will displayed in single page.</value>
  </data>
  <data name="plTransactionPerPage.Text" xml:space="preserve">
    <value>Transaction Per Page</value>
  </data>
  <data name="secTransactionHistory.Text" xml:space="preserve">
    <value>Transaction History (apply to "Fixed Price" department)</value>
  </data>
  <data name="Tip_TabStyle.Text" xml:space="preserve">
    <value>Choose jquery tab css style while displaying product information in detail. Module provides &lt;font color="red"&gt;24&lt;/font&gt; css styles (locates under DesktopModules/CrossClassified/css/jquery-ui-themes-1.11.4/themes folder), you can customize your own.</value>
  </data>
  <data name="Tip_UdField.Text" xml:space="preserve">
    <value>Custom attributes are created in "Cp_Admin module - Admin Control Panel - Configurations - System Data - Attributes". You can use built in tempate to display these defined fields. Uncheck this option if you want to display user defined fields via your own tempaltes. For more detail about customize template, please see user guide document.</value>
  </data>
  <data name="plShowCaptchaInComment.Help" xml:space="preserve">
    <value>Check on this option to display captcha control to avoid spam comments.</value>
  </data>
  <data name="plShowCaptchaInComment.Text" xml:space="preserve">
    <value>Show Captcha In Comment</value>
  </data>
  <data name="plUDField_CheckBoxList_Enabled.Help" xml:space="preserve">
    <value>If you use check box list to display custom attributes, they will display as disabled by default to avoid visitor select. However, if they look too dim, you can check on this option to enable it.</value>
  </data>
  <data name="plUDField_CheckBoxList_Enabled.Text" xml:space="preserve">
    <value>Check Box List Enabled</value>
  </data>
  <data name="plUDField_CheckBoxList_RepeatColumns.Help" xml:space="preserve">
    <value>If you use check box list to display custom attributes, they will display as 1 column per row by default.You can specify more columns per row to let it looks good.</value>
  </data>
  <data name="plUDField_CheckBoxList_RepeatColumns.Text" xml:space="preserve">
    <value>Check Box List Repeat</value>
  </data>
  <data name="plShowLastModifiedDate.Help" xml:space="preserve">
    <value>Check to show last modified date on detail.</value>
  </data>
  <data name="plShowLastModifiedDate.Text" xml:space="preserve">
    <value>Show Last Modified Date</value>
  </data>
  <data name="MustBetween0To18.Text" xml:space="preserve">
    <value>Value must between 0 - 18</value>
  </data>
  <data name="plGoogleMapStyle.Help" xml:space="preserve">
    <value>The container style for hosting Google Map. You can change its width/height to provide different space to show Google map.</value>
  </data>
  <data name="plGoogleMapStyle.Text" xml:space="preserve">
    <value>Container Style</value>
  </data>
  <data name="plGoogleMapZoom.Help" xml:space="preserve">
    <value>The initial resolution at which to display the map is set by the zoom property, where zoom 0 corresponds to a map of the Earth fully zoomed out, and higher zoom levels zoom in at a higher resolution.</value>
  </data>
  <data name="plGoogleMapZoom.Text" xml:space="preserve">
    <value>Map Zoom</value>
  </data>
  <data name="plRegisterJQZoomScript.Help" xml:space="preserve">
    <value>&lt;p&gt;&amp;nbsp;&amp;nbsp;JQuery zoom is a javascript image magnifier which can show your product images elegantly (see demo image below).Classified Pro module already has a template (ProductDetail_JQZoom) which integrate it.You can use it as follows:&lt;br/&gt;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;1.In "General - Template", select "ProductDetail_JQZoom".&lt;br/&gt;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;2.Check on "Register JQuery zoom script" option below.
&lt;/p&gt;</value>
  </data>
  <data name="plRegisterJQZoomScript.Text" xml:space="preserve">
    <value>Register JQuery Zoom Script</value>
  </data>
  <data name="plRelatedImageHeight.Help" xml:space="preserve">
    <value>Related image height while displaying in list. default value is 90.</value>
  </data>
  <data name="plRelatedImageHeight.Text" xml:space="preserve">
    <value>Related Image Height</value>
  </data>
  <data name="plShowGoogleMap.Help" xml:space="preserve">
    <value>Check to show Google Maps in product detail if related data available.</value>
  </data>
  <data name="plShowGoogleMap.Text" xml:space="preserve">
    <value>Show Google Maps</value>
  </data>
  <data name="secGoogleMap.Text" xml:space="preserve">
    <value>Google Maps</value>
  </data>
  <data name="secJQZoom.Text" xml:space="preserve">
    <value>JQuery zoom integration</value>
  </data>
  <data name="Tip_GoogleMapStyle.Text" xml:space="preserve">
    <value>The container style for hosting Google Map. You can change its width/height to provide different space to show Google map.</value>
  </data>
  <data name="Tip_GoogleMapZoom.Text" xml:space="preserve">
    <value>The initial resolution at which to display the map is set by the zoom property, where zoom 0 corresponds to a map of the Earth fully zoomed out, and higher zoom levels zoom in at a higher resolution.</value>
  </data>
  <data name="Tip_JQZoom.Text" xml:space="preserve">
    <value>&amp;nbsp;&amp;nbsp;JQuery zoom is a javascript image magnifier which can show your product images elegantly (see demo image below). Classified Pro module already has a template (ProductDetail_JQZoom) which integrate it. You can use it as follows:&lt;br/&gt;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;1. In "General - Template", select "ProductDetail_JQZoom".&lt;br/&gt;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;2. Check on "Register JQuery zoom script" option below.
</value>
  </data>
  <data name="Tip_Template.Text" xml:space="preserve">
    <value>&amp;nbsp;&amp;nbsp;All sub modules on Classified Pro package are template based, you can customize your desired display effect by create different templates. See "Classified Pro user guide.pdf" for more detail. Please Note:&lt;br/&gt;&lt;br/&gt;&amp;nbsp;&amp;nbsp;1, To use "ProductDetail_JQZoom" template, you must check on "JQuery zoom integration - Register JQuery zoom script" option.&lt;br/&gt;&lt;br/&gt;&amp;nbsp;&amp;nbsp;2, Cp_Product_Detail sub module templates for "Fixed Price" departments locate under DesktopModules\CrossClassified\Template\Product\Detail\FixedPrice folder; templates for "Classified Ads" departments locate under DesktopModules\CrossClassified\Template\Product\Detail\Ad folder; templates for "Auction" departments locate under DesktopModules\CrossClassified\Template\Product\Detail\Auction folder, you should put related templates under corresponding folder.</value>
  </data>
  <data name="chkForceImageHeight.Text" xml:space="preserve">
    <value>Fix Image Height</value>
  </data>
  <data name="chkForceImageWidth.Text" xml:space="preserve">
    <value>Fix Image Width</value>
  </data>
  <data name="plMainImageHeight.Help" xml:space="preserve">
    <value>Enter image width/height and check on "Fix image width/height" options to control product image layout.</value>
  </data>
  <data name="plMainImageHeight.Text" xml:space="preserve">
    <value>Image Height</value>
  </data>
  <data name="plMainImageWidth.Help" xml:space="preserve">
    <value>Enter image width/height and check on "Fix image width/height" options to control product image layout.</value>
  </data>
  <data name="plMainImageWidth.Text" xml:space="preserve">
    <value>Image Width</value>
  </data>
  <data name="plShowMainImage.Help" xml:space="preserve">
    <value>Check to show product image in detail.</value>
  </data>
  <data name="plShowMainImage.Text" xml:space="preserve">
    <value>Show Image</value>
  </data>
  <data name="secComment.Text" xml:space="preserve">
    <value>Comments</value>
  </data>
  <data name="secMainImage.Text" xml:space="preserve">
    <value>Product Main Image</value>
  </data>
  <data name="secRating.Text" xml:space="preserve">
    <value>Ratings</value>
  </data>
  <data name="secTag.Text" xml:space="preserve">
    <value>Tags</value>
  </data>
  <data name="Tip_MainImage.Text" xml:space="preserve">
    <value>Enter image width/height and check on "Fix image width/height" options to control product image layout.</value>
  </data>
  <data name="plShowOrderMemo.Help" xml:space="preserve">
    <value>Check this option to let client enter order memo in product detail.</value>
  </data>
  <data name="plShowOrderMemo.Text" xml:space="preserve">
    <value>Show Order Memo</value>
  </data>
  <data name="plShowDateInTransaction.Help" xml:space="preserve">
    <value>Check to show price in transaction</value>
  </data>
  <data name="plShowDateInTransaction.Text" xml:space="preserve">
    <value>Show Date In Transaction</value>
  </data>
  <data name="plShowCouponDiscount.Help" xml:space="preserve">
    <value>The Coupon system provides the option to create unique codes which customers can enter when items are added to the cart. Coupons can be configured to any discount percentage; and set an end date for the coupon promotion.</value>
  </data>
  <data name="plShowCouponDiscount.Text" xml:space="preserve">
    <value>Show Coupons</value>
  </data>
  <data name="plShowCouponInput.Help" xml:space="preserve">
    <value>Check to show coupon input text box to let clients enter coupon</value>
  </data>
  <data name="plShowCouponInput.Text" xml:space="preserve">
    <value>Show Coupon Input</value>
  </data>
  <data name="plShowCustomerDiscount.Help" xml:space="preserve">
    <value>Customer Discounts are used to setup a discount for a specific customer. Only customers that previously have ordered a product from you will be listed when setting up a discount. These discounts are good anytime you want to give one of your current customers a discount.</value>
  </data>
  <data name="plShowCustomerDiscount.Text" xml:space="preserve">
    <value>Show Customer Discounts</value>
  </data>
  <data name="plShowDiscountTab.Help" xml:space="preserve">
    <value>Check to show discounts tab</value>
  </data>
  <data name="plShowDiscountTab.Text" xml:space="preserve">
    <value>Show Discounts Tab</value>
  </data>
  <data name="plShowProductDiscount.Help" xml:space="preserve">
    <value>Product Discounts can be set up to give a customer a discount based on a previous item they have ordered. This includes items in their current order.</value>
  </data>
  <data name="plShowProductDiscount.Text" xml:space="preserve">
    <value>Show Product Discounts</value>
  </data>
  <data name="plShowQuantityDiscount.Help" xml:space="preserve">
    <value>Quantity Discounts enable you to configure quantity (volume) discounts so that customers can receive discounts when ordering certain amount of products. For example, "Product A" is sell as $100 per unit, when user buy 10 together, you can specify discount as 30%, so user can get them with 100 * (1 - 0.3) = 700.</value>
  </data>
  <data name="plShowQuantityDiscount.Text" xml:space="preserve">
    <value>Show Quantity Discounts</value>
  </data>
  <data name="secDiscount.Text" xml:space="preserve">
    <value>Discounts (apply to "Fixed Price" department)</value>
  </data>
  <data name="plBidHistoryPerPage.Help" xml:space="preserve">
    <value>Enter bid history rows per page</value>
  </data>
  <data name="plBidHistoryPerPage.Text" xml:space="preserve">
    <value>Bid History Rows Per Page</value>
  </data>
  <data name="plShowBidCount.Help" xml:space="preserve">
    <value>Show bid count</value>
  </data>
  <data name="plShowBidCount.Text" xml:space="preserve">
    <value>Show Bid Count</value>
  </data>
  <data name="plShowBidHistory.Help" xml:space="preserve">
    <value>Show bid histroy in detail, works for "English (open ascending price auction)" auction type only.</value>
  </data>
  <data name="plShowBidHistory.Text" xml:space="preserve">
    <value>Show Bid History</value>
  </data>
  <data name="plShowCurrentBid.Help" xml:space="preserve">
    <value>Show current bid price</value>
  </data>
  <data name="plShowCurrentBid.Text" xml:space="preserve">
    <value>Show Current Bid Price</value>
  </data>
  <data name="plShowCurrentBidder.Help" xml:space="preserve">
    <value>Show Current bidder</value>
  </data>
  <data name="plShowCurrentBidder.Text" xml:space="preserve">
    <value>Show Current bidder</value>
  </data>
  <data name="plShowExpireDate.Help" xml:space="preserve">
    <value>Show Expire Date</value>
  </data>
  <data name="plShowExpireDate.Text" xml:space="preserve">
    <value>Show Expire Date</value>
  </data>
  <data name="plShowIncrement.Help" xml:space="preserve">
    <value>Check to show minimum bid increment</value>
  </data>
  <data name="plShowIncrement.Text" xml:space="preserve">
    <value>Show Minimum Bid Increment</value>
  </data>
  <data name="plShowRemainTime.Help" xml:space="preserve">
    <value>Show remain time</value>
  </data>
  <data name="plShowRemainTime.Text" xml:space="preserve">
    <value>Show Remain Time</value>
  </data>
  <data name="plShowRoleDiscount.Help" xml:space="preserve">
    <value>Check to show role discounts in detail</value>
  </data>
  <data name="plShowRoleDiscount.Text" xml:space="preserve">
    <value>Show Role Discounts</value>
  </data>
  <data name="plShowStartPrice.Help" xml:space="preserve">
    <value>Check to show start price in detail</value>
  </data>
  <data name="plShowStartPrice.Text" xml:space="preserve">
    <value>Show Start Price</value>
  </data>
  <data name="plTemplate_Ad.Help" xml:space="preserve">
    <value>Choose Classified Ads Detail Template</value>
  </data>
  <data name="plTemplate_Ad.Text" xml:space="preserve">
    <value>Classified Ads Detail Template</value>
  </data>
  <data name="plTemplate_Auction.Help" xml:space="preserve">
    <value>Choose Auction Detail Template</value>
  </data>
  <data name="plTemplate_Auction.Text" xml:space="preserve">
    <value>Auction Detail Template</value>
  </data>
  <data name="plTemplate_FixedPrice.Help" xml:space="preserve">
    <value>Choose Fixed Price Products Detail Template</value>
  </data>
  <data name="plTemplate_FixedPrice.Text" xml:space="preserve">
    <value>Fixed Price Products Detail Template</value>
  </data>
  <data name="secAuction.Text" xml:space="preserve">
    <value>Auction Contents (apply to "Auction" department)</value>
  </data>
  <data name="secContent.Text" xml:space="preserve">
    <value>Display Contents (apply to all departments)</value>
  </data>
  <data name="Tip_AuctionContent.Text" xml:space="preserve">
    <value>Choose auction fields which will display in product detail. Note, these fields are mainly applied to "Auction" departments.</value>
  </data>
  <data name="Tip_DisplayContent.Text" xml:space="preserve">
    <value>Choose fields which will display in product detail. Note, these fields can be applied to all departments.</value>
  </data>
  <data name="Tip_FixedPriceContent.Text" xml:space="preserve">
    <value>Choose fields which will display in product detail. Note, these fields are mainly applied to "Fixed Price" departments.</value>
  </data>
  <data name="Tip_ShowAuctionExplaination.Text" xml:space="preserve">
    <value>Check to show auction process explaination in product detail. This is useful for Sealed first price/Vickrey/Second item auction types because these auction process are not straightforward as the typical "English (open ascending price auction)" auction process, some customers may dont' know auction detail.</value>
  </data>
  <data name="plShowAuctionEnd.Help" xml:space="preserve">
    <value>Show auction ends</value>
  </data>
  <data name="plShowAuctionEnd.Text" xml:space="preserve">
    <value>Show Auction Ends</value>
  </data>
  <data name="plShowAuctionExplaination.Help" xml:space="preserve">
    <value>Show auction explaination</value>
  </data>
  <data name="plShowAuctionExplaination.Text" xml:space="preserve">
    <value>Show Auction Explaination</value>
  </data>
  <data name="plShowAuctionStart.Help" xml:space="preserve">
    <value>Show auction started</value>
  </data>
  <data name="plShowAuctionStart.Text" xml:space="preserve">
    <value>Show Auction Started</value>
  </data>
  <data name="plShowAuctionShippingOption.Help" xml:space="preserve">
    <value>Check to show shipping option</value>
  </data>
  <data name="plShowAuctionShippingOption.Text" xml:space="preserve">
    <value>Show Shipping Option</value>
  </data>
  <data name="plShowOrderShippingOption.Help" xml:space="preserve">
    <value>Check to show shipping option</value>
  </data>
  <data name="plShowOrderShippingOption.Text" xml:space="preserve">
    <value>Show Shipping Option</value>
  </data>
  <data name="plShowReservePriceTip.Help" xml:space="preserve">
    <value>Show reserve price tip</value>
  </data>
  <data name="plShowReservePriceTip.Text" xml:space="preserve">
    <value>Show Reserve Price Tip</value>
  </data>
  <data name="plShowLocation_City.Help" xml:space="preserve">
    <value>Show City</value>
  </data>
  <data name="plShowLocation_City.Text" xml:space="preserve">
    <value>Show City</value>
  </data>
  <data name="plShowLocation_Country.Help" xml:space="preserve">
    <value>Show Country</value>
  </data>
  <data name="plShowLocation_Country.Text" xml:space="preserve">
    <value>Show Country</value>
  </data>
  <data name="plShowLocation_State.Help" xml:space="preserve">
    <value>Show State/Province</value>
  </data>
  <data name="plShowLocation_State.Text" xml:space="preserve">
    <value>Show State/Province</value>
  </data>
  <data name="plShowLocation_Town.Help" xml:space="preserve">
    <value>Show Town</value>
  </data>
  <data name="plShowLocation_Town.Text" xml:space="preserve">
    <value>Show Town</value>
  </data>
  <data name="plShowAddress.Help" xml:space="preserve">
    <value>Show Address</value>
  </data>
  <data name="plShowAddress.Text" xml:space="preserve">
    <value>Show Address</value>
  </data>
  <data name="plShowBiography.Help" xml:space="preserve">
    <value>Show Biography</value>
  </data>
  <data name="plShowBiography.Text" xml:space="preserve">
    <value>Show Biography</value>
  </data>
  <data name="plShowBusinessScope.Help" xml:space="preserve">
    <value>Show business scope</value>
  </data>
  <data name="plShowBusinessScope.Text" xml:space="preserve">
    <value>Show Business Scope</value>
  </data>
  <data name="plShowCity.Help" xml:space="preserve">
    <value>Show City</value>
  </data>
  <data name="plShowCity.Text" xml:space="preserve">
    <value>Show City</value>
  </data>
  <data name="plShowCompany.Help" xml:space="preserve">
    <value>Show Company</value>
  </data>
  <data name="plShowCompany.Text" xml:space="preserve">
    <value>Show Company</value>
  </data>
  <data name="plShowCountry.Help" xml:space="preserve">
    <value>Show Country</value>
  </data>
  <data name="plShowCountry.Text" xml:space="preserve">
    <value>Show Country</value>
  </data>
  <data name="plShowFax.Help" xml:space="preserve">
    <value>Show Fax</value>
  </data>
  <data name="plShowFax.Text" xml:space="preserve">
    <value>Show Fax</value>
  </data>
  <data name="plShowIM.Help" xml:space="preserve">
    <value>Show IM</value>
  </data>
  <data name="plShowIM.Text" xml:space="preserve">
    <value>Show IM</value>
  </data>
  <data name="plShowLinkman.Help" xml:space="preserve">
    <value>Show Linkman</value>
  </data>
  <data name="plShowLinkman.Text" xml:space="preserve">
    <value>Show Linkman</value>
  </data>
  <data name="plShowLogoUrl.Help" xml:space="preserve">
    <value>Show logo image</value>
  </data>
  <data name="plShowLogoUrl.Text" xml:space="preserve">
    <value>Show Logo Image</value>
  </data>
  <data name="plShowSiteUrl.Help" xml:space="preserve">
    <value>Show site url</value>
  </data>
  <data name="plShowSiteUrl.Text" xml:space="preserve">
    <value>Show Site Url</value>
  </data>
  <data name="plShowSlogan.Help" xml:space="preserve">
    <value>Show Slogan</value>
  </data>
  <data name="plShowSlogan.Text" xml:space="preserve">
    <value>Show Slogan</value>
  </data>
  <data name="plShowState.Help" xml:space="preserve">
    <value>Show State</value>
  </data>
  <data name="plShowState.Text" xml:space="preserve">
    <value>Show State</value>
  </data>
  <data name="plShowTel.Help" xml:space="preserve">
    <value>Show Telephone</value>
  </data>
  <data name="plShowTel.Text" xml:space="preserve">
    <value>Show Telephone</value>
  </data>
  <data name="plShowTown.Help" xml:space="preserve">
    <value>Show Town</value>
  </data>
  <data name="plShowTown.Text" xml:space="preserve">
    <value>Show Town</value>
  </data>
  <data name="plShowVendorProfile.Help" xml:space="preserve">
    <value>In this section, you can choose whether to show seller profile (and its detail) in product detail. Uncheck "Show seller profile" option will hide seller profile.</value>
  </data>
  <data name="plShowVendorProfile.Text" xml:space="preserve">
    <value>Show Seller Profile</value>
  </data>
  <data name="plShowZipcode.Help" xml:space="preserve">
    <value>Show Zipcode</value>
  </data>
  <data name="plShowZipcode.Text" xml:space="preserve">
    <value>Show Zipcode</value>
  </data>
  <data name="secVendorProfile.Text" xml:space="preserve">
    <value>Seller Profile</value>
  </data>
  <data name="Tip_VendorProfile.Text" xml:space="preserve">
    <value>In this section, you can choose whether to show seller profile (and its detail) in product detail. Uncheck "Show seller profile" option will hide seller profile.</value>
  </data>
  <data name="plShowDateDiscount.Help" xml:space="preserve">
    <value>Check to show date discounts</value>
  </data>
  <data name="plShowDateDiscount.Text" xml:space="preserve">
    <value>Show Date Discounts</value>
  </data>
  <data name="plShowFirstBuyerDiscount.Help" xml:space="preserve">
    <value>Check to show first buyer discounts</value>
  </data>
  <data name="plShowFirstBuyerDiscount.Text" xml:space="preserve">
    <value>Show First Buyer Discounts</value>
  </data>
  <data name="Tip_DiscountContent.Text" xml:space="preserve">
    <value>Choose discounts which will be displayed in product detail. Note, module will show site defined discounts (global discount), seller common discounts, and also product specific discounts.</value>
  </data>
  <data name="plShowShippingProperty.Help" xml:space="preserve">
    <value>Check to show shipping property in product detail page.</value>
  </data>
  <data name="plShowShippingProperty.Text" xml:space="preserve">
    <value>Show Shipping Property</value>
  </data>
  <data name="secAbout.Text" xml:space="preserve">
    <value>About Cp_Product_Detail sub module</value>
  </data>
  <data name="Tip_About.Text" xml:space="preserve">
    <value>Classified Pro is an enterprise-class DNN module which helps you to create an online store, auction website and also publish classified ads. It contains 16 sub modules and 1 skin object. 
&lt;br/&gt;&lt;br/&gt;
Cp_Product_Detail is one of these 16 sub modules, it is used to display product (listing) detail to public. It is always used combined with other sub modules. For example, when click a product (listing) in Cp_Product_List (or Cp_Product_Slideshow/Cp_Product_ListDashboard) sub module, module will show product (listing) detail in Cp_Product_Detail sub module. For this reason, it is one of the frequently-used sub modules in Classified Pro package.&lt;br/&gt;&lt;br/&gt;

You can add multiple instances of Cp_Product_Detail sub module to different pages. In most cases, you need to provide at least 1 Cp_Product_Detail sub module instance for each product department. It is template based, you can customize your desired display effect by create different templates.&lt;br/&gt;&lt;br/&gt;
If current site enables content localization, Cp_Product_Detail sub module will show content according to page culture. For example, if current page culture is "en-US (English)", it will show English content of product (listing); if current page culture is "zh-CN (Simple Chinese)", it will show Simple Chinese content of product (listing); if page culture is neutral, it will show content according to current context culture.</value>
  </data>
  <data name="plShowVariantList.Help" xml:space="preserve">
    <value>Show product variants in detail (if exists).</value>
  </data>
  <data name="plShowVariantList.Text" xml:space="preserve">
    <value>Show Product Variants</value>
  </data>
  <data name="li_VendorLinkTarget_List.Text" xml:space="preserve">
    <value>Cp_Product_List Sub Module</value>
  </data>
  <data name="li_VendorLinkTarget_VendorProfile.Text" xml:space="preserve">
    <value>Cp_Product_VendorProfile Sub Module</value>
  </data>
  <data name="plVendorLinkTarget.Help" xml:space="preserve">
    <value>Choose Vendor/Seller Target (Cp_Product_List sub module or Cp_Product_VendorProfile sub module)</value>
  </data>
  <data name="plVendorLinkTarget.Text" xml:space="preserve">
    <value>Creator(Vendor/Seller) Target</value>
  </data>
  <data name="Tip_VendorLinkTarget.Text" xml:space="preserve">
    <value>When click creator(vendor/seller) name in product list, Classified Pro can navigate to Cp_Product_List sub module to show his products, or can navigate to Cp_Product_VendorProfile sub module to show both vendor profile and his products. Note, if you choose "Cp_Product_VendorProfile Sub Module", make sure you have provided a valid "Cp_Product_VendorProfile sub module page" for current department at  "Cp_Admin sub module - Admin Control Panel - Departments".</value>
  </data>
</root>