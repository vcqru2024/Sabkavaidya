<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ControlTitle_usergeneral_localfileupload.Text" xml:space="preserve">
    <value>Upload Files (Ms Silverlight)</value>
  </data>
  <data name="lblFolder.Text" xml:space="preserve">
    <value>Target Folder</value>
  </data>
  <data name="SpaceUsed.Text" xml:space="preserve">
    <value>Used: {0} of {1}</value>
  </data>
  <data name="UnlimitedSpace.Text" xml:space="preserve">
    <value>[unlimited]</value>
  </data>
  <data name="chkUnzip.Text" xml:space="preserve">
    <value>Decompress Zip Files?</value>
  </data>
  <data name="btnSynchronize.Text" xml:space="preserve">
    <value>Synchronize To Server</value>
  </data>
  <data name="lblStepSynchronize.Text" xml:space="preserve">
    <value>Step 2: Select which folder to store uploaded files, click "Synchronize To Server" button to synchronize uploaded files from temporary directory to the target folder. Check "Decompress Zip Files" option if you want to unzip files.</value>
  </data>
  <data name="lblStepUpload.Text" xml:space="preserve">
    <value>Step 1: Click "Select Files" button to choose files, then click "Upload" button to upload files to the temporary directory. Zip file before upload will reduce time. Note, you can select multiple files to upload by press Ctrl key.</value>
  </data>
  <data name="errExceedDiskQuote.Text" xml:space="preserve">
    <value>Module detects that your current upload files will exceed your disk quota. Please delete some existing files, then re-upload them.</value>
  </data>
  <data name="lblFileExtension.Text" xml:space="preserve">
    <value>Site allowable upload file extension:&lt;br/&gt;&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{0}&lt;br/&gt;&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Files which are not in the list will be ignored even their upload status also display as "Ok".</value>
  </data>
  <data name="lblUploadTip.Text" xml:space="preserve">
    <value>Silverlight upload control allows you to upload big size files which beyond the configuration in web.config file (e.g, 100 mb). However, it requires Ms Silverlight plug-in (runs under PC only). Click here to &lt;a href='http://go.microsoft.com/fwlink/?LinkID=124807' style='text-decoration: none;' target="_blank"&gt;Install Ms Silverlight&lt;/a&gt; if you can't see the upload control.&lt;br/&gt;&lt;br/&gt;Note, 1. You can click the "Switch To Normal Upload Control" link if you have problem to install Sliverlight (e.g, you are using iPhone/iPad/Mobile/Tablet which doesn't support Ms Silverlight).  2. Microsoft confirms its new Edge browser (in Windows 10) won't support Silverlight. If you are using Windows 10 and its Edge browser, please click the "Open with Internet Exploler" menu to open current page with IE 11 (which supports Silverlight).</value>
  </data>
  <data name="UploadSuccess.Text" xml:space="preserve">
    <value>Congratulation! Your files have been uploaded to server successfully. Click "Return To My Files" to view them or continue to upload other files.</value>
  </data>
  <data name="UserRootPath.Text" xml:space="preserve">
    <value>/</value>
  </data>
  <data name="errExceedPortalQuote.Text" xml:space="preserve">
    <value>Portal disk quota exceed, please contact site administrator.</value>
  </data>
  <data name="hlReturn.Text" xml:space="preserve">
    <value>Return To My Files</value>
  </data>
  <data name="errNoFileUpload.Text" xml:space="preserve">
    <value>No file upload, please check if you provide valid files.</value>
  </data>
  <data name="hlSwitchToNormal.Text" xml:space="preserve">
    <value>Switch To Normal Upload Control</value>
  </data>
</root>