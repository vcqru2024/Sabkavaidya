<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="plCategory.Text" xml:space="preserve">
    <value>Category</value>
  </data>
  <data name="plCategory.Help" xml:space="preserve">
    <value>Product Category</value>
  </data>
  <data name="Category.ErrorMessage" xml:space="preserve">
    <value>Please provide at least 1 category (up to {0} categories) for this product.</value>
  </data>
  <data name="plName.Text" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="plOrder.Text" xml:space="preserve">
    <value>Sort Index</value>
  </data>
  <data name="plOrder.Help" xml:space="preserve">
    <value>The "Sort Index" is the first factor when display products. The default is 100, means don't set special display order. However, if you have some important products which you want them always display first to public, you can set a lower sort index (e.g.20).</value>
  </data>
  <data name="plName.Help" xml:space="preserve">
    <value>Product Name</value>
  </data>
  <data name="lblProductInfo.Text" xml:space="preserve">
    <value>Product Info</value>
  </data>
  <data name="plImage.Text" xml:space="preserve">
    <value>Image</value>
  </data>
  <data name="plImage.Help" xml:space="preserve">
    <value>Choose product image file (jpe, jpeg, jpg, bmp, png). You can select image from your files, or add from external url, for example, http://DnnModule.com/portals/0/test.jpg</value>
  </data>
  <data name="plPublishDate.Text" xml:space="preserve">
    <value>Publish Date</value>
  </data>
  <data name="plPublishDate.Help" xml:space="preserve">
    <value>Product Publish Date</value>
  </data>
  <data name="plExpireDate.Text" xml:space="preserve">
    <value>Expire Date</value>
  </data>
  <data name="plExpireDate.Help" xml:space="preserve">
    <value>Product Expire Date</value>
  </data>
  <data name="Date.ErrorMessage" xml:space="preserve">
    <value>Invalid date</value>
  </data>
  <data name="plAuthed.Text" xml:space="preserve">
    <value>Authed</value>
  </data>
  <data name="plAuthed.Help" xml:space="preserve">
    <value>Authorize Product</value>
  </data>
  <data name="plFeatured.Text" xml:space="preserve">
    <value>Featured</value>
  </data>
  <data name="plFeatured.Help" xml:space="preserve">
    <value>Featured</value>
  </data>
  <data name="plViewRoles.Text" xml:space="preserve">
    <value>View Roles</value>
  </data>
  <data name="plViewRoles.Help" xml:space="preserve">
    <value>Select roles which can view this product</value>
  </data>
  <data name="plAllowRating.Text" xml:space="preserve">
    <value>Allow Rating</value>
  </data>
  <data name="plAllowRating.Help" xml:space="preserve">
    <value>Allow visitors to rating product by default, each product can has its own rating settings. Note, if product is sell online, then customers who bought this product can rating it natively.</value>
  </data>
  <data name="plRatingRoles.Text" xml:space="preserve">
    <value>Rating Roles</value>
  </data>
  <data name="plRatingRoles.Help" xml:space="preserve">
    <value>Select roles which can ratings by default, each product can has its own rating roles. Note, if product is sell online, then only customers who bought this product can rating it.</value>
  </data>
  <data name="plAllowComment.Text" xml:space="preserve">
    <value>Allow Comment</value>
  </data>
  <data name="plAllowComment.Help" xml:space="preserve">
    <value>Allow Comment Online</value>
  </data>
  <data name="plCommentRoles.Text" xml:space="preserve">
    <value>Comment Roles</value>
  </data>
  <data name="plCommentRoles.Help" xml:space="preserve">
    <value>Choose Comment Roles</value>
  </data>
  <data name="plAutoAuthComment.Text" xml:space="preserve">
    <value>Auto Authorize Comment</value>
  </data>
  <data name="plAutoAuthComment.Help" xml:space="preserve">
    <value>Auto Authorize Comment Information</value>
  </data>
  <data name="chkAuthed.Text" xml:space="preserve">
    <value>Authed</value>
  </data>
  <data name="chkFeatured.Text" xml:space="preserve">
    <value>Featured</value>
  </data>
  <data name="lblAllowComment.Text" xml:space="preserve">
    <value>Allow Comment</value>
  </data>
  <data name="lblAllowRating.Text" xml:space="preserve">
    <value>Allow Rating</value>
  </data>
  <data name="lblAuthed.Text" xml:space="preserve">
    <value>Authed</value>
  </data>
  <data name="lblPurchasePrice.Text" xml:space="preserve">
    <value>Purchase Pr.</value>
  </data>
  <data name="lblCreatedDate.Text" xml:space="preserve">
    <value>Created</value>
  </data>
  <data name="lblFeatured.Text" xml:space="preserve">
    <value>Featured</value>
  </data>
  <data name="lblName.Text" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="lblViews.Text" xml:space="preserve">
    <value>Views</value>
  </data>
  <data name="lblOrder.Text" xml:space="preserve">
    <value>Order</value>
  </data>
  <data name="li_ProductStatus_All.Text" xml:space="preserve">
    <value>All</value>
  </data>
  <data name="lblPromoPrice.Text" xml:space="preserve">
    <value>Promo Pr.</value>
  </data>
  <data name="plPreviousVersion.Help" xml:space="preserve">
    <value>When product is a advanced version of existing item, module will display a "new version available" tip in existing item detail. And you can also move reviews from old version to new version.</value>
  </data>
  <data name="plPreviousVersion.Text" xml:space="preserve">
    <value>Previous Version</value>
  </data>
  <data name="plPurchasePrice.Help" xml:space="preserve">
    <value>Enter product purchase price. Value can't be null</value>
  </data>
  <data name="plPurchasePrice.Text" xml:space="preserve">
    <value>Purchase Price</value>
  </data>
  <data name="plLinkUrl.Help" xml:space="preserve">
    <value>When user click product, it will navigate to this link url. Leave it as blank if you don't want link to external url.</value>
  </data>
  <data name="plLinkUrl.Text" xml:space="preserve">
    <value>Link Url</value>
  </data>
  <data name="lblRelatedInfo.Text" xml:space="preserve">
    <value>Related</value>
  </data>
  <data name="chkActive.Text" xml:space="preserve">
    <value>Active</value>
  </data>
  <data name="li_ProductStatus_Featured.Text" xml:space="preserve">
    <value>Featured</value>
  </data>
  <data name="li_ProductStatus_UnActive.Text" xml:space="preserve">
    <value>Inactive</value>
  </data>
  <data name="li_ProductStatus_UnAuthed.Text" xml:space="preserve">
    <value>Unauthorized</value>
  </data>
  <data name="btnAddProduct.Text" xml:space="preserve">
    <value>Add Product</value>
  </data>
  <data name="plActive.Help" xml:space="preserve">
    <value>Set product as active. If a product is marked as inactive, it will not display to visitors.</value>
  </data>
  <data name="plActive.Text" xml:space="preserve">
    <value>Active</value>
  </data>
  <data name="ControlTitle_uservendor_product.Text" xml:space="preserve">
    <value>My Fixed Price Products</value>
  </data>
  <data name="imgCopyAsNew.Text" xml:space="preserve">
    <value>Copy as new product</value>
  </data>
  <data name="imgOption.Text" xml:space="preserve">
    <value>Edit options, each option has its own properties (stock/price/weight/..etc). Client can choose his favorite option while adding product to cart.</value>
  </data>
  <data name="plWeight.Help" xml:space="preserve">
    <value>Product weight which used to calculate shippping fee.</value>
  </data>
  <data name="imgToggleActive.Text" xml:space="preserve">
    <value>Toggle Active</value>
  </data>
  <data name="imgToggleAuthed.Text" xml:space="preserve">
    <value>Toggle Authed</value>
  </data>
  <data name="imgToggleFeatured.Text" xml:space="preserve">
    <value>Toggle Featured</value>
  </data>
  <data name="btnAddAttachment.Text" xml:space="preserve">
    <value>Add Attachment</value>
  </data>
  <data name="lblFilePath.Text" xml:space="preserve">
    <value>File</value>
  </data>
  <data name="lblId.Text" xml:space="preserve">
    <value>Id</value>
  </data>
  <data name="lblPortalDisableComment.Text" xml:space="preserve">
    <value>Comment is disabled by site administrator.</value>
  </data>
  <data name="lblPortalDisableRating.Text" xml:space="preserve">
    <value>Rating is disabled by site administrator.</value>
  </data>
  <data name="lblProductName.Text" xml:space="preserve">
    <value>Product Name</value>
  </data>
  <data name="lblSelectCategory.Text" xml:space="preserve">
    <value>Product Category</value>
  </data>
  <data name="lbtnAddTag.Text" xml:space="preserve">
    <value>Add Tag</value>
  </data>
  <data name="li_ProductStatus_Expired.Text" xml:space="preserve">
    <value>Expired</value>
  </data>
  <data name="li_ProductStatus_LowStockQuantity.Text" xml:space="preserve">
    <value>Low Stock Quantity</value>
  </data>
  <data name="btnSearch.Text" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="plAttachment.Help" xml:space="preserve">
    <value>Select attachment of this product</value>
  </data>
  <data name="plAttachment.Text" xml:space="preserve">
    <value>Attachment</value>
  </data>
  <data name="plDownloadRoles.Help" xml:space="preserve">
    <value>Select roles which can download attachment of this product.</value>
  </data>
  <data name="plDownloadRoles.Text" xml:space="preserve">
    <value>Attachment Download Roles</value>
  </data>
  <data name="plPopularTag.Help" xml:space="preserve">
    <value>Choose popular tags from drop down list box, click "Add Tag" button to add it to article tag list.</value>
  </data>
  <data name="plPopularTag.Text" xml:space="preserve">
    <value>Popular Tags</value>
  </data>
  <data name="imgAudio.Text" xml:space="preserve">
    <value>Edit related audio</value>
  </data>
  <data name="imgDownload.Text" xml:space="preserve">
    <value>Edit download files, clients can download them after paid.</value>
  </data>
  <data name="imgImage.Text" xml:space="preserve">
    <value>Edit related images</value>
  </data>
  <data name="imgVideo.Text" xml:space="preserve">
    <value>Edit related videos</value>
  </data>
  <data name="lblLowThresholdTip.Text" xml:space="preserve">
    <value>-1 = Ignore it.</value>
  </data>
  <data name="lblStockQuantityTip.Text" xml:space="preserve">
    <value>-1 = Unlimited quantity.</value>
  </data>
  <data name="lblType.Text" xml:space="preserve">
    <value>Department:</value>
  </data>
  <data name="plLowThreshold.Help" xml:space="preserve">
    <value>Enter low threshold for this product, if stock quantity is lower than this value. You can view them by choose the "Low Threshold" product status. Enter -1 to ignore low threshold.</value>
  </data>
  <data name="plLowThreshold.Text" xml:space="preserve">
    <value>Low Threshold</value>
  </data>
  <data name="plPromoEnd.Help" xml:space="preserve">
    <value>Enter a date which will end the promo price. Leave it as blank will apply all days.</value>
  </data>
  <data name="plPromoEnd.Text" xml:space="preserve">
    <value>Promo End</value>
  </data>
  <data name="plPromoPrice.Help" xml:space="preserve">
    <value>Specify a promo price if you want.You can also specify its start date and end date. Module will use this price as sell price between these days. </value>
  </data>
  <data name="plPromoPrice.Text" xml:space="preserve">
    <value>Promo Price</value>
  </data>
  <data name="plPromoStart.Help" xml:space="preserve">
    <value>Enter a date which will apply the promo price. Leave it as blank will use today.</value>
  </data>
  <data name="plPromoStart.Text" xml:space="preserve">
    <value>Promo Start</value>
  </data>
  <data name="plStockQuantity.Help" xml:space="preserve">
    <value>Enter stock quantity, module will reduce this value after ordered.If stock quantity is lower to 0, then user can't buy it anymore. Enter -1 for unlimited quantity (e.g. if you sell software or user roles).</value>
  </data>
  <data name="plStockQuantity.Text" xml:space="preserve">
    <value>Stock Quantity</value>
  </data>
  <data name="lblBonusPrice.Text" xml:space="preserve">
    <value>Bonus Price</value>
  </data>
  <data name="lblDescription.Text" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="lblIsDefault.Text" xml:space="preserve">
    <value>Default</value>
  </data>
  <data name="lblOptionList.Text" xml:space="preserve">
    <value>Options for "{0}". Each option has its own properties (stock/price/weight/..etc), client can choose his favorite option while adding product to cart. The discount and coupon can also be applied to these options.&lt;br/&gt;&lt;br/&gt;
For example, when selling a iPhone 6 mobile, you can create 3 options: 16 GB memory which has 50 stock; 64 GB memory which has 100 stock; 128 GB memory which has 200 stock. 
And client can choose his favorite option from them. </value>
  </data>
  <data name="lblOptionName.Text" xml:space="preserve">
    <value>Option Name</value>
  </data>
  <data name="Tip_RoleAddDay.Text" xml:space="preserve">
    <value>-1 = Never expire</value>
  </data>
  <data name="plPackageFee.Text" xml:space="preserve">
    <value>Additional package fee</value>
  </data>
  <data name="plPackageFee.Help" xml:space="preserve">
    <value>Additional amount to charge for shipping per item, will be added to the shipping total for the order</value>
  </data>
  <data name="plSku.Text" xml:space="preserve">
    <value>SKU</value>
  </data>
  <data name="lbtnSelectShip.Text" xml:space="preserve">
    <value>Select</value>
  </data>
  <data name="plOptionActive.Help" xml:space="preserve">
    <value>Is this option active?</value>
  </data>
  <data name="plOptionActive.Text" xml:space="preserve">
    <value>Active</value>
  </data>
  <data name="plOptionBonusPrice.Help" xml:space="preserve">
    <value>Enter bonus price which will add to product price. For example, if product is 100, and bonus price is -30, then user need to pay 70 to buy product with this option.</value>
  </data>
  <data name="plOptionBonusPrice.Text" xml:space="preserve">
    <value>Bonus Price (+/-)</value>
  </data>
  <data name="plOptionDescription.Help" xml:space="preserve">
    <value>Option description (optional)</value>
  </data>
  <data name="plOptionDescription.Text" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="plOptionIsDefault.Help" xml:space="preserve">
    <value>Is this the default option when sell?</value>
  </data>
  <data name="plOptionIsDefault.Text" xml:space="preserve">
    <value>Default Option</value>
  </data>
  <data name="plOptionName.Help" xml:space="preserve">
    <value>Enter option name, can't be null</value>
  </data>
  <data name="plOptionName.Text" xml:space="preserve">
    <value>Option Name</value>
  </data>
  <data name="plRoleAddDay.Help" xml:space="preserve">
    <value>Enter valid days for role. For example, if enter 365, then user ordered role will be expire after 365 days. Enter -1 to not expire user ordered role.</value>
  </data>
  <data name="plRoleAddDay.Text" xml:space="preserve">
    <value>Role valid days</value>
  </data>
  <data name="plRoleAfterOrder.Help" xml:space="preserve">
    <value>Choose which role will be added to user after his/her oder.</value>
  </data>
  <data name="plRoleAfterOrder.Text" xml:space="preserve">
    <value>Role after order</value>
  </data>
  <data name="plSku.Help" xml:space="preserve">
    <value>SKU=stock keeping uint, this value is optional.</value>
  </data>
  <data name="plOptionBonusWeight.Help" xml:space="preserve">
    <value>Bonus weight for this option, used to calculate shipping fee.</value>
  </data>
  <data name="plOptionBonusWeight.Text" xml:space="preserve">
    <value>Bonus Weight</value>
  </data>
  <data name="btnBackToList.Text" xml:space="preserve">
    <value>Back To Product List</value>
  </data>
  <data name="lblAudioList.Text" xml:space="preserve">
    <value>Audio for "{0}"</value>
  </data>
  <data name="lblAudioPath.Text" xml:space="preserve">
    <value>Audio Path</value>
  </data>
  <data name="lblAudioTitle.Text" xml:space="preserve">
    <value>Audio Title</value>
  </data>
  <data name="lblDownloadList.Text" xml:space="preserve">
    <value>Download files for "{0}", buyer can download them after paid.</value>
  </data>
  <data name="lblDuration.Text" xml:space="preserve">
    <value>Duration</value>
  </data>
  <data name="lblFileName.Text" xml:space="preserve">
    <value>File Name</value>
  </data>
  <data name="lblImageList.Text" xml:space="preserve">
    <value>Related images for "{0}"</value>
  </data>
  <data name="lblImagePath.Text" xml:space="preserve">
    <value>Image Path</value>
  </data>
  <data name="lblImageTitle.Text" xml:space="preserve">
    <value>Image Title</value>
  </data>
  <data name="lblProductStatus.Text" xml:space="preserve">
    <value>Status:</value>
  </data>
  <data name="lblSize.Text" xml:space="preserve">
    <value>File Size</value>
  </data>
  <data name="lblStepSynchronize.Text" xml:space="preserve">
    <value>Step 3: Synchronize uploaded files from temporary directory to server.</value>
  </data>
  <data name="lblStepUpload.Text" xml:space="preserve">
    <value>Step 2: Module provides two upload methods: MS Silverlight and JavaScript.  MS Silverlight plug-in is recommended (if it is available) because it allows you to upload big size files.  Click "Select Files" button to select files (you can press Ctrl key to select multiple files once), then click "upload" button to upload files to temporary directory.</value>
  </data>
  <data name="lblVideoList.Text" xml:space="preserve">
    <value>Related videos for "{0}"</value>
  </data>
  <data name="lblVideoPath.Text" xml:space="preserve">
    <value>Video Path</value>
  </data>
  <data name="lblVideoTitle.Text" xml:space="preserve">
    <value>Video Title</value>
  </data>
  <data name="plAudioDescription.Help" xml:space="preserve">
    <value>Audio description (optional)</value>
  </data>
  <data name="plAudioDescription.Text" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="plAudioFile.Help" xml:space="preserve">
    <value>Choose audio file (mp3). You can select audio from your files, or add from external url, for example, http://DnnModule.com/portals/0/test.mp3.</value>
  </data>
  <data name="plAudioTitle.Help" xml:space="preserve">
    <value>Enter audio title. It can't be null</value>
  </data>
  <data name="plAudioTitle.Text" xml:space="preserve">
    <value>Audio Title</value>
  </data>
  <data name="plAudioFile.Text" xml:space="preserve">
    <value>Audio File</value>
  </data>
  <data name="plEnablePromoPrice.Help" xml:space="preserve">
    <value>Check this option to enable promo price</value>
  </data>
  <data name="plEnablePromoPrice.Text" xml:space="preserve">
    <value>Enable promo price</value>
  </data>
  <data name="plImageDescription.Help" xml:space="preserve">
    <value>Image description (optional)</value>
  </data>
  <data name="plImageDescription.Text" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="plImageFile.Help" xml:space="preserve">
    <value>Choose image file (jpe, jpeg, jpg, bmp, png). You can select image from your files, or add from external url, for example, http://DnnModule.com/portals/0/test.jpg</value>
  </data>
  <data name="plImageFile.Text" xml:space="preserve">
    <value>Image File</value>
  </data>
  <data name="plImageTitle.Help" xml:space="preserve">
    <value>Enter image title, can't be null</value>
  </data>
  <data name="plImageTitle.Text" xml:space="preserve">
    <value>Image Title</value>
  </data>
  <data name="plVideoDescription.Help" xml:space="preserve">
    <value>Video description (optional)</value>
  </data>
  <data name="plVideoDescription.Text" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="plVideoFile.Help" xml:space="preserve">
    <value>Choose video file (.flv or mp4). You can select video from your files. Or add from external url, for example, http://DnnModule.com/portals/0/test.flv. You can also type youtube url as external source, for example, http://www.youtube.com/watch?v=0klgLsSxGsU. Besides that, you can add video from embed code. Nearlly all video sites offer these embed code.</value>
  </data>
  <data name="plVideoFile.Text" xml:space="preserve">
    <value>Video File</value>
  </data>
  <data name="plVideoTitle.Help" xml:space="preserve">
    <value>Enter video title, can't be null</value>
  </data>
  <data name="plVideoTitle.Text" xml:space="preserve">
    <value>Video Title</value>
  </data>
  <data name="lblStepSelectOption.Text" xml:space="preserve">
    <value>Step 1: Choose product or its option which will be upload.</value>
  </data>
  <data name="Error_SpecifyAudio.Text" xml:space="preserve">
    <value>Please specify a valid audio.</value>
  </data>
  <data name="Error_SpecifyImage.Text" xml:space="preserve">
    <value>Please specify a valid image.</value>
  </data>
  <data name="Error_SpecifyVideo.Text" xml:space="preserve">
    <value>Please specify a valid video.</value>
  </data>
  <data name="btnAddAudio.Text" xml:space="preserve">
    <value>Add Audio</value>
  </data>
  <data name="btnAddDownload.Text" xml:space="preserve">
    <value>Upload New File</value>
  </data>
  <data name="btnAddImage.Text" xml:space="preserve">
    <value>Add Image</value>
  </data>
  <data name="btnAddOption.Text" xml:space="preserve">
    <value>Add Option</value>
  </data>
  <data name="plWeight.Text" xml:space="preserve">
    <value>Weight</value>
  </data>
  <data name="btnAddVideo.Text" xml:space="preserve">
    <value>Add Video</value>
  </data>
  <data name="lblProductCategory.Text" xml:space="preserve">
    <value>Category:</value>
  </data>
  <data name="lblProductName1.Text" xml:space="preserve">
    <value>Name:</value>
  </data>
  <data name="RegModuleTip.Text" xml:space="preserve">
    <value>You are using a unregistered copy of Classified Pro which can add up to 100 product items. Please register at "Cp_Admin sub module - Help - Register" section to remove this limitation. Thanks for your support.</value>
  </data>
  <data name="lblStockQuantity.Text" xml:space="preserve">
    <value>Stock</value>
  </data>
  <data name="btnAddAudioFromFolder.Text" xml:space="preserve">
    <value>Add multiple audio from folder</value>
  </data>
  <data name="btnAddImageFromFolder.Text" xml:space="preserve">
    <value>Add multiple images from folder</value>
  </data>
  <data name="btnAddVideoFromFolder.Text" xml:space="preserve">
    <value>Add multiple videos from folder</value>
  </data>
  <data name="MyFolder.Help" xml:space="preserve">
    <value>You can add related files under selected folder by click "Add From Folder"</value>
  </data>
  <data name="MyFolder.Text" xml:space="preserve">
    <value>My Folders</value>
  </data>
  <data name="plVideoDuration.Help" xml:space="preserve">
    <value>Enter video duration (optional), hh:mm:ss format like 01:20:03. Note, module will automatic detect its duration if it is from local files and video encode feature is enabled in "General settings" of Cp_Admin module.</value>
  </data>
  <data name="plVideoDuration.Text" xml:space="preserve">
    <value>Video Duration</value>
  </data>
  <data name="plVideoThumbnail.Help" xml:space="preserve">
    <value>Specify a thumbnail image for video (optional). Note, module will automatic detect its thumbnail if it is from local files and video encode feature is enabled in "General settings" of Cp_Admin module.</value>
  </data>
  <data name="plVideoThumbnail.Text" xml:space="preserve">
    <value>Video Thumbnail</value>
  </data>
  <data name="lblPageSize.Text" xml:space="preserve">
    <value>Page:</value>
  </data>
  <data name="divBasic.Text" xml:space="preserve">
    <value>Basic</value>
  </data>
  <data name="divCategory.Text" xml:space="preserve">
    <value>Categories</value>
  </data>
  <data name="divDelivery.Text" xml:space="preserve">
    <value>Delivery</value>
  </data>
  <data name="divDescription.Text" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="divLicense.Text" xml:space="preserve">
    <value>License</value>
  </data>
  <data name="divSpecialOffer.Text" xml:space="preserve">
    <value>Special Offer</value>
  </data>
  <data name="divSummary.Text" xml:space="preserve">
    <value>Summary</value>
  </data>
  <data name="divSupport.Text" xml:space="preserve">
    <value>Support</value>
  </data>
  <data name="divTag.Text" xml:space="preserve">
    <value>Tags</value>
  </data>
  <data name="imgAttachment.Text" xml:space="preserve">
    <value>Edit attachment files</value>
  </data>
  <data name="lblAttachmentList.Text" xml:space="preserve">
    <value>Attachments for "{0}"</value>
  </data>
  <data name="btnSynchronize.Text" xml:space="preserve">
    <value>Synchronize To Server</value>
  </data>
  <data name="divPermission.Text" xml:space="preserve">
    <value>Permissions</value>
  </data>
  <data name="lblIndex.Text" xml:space="preserve">
    <value>Index</value>
  </data>
  <data name="btnAddFromFile.Text" xml:space="preserve">
    <value>Add File</value>
  </data>
  <data name="btnChooseDownloadFromFile.Text" xml:space="preserve">
    <value>Add from existing file</value>
  </data>
  <data name="chkDeleteFileAfterAdded.Text" xml:space="preserve">
    <value>Delete this file after add</value>
  </data>
  <data name="lblAddFromFile_Step2.Text" xml:space="preserve">
    <value>Step 2: Choose a file from existing files.</value>
  </data>
  <data name="lblAddFromFile_Step3.Text" xml:space="preserve">
    <value>Step 3: Click "Add File" button to add it.</value>
  </data>
  <data name="Tip_UploadNewFile.Text" xml:space="preserve">
    <value>&amp;nbsp;&amp;nbsp;If you have problem while uploading large files (e.g. your zip package is 100mb in size), we recommend you to upload them via ftp tools first, then click "Add from existing files" to add them.</value>
  </data>
  <data name="Error_FileNotExist.Text" xml:space="preserve">
    <value>The file you specified doesn't exist, please check it.</value>
  </data>
  <data name="Error_SpecifyZipFile.Text" xml:space="preserve">
    <value>Please specify a valid file first.</value>
  </data>
  <data name="lblTagTip.Text" xml:space="preserve">
    <value>Enter tags below (one tag per line) or click "Add Tag" to add existing popular tag.</value>
  </data>
  <data name="Tip_Summary.Text" xml:space="preserve">
    <value>Enter short description for this product (1000 characters limit) .</value>
  </data>
  <data name="Tip_FileExtension.Text" xml:space="preserve">
    <value>Allowable files:{0}</value>
  </data>
  <data name="Tip_AudioSource.Text" xml:space="preserve">
    <value>&lt;p&gt;Audio source can come from bellowings:&lt;br/&gt;
1. Local File, Mp3 files which you uploaded to site.&lt;br/&gt;&lt;br/&gt;
2. External Url, like followings&lt;br/&gt;
    :File in exernal site, e.g http://DnnModule.com/portals/0/test.mp3&lt;br/&gt;
    :Http stream, e.g http://http://DnnModule.com/Audio.asp?Audioid=3
&lt;/p&gt;</value>
  </data>
  <data name="Tip_VideoSource.Text" xml:space="preserve">
    <value>&lt;p&gt;Video source can come from bellowings:&lt;br/&gt;
1. Local File, Flv/Mp4/Swf video files which you uploaded to site.&lt;br/&gt;&lt;br/&gt;
2. External Url, like followings&lt;br/&gt;
    :File in exernal site, e.g. http://DnnModule.com/portals/0/test.flv&lt;br/&gt;
    :Http stream, e.g. http://http://DnnModule.com/video.asp?videoid=3&lt;br/&gt;
    :YouTube video url, e.g. http://youtube.com/watch?v=aYlx5gW90Aw&lt;br/&gt;&lt;br/&gt;
3. Embed Code, embed code from other sites.
&lt;/p&gt;</value>
  </data>
  <data name="divMap.Text" xml:space="preserve">
    <value>Map</value>
  </data>
  <data name="plLatitude.Help" xml:space="preserve">
    <value>Enter latitude of your listing (product).</value>
  </data>
  <data name="plLatitude.Text" xml:space="preserve">
    <value>Latitude</value>
  </data>
  <data name="plLongitude.Help" xml:space="preserve">
    <value>Enter longitude of your listing (product).</value>
  </data>
  <data name="plLongitude.Text" xml:space="preserve">
    <value>Longitude</value>
  </data>
  <data name="Tip_LinkUrl.Text" xml:space="preserve">
    <value>Leave link url as "None" in most cases. If you specify it, module will navigate to that url when visitor click product in Cp_Product_List sub module.</value>
  </data>
  <data name="plBillPeriod.Help" xml:space="preserve">
    <value>These two fields are used in conjunction to enter a Billing Period. e.g 2 weeks, or 1 month</value>
  </data>
  <data name="plBillPeriod.Text" xml:space="preserve">
    <value>Billing Period (Every)</value>
  </data>
  <data name="plRecursiveBill.Help" xml:space="preserve">
    <value>Select "Recursive Charge" or "Charge Once"</value>
  </data>
  <data name="plRecursiveBill.Text" xml:space="preserve">
    <value>Charge Type</value>
  </data>
  <data name="Tip_RecursiveBill.Text" xml:space="preserve">
    <value>Check on "Recursive Billing" and enter "Billing Period" if you want to charge recursive.</value>
  </data>
  <data name="Tip_ViewOrder.Text" xml:space="preserve">
    <value>The "Sort Index" is the first factor when display products. The default is 10000, means don't set special display order. However, if you have some important products which you want them always display first to public, you can set a lower sort index (e.g. 9000).</value>
  </data>
  <data name="lblProductQuota.Text" xml:space="preserve">
    <value>Your product quota:{0}, Used {1}</value>
  </data>
  <data name="Warning_ExceedQuota.Text" xml:space="preserve">
    <value>You have reached your products quota. Before add new product, please contact site administrator to increase your products quota, or delete existing products .</value>
  </data>
  <data name="plMapTitle.Help" xml:space="preserve">
    <value>Map title whick display above the red air bubble (which indicate your position). Module will use prouct name instead if you don't specify it.</value>
  </data>
  <data name="plMapTitle.Text" xml:space="preserve">
    <value>Map Title</value>
  </data>
  <data name="Tip_GoogleMap_Sample.Text" xml:space="preserve">
    <value>Google map sample</value>
  </data>
  <data name="plManufacturer.Help" xml:space="preserve">
    <value>Choose a manufacturer</value>
  </data>
  <data name="plManufacturer.Text" xml:space="preserve">
    <value>Manufacturer</value>
  </data>
  <data name="divCoupon.Text" xml:space="preserve">
    <value>Promos &amp; Coupons</value>
  </data>
  <data name="divCustomerDiscount.Text" xml:space="preserve">
    <value>Customer Discounts</value>
  </data>
  <data name="divProductDiscount.Text" xml:space="preserve">
    <value>Product Discounts</value>
  </data>
  <data name="divQuantityDiscount.Text" xml:space="preserve">
    <value>Quantity Discounts</value>
  </data>
  <data name="imgDiscount.Text" xml:space="preserve">
    <value>Edit discounts &amp; coupons.</value>
  </data>
  <data name="lblActive.Text" xml:space="preserve">
    <value>Active</value>
  </data>
  <data name="lblDiscount.Text" xml:space="preserve">
    <value>Discount (%)</value>
  </data>
  <data name="lblEndDate.Text" xml:space="preserve">
    <value>End Date</value>
  </data>
  <data name="lblOptionName1.Text" xml:space="preserve">
    <value>Option</value>
  </data>
  <data name="lblOrderedOptionName.Text" xml:space="preserve">
    <value>Ordered Product Option</value>
  </data>
  <data name="lblOrderedProductName.Text" xml:space="preserve">
    <value>Ordered Product</value>
  </data>
  <data name="lblProductDiscountList.Text" xml:space="preserve">
    <value>Product discounts for "{0}"</value>
  </data>
  <data name="lblStartDate.Text" xml:space="preserve">
    <value>Start Date</value>
  </data>
  <data name="Tip_Discount_Product.Text" xml:space="preserve">
    <value>&lt;p&gt;&amp;nbsp;&amp;nbsp;Product Discounts can be set up to give a customer a discount based on a previous item they have ordered.  This includes items in their current order. &lt;br/&gt;&lt;br/&gt;

&amp;nbsp;&amp;nbsp;Typically, these discounts are used for: &lt;br/&gt;

&amp;nbsp;&amp;nbsp;    Upgrade Discounts: Customers placing an order who ordered the previous package. &lt;br/&gt;
 &amp;nbsp;&amp;nbsp;   Advanced Options: Customers who ordered the basic option and now want to order the advanced option.&lt;br/&gt;
 &amp;nbsp;&amp;nbsp;   Bonus Discounts: Customers who ordered another (unrelated) product, but for whom you want to provide incentive to order an additional item.&lt;br/&gt;
&lt;/p&gt;</value>
  </data>
  <data name="Between1to100.Text" xml:space="preserve">
    <value>Value must between 1 to 100</value>
  </data>
  <data name="btnAddDiscount.Text" xml:space="preserve">
    <value>Add Discount</value>
  </data>
  <data name="plDiscount.Help" xml:space="preserve">
    <value>Enter a value which between 1 - 100.</value>
  </data>
  <data name="plDiscount.Text" xml:space="preserve">
    <value>Discount (%)</value>
  </data>
  <data name="plDiscountActive.Help" xml:space="preserve">
    <value>Check to enable this item</value>
  </data>
  <data name="plDiscountActive.Text" xml:space="preserve">
    <value>Active</value>
  </data>
  <data name="plEndDate.Help" xml:space="preserve">
    <value>Enter a expire date, leave it as blank if you don't want limit expire date</value>
  </data>
  <data name="plEndDate.Text" xml:space="preserve">
    <value>End Date</value>
  </data>
  <data name="plOrderedOption.Help" xml:space="preserve">
    <value>Select ordered product option</value>
  </data>
  <data name="plOrderedOption.Text" xml:space="preserve">
    <value>Ordered product option</value>
  </data>
  <data name="plOrderedProduct.Help" xml:space="preserve">
    <value>Select ordered product</value>
  </data>
  <data name="plOrderedProduct.Text" xml:space="preserve">
    <value>Ordered Product</value>
  </data>
  <data name="plDiscountOption.Help" xml:space="preserve">
    <value>Select product option which will be applied.</value>
  </data>
  <data name="plDiscountOption.Text" xml:space="preserve">
    <value>Apply to product or its option</value>
  </data>
  <data name="plStartDate.Help" xml:space="preserve">
    <value>Enter a start date</value>
  </data>
  <data name="plStartDate.Text" xml:space="preserve">
    <value>Start Date</value>
  </data>
  <data name="lblCouponDiscountList.Text" xml:space="preserve">
    <value>Coupons for "{0}"</value>
  </data>
  <data name="lblCustomerDiscountList.Text" xml:space="preserve">
    <value>Customer discounts for "{0}"</value>
  </data>
  <data name="lblCustomerName.Text" xml:space="preserve">
    <value>Customer</value>
  </data>
  <data name="lblQuantity.Text" xml:space="preserve">
    <value>Quantity</value>
  </data>
  <data name="lblQuantityDiscountList.Text" xml:space="preserve">
    <value>Quantity discounts for "{0}"</value>
  </data>
  <data name="plCoupon.Help" xml:space="preserve">
    <value>Enter coupon (or promo code), value can't be null. Note, value is case insensitive.</value>
  </data>
  <data name="plCoupon.Text" xml:space="preserve">
    <value>Coupon</value>
  </data>
  <data name="plCustomer.Help" xml:space="preserve">
    <value>Only customers that previously have ordered a product from you will be listed when setting up a discount.</value>
  </data>
  <data name="plCustomer.Text" xml:space="preserve">
    <value>Apply to customer</value>
  </data>
  <data name="plQuantity.Help" xml:space="preserve">
    <value>Enter order quantity, e.g. 10</value>
  </data>
  <data name="plQuantity.Text" xml:space="preserve">
    <value>Order Quantity</value>
  </data>
  <data name="Tip_Discount.Text" xml:space="preserve">
    <value>Enter a value which between 1 - 100, 100 = totally free. Discount Price = Product Price * (100 - discount)/100.</value>
  </data>
  <data name="Tip_Discount_Coupon.Text" xml:space="preserve">
    <value>The Coupon system provides the option to create unique codes which customers can enter when items are added to the cart. 
Coupons can be configured to any discount percentage;  and set an end date for the coupon promotion.</value>
  </data>
  <data name="Tip_Discount_Customer.Text" xml:space="preserve">
    <value>&amp;nbsp;&amp;nbsp;Customer Discounts are used to setup a discount for a specific customer. Only customers that previously have ordered a product from you will be listed when setting up a discount. These discounts are good anytime you want to give one of your current customers a discount.
&lt;br/&gt;&lt;br/&gt;&amp;nbsp;&amp;nbsp;Module will send a notification email to customer after you add a discount to him/her. Note, customer can delete his/her discounts in "Cp_Admin sub module - Buyer Center - My Discounts" section.</value>
  </data>
  <data name="Tip_Discount_Quantity.Text" xml:space="preserve">
    <value>Quantity Discounts enable you to configure quantity (volume) discounts so that customers can receive discounts when ordering certain amount of products.
For example, "Product A" is sell as $100 per unit, when user buy 10 together, you can specify discount as 30%, so user can get them with 100 * (1 - 0.3) = 700.
</value>
  </data>
  <data name="btnAddCoupon.Text" xml:space="preserve">
    <value>Add Discount</value>
  </data>
  <data name="plDiscountDescription.Help" xml:space="preserve">
    <value>Enter description for this discount (optional)</value>
  </data>
  <data name="plDiscountDescription.Text" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="lblCoupon.Text" xml:space="preserve">
    <value>Coupon</value>
  </data>
  <data name="Tip_NoCustomer.Text" xml:space="preserve">
    <value>No customer available. Only customers that previously have ordered a product from you will be listed when setting up a discount.</value>
  </data>
  <data name="Tip_SameDiscount_Coupon.Text" xml:space="preserve">
    <value>Coupon for same product option already exist, please check it.Note, the coupon is case insensitive.</value>
  </data>
  <data name="Tip_SameDiscount_Customer.Text" xml:space="preserve">
    <value>Customer discount for same condition (same customer/apply to product or its option) already exists, please check it.</value>
  </data>
  <data name="Tip_SameDiscount_Product.Text" xml:space="preserve">
    <value>Product discount for same condition (same ordered product/ordered product option/apply to product or its option) already exists, please check it.</value>
  </data>
  <data name="Tip_SameDiscount_Quantity.Text" xml:space="preserve">
    <value>Quantity discount for same condition (same quantity/apply to product or its option) already exists, please check it.</value>
  </data>
  <data name="Tip_SameProduct.Text" xml:space="preserve">
    <value>Product discount can't be applied to itself (same ordered product/apply to product or its option), please use "Quantity Discount" instead.</value>
  </data>
  <data name="lblIsPublic.Text" xml:space="preserve">
    <value>Public</value>
  </data>
  <data name="plIsPublic.Help" xml:space="preserve">
    <value>Check this option to show coupon to visitors.</value>
  </data>
  <data name="plIsPublic.Text" xml:space="preserve">
    <value>Public</value>
  </data>
  <data name="Tip_Public.Text" xml:space="preserve">
    <value>Check this option to show coupon to visitors.</value>
  </data>
  <data name="Mail_UserDiscount_Content.Text" xml:space="preserve">
    <value>Seller {0} specify a {1} discount to you on product {2}</value>
  </data>
  <data name="Mail_UserDiscount_Subject.Text" xml:space="preserve">
    <value>{0} Discount Notification</value>
  </data>
  <data name="Mail_UserDiscount_Thanks.Text" xml:space="preserve">
    <value>Please login to {0} for more detail. Thanks for your support.</value>
  </data>
  <data name="divRoleDiscount.Text" xml:space="preserve">
    <value>Role Discounts</value>
  </data>
  <data name="lblRoleDiscountList.Text" xml:space="preserve">
    <value>Role discounts for "{0}"</value>
  </data>
  <data name="lblRoleName.Text" xml:space="preserve">
    <value>Role Name</value>
  </data>
  <data name="plFixedShippingFee.Help" xml:space="preserve">
    <value>If the "Shipping Fee Type" is "Seller choose the shipping method - fixed shipping fee", specify a fixed shipping fee here.</value>
  </data>
  <data name="plFixedShippingFee.Text" xml:space="preserve">
    <value>Fixed Shipping Fee</value>
  </data>
  <data name="plFixedTaxRate.Help" xml:space="preserve">
    <value>If the "Tax Rate Type" is "Fixed tax rate", specify a fixed tax rate here. Note, you don't need to provide % symbol.</value>
  </data>
  <data name="plFixedTaxRate.Text" xml:space="preserve">
    <value>Fixed Tax Rate</value>
  </data>
  <data name="plRole.Text" xml:space="preserve">
    <value>Apply To Role</value>
  </data>
  <data name="plShippingFeeType.Help" xml:space="preserve">
    <value>Choose shipping fee type for this listing.</value>
  </data>
  <data name="plShippingFeeType.Text" xml:space="preserve">
    <value>Shipping Fee Type</value>
  </data>
  <data name="plTaxRateType.Help" xml:space="preserve">
    <value>Choose tax rate type for this listing.</value>
  </data>
  <data name="plTaxRateType.Text" xml:space="preserve">
    <value>Tax Rate Type</value>
  </data>
  <data name="Tip_Discount_Role.Text" xml:space="preserve">
    <value>&amp;nbsp;&amp;nbsp;Role discounts are used to setup a discount for a specific role. Register users who belong to that role will get discount when order product,
this is a great way to encourage users to subscribe your site roles.</value>
  </data>
  <data name="Tip_SameDiscount_Role.Text" xml:space="preserve">
    <value>Role discount for same condition (same role/apply to product or its option) already exists, please check it.</value>
  </data>
  <data name="Tip_SelectCategory.Text" xml:space="preserve">
    <value>Select at least 1 category (up to {0} categories) for current product.</value>
  </data>
  <data name="divLocation.Text" xml:space="preserve">
    <value>Location</value>
  </data>
  <data name="li_Recursive_No.Text" xml:space="preserve">
    <value>Charge Once</value>
  </data>
  <data name="li_Recursive_Yes.Text" xml:space="preserve">
    <value>Recursive Charge</value>
  </data>
  <data name="divDateDiscount.Text" xml:space="preserve">
    <value>Date Discount</value>
  </data>
  <data name="divFirstCustomerDiscount.Text" xml:space="preserve">
    <value>First Buyer Discount</value>
  </data>
  <data name="lblDateDiscountList.Text" xml:space="preserve">
    <value>Date discounts for "{0}".</value>
  </data>
  <data name="lblFirstCustomer.Text" xml:space="preserve">
    <value>First Buyers</value>
  </data>
  <data name="lblFirstCustomerDiscountList.Text" xml:space="preserve">
    <value>First buyer discount for "{0}".</value>
  </data>
  <data name="plFirstCustomer.Help" xml:space="preserve">
    <value>Apply to first n buyers</value>
  </data>
  <data name="plFirstCustomer.Text" xml:space="preserve">
    <value>Apply to first n buyers</value>
  </data>
  <data name="Tip_SameDiscount_FirstCustomer.Text" xml:space="preserve">
    <value>First buyer discount for same condition (same first buyers/apply to product or its option) already exists, please check it.</value>
  </data>
  <data name="Tip_CreateRole.Text" xml:space="preserve">
    <value>You can create roles (which used to sell, e.g. "Vip", "Golden Vip") at DNN built-in menu "Admin - Security Roles", make sure the "Auto Assignment" option is not checked while creating them.</value>
  </data>
  <data name="Tip_Discount_Date.Text" xml:space="preserve">
    <value>Date discounts are used to setup a discount for a specific period. For example, you can create a 30% discount between 12/25 to 12/30, so users who buy product in this period will get 30% discount.</value>
  </data>
  <data name="Tip_Discount_FirstCustomer.Text" xml:space="preserve">
    <value>First buyer discounts are used to attract user to buy product right now. For example, you can create a 30% discount for the first 10 buyers.</value>
  </data>
  <data name="plMinSellQuantity.Help" xml:space="preserve">
    <value>Enter Minimum Sell Quantity, defatul value is 1. For example, if you enter 3, then customer must buy at least 3 quantity of product once.</value>
  </data>
  <data name="plMinSellQuantity.Text" xml:space="preserve">
    <value>Minimum Sell Quantity</value>
  </data>
  <data name="plShippingProperty.Help" xml:space="preserve">
    <value>Enter shipping property.e.g, Length=300cm, Width=200cm,Height=400cm</value>
  </data>
  <data name="plShippingProperty.Text" xml:space="preserve">
    <value>Shipping Property</value>
  </data>
  <data name="plOptionQuantity.Help" xml:space="preserve">
    <value>Item stock quantity for this option, enter -1 = unlimited quantity.</value>
  </data>
  <data name="plOptionQuantity.Text" xml:space="preserve">
    <value>Stock Quantity</value>
  </data>
  <data name="btnAddVariant.Text" xml:space="preserve">
    <value>Add Variant</value>
  </data>
  <data name="imgVariant.Text" xml:space="preserve">
    <value>Edit variants. Variant is similiar to the option, but it doesn't support stock property.</value>
  </data>
  <data name="lblCreateVariantGroup.Text" xml:space="preserve">
    <value>&lt;br/&gt;Tip, please create a variant group at "Cp_Admin sub module - Admin Control Panel - Departments - Fixed Price Departments" first.</value>
  </data>
  <data name="lblSortIndex.Text" xml:space="preserve">
    <value>Sort Index</value>
  </data>
  <data name="lblVariantGroup.Text" xml:space="preserve">
    <value>Variant Group</value>
  </data>
  <data name="lblVariantList.Text" xml:space="preserve">
    <value>Variant for "{0}". Each variant has its own properties (name/price...), client can choose his favorite variant while adding product to cart. Variant is similiar to the option, but it doesn't support the stock property, and the discount (and coupon) also can't be applied to these variants.&lt;br/&gt;&lt;br/&gt;
For example, when selling a T-shirt and you want to the client specifying his favorite size while ordering it (suppose that you don't care the stock property for each size). You can create a "Size" variant group at "Cp_Admin sub module - Admin Control Panel - Departments - Fixed Price Departments", and create 5 variants (S/M/L/XL/XXL/XXL) here, then the client can choose his favorite size from these 5 variants.</value>
  </data>
  <data name="lblVariantName.Text" xml:space="preserve">
    <value>Variant Name</value>
  </data>
  <data name="plSortIndex.Help" xml:space="preserve">
    <value>Sort Index</value>
  </data>
  <data name="plSortIndex.Text" xml:space="preserve">
    <value>Sort Index</value>
  </data>
  <data name="plVariantActive.Help" xml:space="preserve">
    <value>Is this variant active?</value>
  </data>
  <data name="plVariantActive.Text" xml:space="preserve">
    <value>Active?</value>
  </data>
  <data name="plVariantBonusPrice.Help" xml:space="preserve">
    <value>Enter bonus price which will add to product price. For example, if product price is 100, and bonus price is -30, then client need to pay 70 to buy product with this variant.</value>
  </data>
  <data name="plVariantBonusPrice.Text" xml:space="preserve">
    <value>Bonus Price (+/-)</value>
  </data>
  <data name="plVariantGroup.Help" xml:space="preserve">
    <value>Please select a variant group</value>
  </data>
  <data name="plVariantGroup.Text" xml:space="preserve">
    <value>Variant Group</value>
  </data>
  <data name="plVariantIsDefault.Help" xml:space="preserve">
    <value>Is this the default variant?</value>
  </data>
  <data name="plVariantIsDefault.Text" xml:space="preserve">
    <value>Default Variant?</value>
  </data>
  <data name="plVariantName.Help" xml:space="preserve">
    <value>Variant Name</value>
  </data>
  <data name="plVariantName.Text" xml:space="preserve">
    <value>Variant Name</value>
  </data>
  <data name="Tip_DefaultVariant.Text" xml:space="preserve">
    <value>Note, module will take the first one as default variant if you don't mark any variant as "Default Variant".</value>
  </data>
  <data name="Tip_BonusPrice_Option.Text" xml:space="preserve">
    <value>Enter bonus price which will add to the product price. For example, if product is 100, and bonus price is -30, then client needs to pay 70 to buy product when choosing this option. If bonus price is 20, then client needs to pay 120.</value>
  </data>
  <data name="Tip_BonusPrice_Variant.Text" xml:space="preserve">
    <value>Enter bonus price which will add to the product price. For example, if product is 100, and bonus price is -30, then client needs to pay 70 to buy product when choosing this variant. If bonus price is 20, then client needs to pay 120.</value>
  </data>
  <data name="lblUploadViaJs.Text" xml:space="preserve">
    <value>If above MS Silverlight upload control isn't available (for example, you are using iPhone/iPad/Android/tablet, or using Windows 10 edge browser which doesn't support Silverlight), try click "Upload Files Via JavaScript" button below. Note, you can also press Ctrl key to select multiple files once.</value>
  </data>
  <data name="lbtnUploadViaJs.Text" xml:space="preserve">
    <value>Upload Files Via JavaScript</value>
  </data>
</root>