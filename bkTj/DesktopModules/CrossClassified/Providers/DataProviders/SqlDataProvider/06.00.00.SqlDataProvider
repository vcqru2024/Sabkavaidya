/******   create function   ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[CP_CsvToInt]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
BEGIN
execute dbo.sp_executesql @statement = N'


/*****************************************************/
Create Function {databaseOwner}[CP_CsvToInt] ( @Array varchar(1000)) 
returns @IntTable table 
	(IntValue int)
AS
begin
	declare @separator char(1)
	set @separator = '',''
	declare @separator_position int 
	declare @array_value varchar(1000) 
	
	set @array = @array + '',''
	
	while patindex(''%,%'' , @array) <> 0 
	begin
	
	  select @separator_position =  patindex(''%,%'' , @array)
	  select @array_value = left(@array, @separator_position - 1)
	
		Insert @IntTable
		Values (Cast(@array_value as int))
	  select @array = stuff(@array, 1, @separator_position, '''')
	end
	return
end


' 
END

GO



/******   create product table  ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_CartAddress]') AND type in (N'U'))
BEGIN
CREATE TABLE {databaseOwner}[{objectQualifier}CP_Product_CartAddress](
	[UserId] [int] NOT NULL,
	[B_FirstName] [nvarchar](50) NULL,
	[B_LastName] [nvarchar](50) NULL,
	[B_Address1] [nvarchar](200) NULL,
	[B_Address2] [nvarchar](200) NULL,
	[B_City] [nvarchar](200) NULL,
	[B_RegionCode] [nvarchar](200) NULL,
	[B_CountryCode] [nvarchar](200) NULL,
	[B_PostalCode] [nvarchar](50) NULL,
	[B_Phone1] [nvarchar](20) NULL,
	[B_Phone2] [nvarchar](20) NULL,
	[S_FirstName] [nvarchar](50) NULL,
	[S_LastName] [nvarchar](50) NULL,
	[S_Address1] [nvarchar](200) NULL,
	[S_Address2] [nvarchar](200) NULL,
	[S_City] [nvarchar](200) NULL,
	[S_RegionCode] [nvarchar](200) NULL,
	[S_CountryCode] [nvarchar](200) NULL,
	[S_PostalCode] [nvarchar](50) NULL,
	[S_Phone1] [nvarchar](20) NULL,
	[S_Phone2] [nvarchar](20) NULL,
	[NeedAddress] [bit] NULL,
	[ShipSameAsBill] [bit] NULL,
 CONSTRAINT [PK_{objectQualifier}CP_Product_CartAddress] PRIMARY KEY CLUSTERED 
(
	[UserId] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Common_User]') AND type in (N'U'))
BEGIN
CREATE TABLE {databaseOwner}[{objectQualifier}CP_Common_User](
	[UserId] [int] NOT NULL,
	[Email] [nvarchar](80) NULL,
	[AvatarEmail] [nvarchar](80) NULL,
	[Authed] [bit] NULL,
	[SiteUrl] [nvarchar](200) NULL,
	[LogoUrl] [nvarchar](200) NULL,
	[Slogan] [nvarchar](200) NULL,
	[Biography] [ntext] NULL,
	[P_Type] [nvarchar](20) NULL,
	[P_DD_BankName] [nvarchar](400) NULL,
	[P_DD_RoutingNumber] [nvarchar](200) NULL,
	[P_DD_AccountNumber] [nvarchar](100) NULL,
	[P_DD_AccountType] [nvarchar](40) NULL,
	[P_Paypal] [nvarchar](40) NULL,
	[P_C_Payee] [nvarchar](40) NULL,
	[P_C_Address1] [nvarchar](200) NULL,
	[P_C_Address2] [nvarchar](200) NULL,
	[P_C_City] [nvarchar](200) NULL,
	[P_C_RegionCode] [nvarchar](200) NULL,
	[P_C_CountryCode] [nvarchar](200) NULL,
	[CustomerMessage] [nvarchar](4000) NULL,
	[IntegrateUrl] [nvarchar](400) NULL,
	[Support] [ntext] NULL,
	[License] [ntext] NULL,
	[Delivery] [ntext] NULL,
	[AdditionalParm] [nvarchar](200) NULL,
	[SecurityValue] [nchar](20) NULL,
 CONSTRAINT [PK_{objectQualifier}CP_Common_User] PRIMARY KEY CLUSTERED 
(
	[UserId] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Order]') AND type in (N'U'))
BEGIN
CREATE TABLE {databaseOwner}[{objectQualifier}CP_Product_Order](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[UserId] [int] NOT NULL,
	[PortalId] [int] NOT NULL,
	[UserName] [nvarchar](50) NULL,
	[OrderNo] [nvarchar](100) NULL,
	[OrderDate] [datetime] NULL,
	[B_FirstName] [nvarchar](50) NULL,
	[B_LastName] [nvarchar](50) NULL,
	[B_Address1] [nvarchar](200) NULL,
	[B_Address2] [nvarchar](200) NULL,
	[B_City] [nvarchar](200) NULL,
	[B_RegionCode] [nvarchar](200) NULL,
	[B_CountryCode] [nvarchar](200) NULL,
	[B_PostalCode] [nvarchar](50) NULL,
	[B_Phone1] [nvarchar](20) NULL,
	[B_Phone2] [nvarchar](20) NULL,
	[S_FirstName] [nvarchar](50) NULL,
	[S_LastName] [nvarchar](50) NULL,
	[S_Address1] [nvarchar](200) NULL,
	[S_Address2] [nvarchar](200) NULL,
	[S_City] [nvarchar](200) NULL,
	[S_RegionCode] [nvarchar](200) NULL,
	[S_CountryCode] [nvarchar](200) NULL,
	[S_PostalCode] [nvarchar](50) NULL,
	[S_Phone1] [nvarchar](20) NULL,
	[S_Phone2] [nvarchar](20) NULL,
	[ItemSummary] [decimal](18, 2) NULL CONSTRAINT [DF_{objectQualifier}CP_Product_Order_ShippingCost]  DEFAULT ((0)),
	[OrderIsPlaced] [bit] NULL CONSTRAINT [DF_{objectQualifier}CP_Product_Order_OrderIsPlaced]  DEFAULT ((0)),
	[OrderStatus] [int] NULL CONSTRAINT [DF_{objectQualifier}CP_Product_Order_OrderStatus]  DEFAULT ((1)),
	[NeedAddress] [bit] NULL,
	[ShipSameAsBill] [bit] NULL,
 CONSTRAINT [PK_{objectQualifier}CP_Product_Order] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Type]') AND type in (N'U'))
BEGIN
CREATE TABLE {databaseOwner}[{objectQualifier}CP_Product_Type](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[PortalId] [int] NOT NULL,
	[Name] [nvarchar](80) NOT NULL,
	[ParentId] [int] NULL,
	[Thumbnail] [nvarchar](200) NULL,
	[Image] [nvarchar](200) NULL,
	[TypePath] [nvarchar](255) NULL,
	[ListPage] [int] NULL,
	[DetailPage] [int] NULL,
	[SellType] [int] NULL,
	[Sellable] [bit] NULL,
	[Order] [int] NULL,
	[Level] [int] NULL,
	[Description] [nvarchar](1000) NULL,
	[EnableTax] [bit] NULL,
	[TaxRate] [decimal](10, 2) NULL,
	[TaxDescription] [nvarchar](1000) NULL,
	[ChargePercent] [decimal](10, 2) NULL,
 CONSTRAINT [PK_{objectQualifier}CP_Product_Type] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Common_Dictionary]') AND type in (N'U'))
BEGIN
CREATE TABLE {databaseOwner}[{objectQualifier}CP_Common_Dictionary](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[PortalId] [int] NOT NULL,
	[ItemKey] [nvarchar](100) NULL,
	[Value] [nvarchar](1000) NULL,
	[Order] [int] NULL,
 CONSTRAINT [PK_{objectQualifier}CP_Common_Dictionary] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Common_A3Folder]') AND type in (N'U'))
BEGIN
CREATE TABLE {databaseOwner}[{objectQualifier}CP_Common_A3Folder](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[PortalId] [int] NOT NULL,
	[UserId] [int] NOT NULL,
	[Name] [nvarchar](50) NULL,
 CONSTRAINT [PK_{objectQualifier}CP_Common_A3Folder] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Common_Role]') AND type in (N'U'))
BEGIN
CREATE TABLE {databaseOwner}[{objectQualifier}CP_Common_Role](
	[RoleId] [int] NOT NULL,
	[PortalId] [int] NOT NULL,
	[DiskQuote] [int] NULL,
	[ProductCount] [int] NULL,
	[ArticleCount] [int] NULL,
	[ImageCount] [int] NULL,
	[VideoCount] [int] NULL,
	[AudioCount] [int] NULL,
	[DocumentCount] [int] NULL,
	[FriendCount] [int] NULL,
 CONSTRAINT [PK_{objectQualifier}CP_Common_Role] PRIMARY KEY CLUSTERED 
(
	[RoleId] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Address]') AND type in (N'U'))
BEGIN
CREATE TABLE {databaseOwner}[{objectQualifier}CP_Product_Address](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[PortalId] [int] NOT NULL,
	[UserId] [int] NULL,
	[Name] [nvarchar](100) NULL,
	[Address1] [nvarchar](200) NULL,
	[Address2] [nvarchar](200) NULL,
	[City] [nvarchar](200) NULL,
	[RegionCode] [nvarchar](200) NULL,
	[CountryCode] [nvarchar](200) NULL,
	[PostalCode] [nvarchar](10) NULL,
	[Phone1] [nvarchar](20) NULL,
	[Phone2] [nvarchar](20) NULL,
	[IsPrimary] [bit] NULL,
	[CreatedDate] [datetime] NULL,
	[FirstName] [nvarchar](50) NULL,
	[LastName] [nvarchar](50) NULL,
 CONSTRAINT [PK_{objectQualifier}CP_Product_Address] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Common_A3File]') AND type in (N'U'))
BEGIN
CREATE TABLE {databaseOwner}[{objectQualifier}CP_Common_A3File](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[FolderId] [int] NOT NULL,
	[PortalId] [int] NULL,
	[UserId] [int] NULL,
	[FileName] [nvarchar](200) NULL,
	[Bucket] [nvarchar](200) NULL,
	[A3Key] [nvarchar](200) NULL,
	[Extension] [nvarchar](100) NULL,
	[Size] [int] NULL,
	[Width] [int] NULL,
	[Height] [int] NULL,
	[Duration] [nchar](10) NULL,
	[ContentType] [nvarchar](200) NULL,
	[CreatedDate] [datetime] NULL,
	[LastModifiedDate] [datetime] NULL,
 CONSTRAINT [PK_{objectQualifier}CP_Common_A3File] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Tag]') AND type in (N'U'))
BEGIN
CREATE TABLE {databaseOwner}[{objectQualifier}CP_Product_Tag](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[TypeId] [int] NOT NULL,
	[PortalId] [int] NULL,
	[UserId] [int] NULL,
	[Tag] [nvarchar](200) NULL,
	[CreatedDate] [datetime] NULL,
 CONSTRAINT [PK_{objectQualifier}CP_Product_Tag] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_UDField]') AND type in (N'U'))
BEGIN
CREATE TABLE {databaseOwner}[{objectQualifier}CP_Product_UDField](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[PortalId] [int] NULL,
	[TypeId] [int] NOT NULL,
	[FieldName] [nvarchar](50) NULL,
	[FieldTitle] [nvarchar](50) NULL,
	[Visible] [bit] NULL,
	[FieldOrder] [int] NULL CONSTRAINT [DF_{objectQualifier}CP_Prod__Field__3B0C8E63]  DEFAULT ((0)),
	[FieldType] [varchar](20) NULL,
	[Required] [bit] NULL CONSTRAINT [DF_{objectQualifier}CP_Prod__Requi__3C00B29C]  DEFAULT ((0)),
	[DefaultValue] [nvarchar](2000) NULL CONSTRAINT [DF_{objectQualifier}CP_Prod__Defau__3CF4D6D5]  DEFAULT (''),
	[OutputSettings] [nvarchar](2000) NULL CONSTRAINT [DF_{objectQualifier}CP_Prod__Outpu__3DE8FB0E]  DEFAULT (''),
	[InputSettings] [nvarchar](2000) NULL,
	[ValidationRule] [nvarchar](512) NULL,
	[ValidationMessage] [nvarchar](512) NULL,
	[NormalizeFlag] [bit] NULL CONSTRAINT [DF_{objectQualifier}CP_Prod__Norma__3EDD1F47]  DEFAULT ((0)),
	[HelpText] [nvarchar](512) NULL,
	[Searchable] [bit] NULL CONSTRAINT [DF_{objectQualifier}CP_Prod__Searc__3FD14380]  DEFAULT ((0)),
	[ShowOnEdit] [bit] NULL CONSTRAINT [DF_{objectQualifier}CP_Prod__ShowO__40C567B9]  DEFAULT ((1)),
	[PrivateField] [bit] NULL CONSTRAINT [DF_{objectQualifier}CP_Prod__Priva__41B98BF2]  DEFAULT ((0)),
	[EditStyle] [nvarchar](512) NULL,
 CONSTRAINT [PK_{objectQualifier}CP_Product_UDField] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_UserCategory]') AND type in (N'U'))
BEGIN
CREATE TABLE {databaseOwner}[{objectQualifier}CP_Product_UserCategory](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[PortalId] [int] NOT NULL,
	[TypeId] [int] NOT NULL,
	[UserId] [int] NOT NULL,
	[Name] [nvarchar](80) NOT NULL,
	[Thumbnail] [nvarchar](200) NULL,
	[Image] [nvarchar](200) NULL,
	[Order] [int] NULL,
	[Description] [nvarchar](1000) NULL,
 CONSTRAINT [PK_{objectQualifier}CP_Product_UserCategory] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Product]') AND type in (N'U'))
BEGIN
CREATE TABLE {databaseOwner}[{objectQualifier}CP_Product_Product](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[PortalId] [int] NOT NULL,
	[TypeId] [int] NOT NULL,
	[UserCategoryId] [int] NOT NULL,
	[UserId] [int] NOT NULL,
	[Name] [nvarchar](200) NOT NULL,
	[PreviousVersion] [int] NULL,
	[CreatedDate] [datetime] NULL,
	[Authed] [bit] NULL,
	[Featured] [bit] NULL,
	[Active] [bit] NULL,
	[Summary] [nvarchar](1000) NULL,
	[LinkUrl] [nvarchar](200) NULL,
	[Description] [ntext] NULL,
	[Thumbnail] [nvarchar](200) NULL,
	[Image] [nvarchar](200) NULL,
	[Support] [ntext] NULL,
	[License] [ntext] NULL,
	[RoleAfterOrder] [int] NULL,
	[RoleAddDay] [int] NULL,
	[PurchasePrice] [decimal](18, 2) NULL,
	[PromoPrice] [decimal](18, 2) NULL,
	[EnablePromoPrice] [bit] NULL,
	[PromoStart] [datetime] NULL,
	[PromoEnd] [datetime] NULL,
	[StockQuantity] [int] NULL,
	[LowThreshold] [int] NULL,
	[Delivery] [ntext] NULL,
	[SpecialOffer] [ntext] NULL,
	[Views] [int] NULL CONSTRAINT [DF_{objectQualifier}CP_Product_Product_Views]  DEFAULT ((1)),
	[PublishDate] [datetime] NULL,
	[ExpireDate] [datetime] NULL,
	[LastModifiedDate] [datetime] NULL,
	[AllowComment] [bit] NULL,
	[AllowRating] [bit] NULL,
	[CommentRoles] [nvarchar](200) NULL,
	[RatingRoles] [nvarchar](200) NULL,
	[DownloadRoles] [nvarchar](200) NULL,
	[AutoAuthComment] [bit] NULL,
	[Order] [int] NULL,
 CONSTRAINT [PK_{objectQualifier}CP_Product_Product] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
END
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Category]') AND type in (N'U'))
BEGIN
CREATE TABLE {databaseOwner}[{objectQualifier}CP_Product_Category](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[PortalId] [int] NOT NULL,
	[TypeId] [int] NOT NULL,
	[ParentId] [int] NOT NULL,
	[Name] [nvarchar](100) NOT NULL,
	[Thumbnail] [nvarchar](200) NULL,
	[Image] [nvarchar](200) NULL,
	[Order] [int] NULL,
	[Level] [int] NULL,
	[Description] [nvarchar](1000) NULL,
 CONSTRAINT [PK_{objectQualifier}CP_Product_Category] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/******   Trigger {databaseOwner}[{objectQualifier}CP_Product_Category_OnDelete]     08/13/2009 11:05:25 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

IF  EXISTS (SELECT * FROM sys.triggers WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Category_OnDelete]'))
DROP TRIGGER {databaseOwner}[{objectQualifier}CP_Product_Category_OnDelete]
GO

Create Trigger  {databaseOwner}[{objectQualifier}CP_Product_Category_OnDelete]
On {databaseOwner}[{objectQualifier}CP_Product_Category]
for delete 
as 
   declare @id int
   select @id=id from deleted del;

   delete  from  {databaseOwner}{objectQualifier}CP_Product_Category 
   where ParentId=@id

   delete from {databaseOwner}{objectQualifier}CP_Product_ProductToCategory
   where CategoryId=@id
GO


IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_TicketDetail]') AND type in (N'U'))
BEGIN
CREATE TABLE {databaseOwner}[{objectQualifier}CP_Product_TicketDetail](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[TicketId] [int] NOT NULL,
	[UserId] [int] NULL,
	[UserName] [nvarchar](50) NULL,
	[CreatedDate] [datetime] NULL,
	[Title] [nvarchar](1000) NULL,
	[Description] [nvarchar](4000) NULL,
 CONSTRAINT [PK_{objectQualifier}CP_Product_TicketDetail] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_OrderDetail]') AND type in (N'U'))
BEGIN
CREATE TABLE {databaseOwner}[{objectQualifier}CP_Product_OrderDetail](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[OrderId] [int] NOT NULL,
	[PortalId] [int] NULL,
	[TypeId] [int] NULL,
	[OrderNo] [nvarchar](100) NULL,
	[InvoiceNo] [nvarchar](100) NULL,
	[ClientId] [int] NULL,
	[ClientName] [nvarchar](50) NULL,
	[VendorId] [int] NULL,
	[VendorName] [nvarchar](50) NULL,
	[ProductId] [int] NOT NULL,
	[ProductName] [nvarchar](200) NULL,
	[OptionId] [int] NULL,
	[OptionName] [nvarchar](200) NULL,
	[Quantity] [int] NULL,
	[UnitPrice] [decimal](18, 2) NULL,
	[TaxFee] [decimal](18, 2) NULL,
	[ShipId] [int] NULL,
	[ShipName] [nvarchar](200) NULL,
	[ShipFee] [decimal](18, 2) NULL,
	[ItemSum] [decimal](18, 2) NULL,
	[CreatedDate] [datetime] NULL,
	[ShipDate] [datetime] NULL,
	[ArriveDate] [datetime] NULL,
	[DiscountRequest] [nvarchar](1000) NULL,
	[DiscountResponse] [nvarchar](1000) NULL,
 CONSTRAINT [PK_{objectQualifier}CP_Product_OrderDetail] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_ProductToTag]') AND type in (N'U'))
BEGIN
CREATE TABLE {databaseOwner}[{objectQualifier}CP_Product_ProductToTag](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[ProductId] [int] NOT NULL,
	[TagId] [int] NOT NULL,
 CONSTRAINT [PK_{objectQualifier}CP_Product_ProductToTag] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Option]') AND type in (N'U'))
BEGIN
CREATE TABLE {databaseOwner}[{objectQualifier}CP_Product_Option](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[ProductId] [int] NOT NULL,
	[Name] [nvarchar](200) NULL,
	[Description] [nvarchar](1000) NULL,
	[BonusPrice] [decimal](18, 2) NULL,
	[IsDefault] [bit] NULL,
	[RoleAfterOrder] [int] NULL,
	[RoleAddDay] [int] NULL,
	[Active] [bit] NULL,
 CONSTRAINT [PK_{objectQualifier}CP_Product_Option] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Ship]') AND type in (N'U'))
BEGIN
CREATE TABLE {databaseOwner}[{objectQualifier}CP_Product_Ship](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[ProductId] [int] NOT NULL,
	[OptionId] [int] NULL,
	[Name] [nvarchar](200) NULL,
	[Description] [nvarchar](1000) NULL,
	[Price] [decimal](18, 2) NULL,
 CONSTRAINT [PK_{objectQualifier}CP_Product_Ship] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Video]') AND type in (N'U'))
BEGIN
CREATE TABLE {databaseOwner}[{objectQualifier}CP_Product_Video](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[ProductId] [int] NOT NULL,
	[Title] [nvarchar](200) NULL,
	[VideoFile] [nvarchar](2000) NULL,
	[VideoPath] [nvarchar](2000) NULL,
	[Description] [ntext] NULL,
	[Duration] [nchar](10) NULL,
	[Thumbnail] [nvarchar](400) NULL,
	[CreatedDate] [datetime] NULL,
	[Views] [int] NULL,
 CONSTRAINT [PK_{objectQualifier}CP_Product_Video] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Audio]') AND type in (N'U'))
BEGIN
CREATE TABLE {databaseOwner}[{objectQualifier}CP_Product_Audio](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[ProductId] [int] NOT NULL,
	[Title] [nvarchar](200) NULL,
	[Description] [ntext] NULL,
	[AudioFile] [nvarchar](200) NULL,
	[AudioPath] [nvarchar](200) NULL,
	[Duration] [nchar](10) NULL,
	[CreatedDate] [datetime] NULL,
	[Views] [int] NULL,
 CONSTRAINT [PK_{objectQualifier}CP_Product_Audio] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Attachment]') AND type in (N'U'))
BEGIN
CREATE TABLE {databaseOwner}[{objectQualifier}CP_Product_Attachment](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[ProductId] [int] NOT NULL,
	[FileName] [nvarchar](250) NULL,
	[FilePath] [nvarchar](500) NULL,
 CONSTRAINT [PK_{objectQualifier}CP_Product_Attachment] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_UDData]') AND type in (N'U'))
BEGIN
CREATE TABLE {databaseOwner}[{objectQualifier}CP_Product_UDData](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[FieldId] [int] NOT NULL,
	[ProductId] [int] NOT NULL,
	[FieldValue] [ntext] NULL,
 CONSTRAINT [PK_{objectQualifier}CP_Product_UDData] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Watch]') AND type in (N'U'))
BEGIN
CREATE TABLE {databaseOwner}[{objectQualifier}CP_Product_Watch](
	[Id] [int] IDENTITY(1000,1) NOT NULL,
	[ProductId] [int] NOT NULL,
	[UserId] [int] NULL,
	[PortalId] [int] NULL,
	[ProductName] [nvarchar](200) NULL,
	[CreatedDate] [datetime] NULL,
 CONSTRAINT [PK_{objectQualifier}CP_Product_Watch] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Image]') AND type in (N'U'))
BEGIN
CREATE TABLE {databaseOwner}[{objectQualifier}CP_Product_Image](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[ProductId] [int] NOT NULL,
	[Title] [nvarchar](200) NULL,
	[Description] [ntext] NULL,
	[Thumbnail] [nvarchar](200) NULL,
	[ImageFile] [nvarchar](200) NULL,
	[ImagePath] [nvarchar](200) NULL,
	[CreatedDate] [datetime] NULL,
	[Views] [int] NULL,
 CONSTRAINT [PK_{objectQualifier}CP_Product_Image] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_ProductToCategory]') AND type in (N'U'))
BEGIN
CREATE TABLE {databaseOwner}[{objectQualifier}CP_Product_ProductToCategory](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[ProductId] [int] NOT NULL,
	[CategoryId] [int] NOT NULL,
 CONSTRAINT [PK_{objectQualifier}CP_Product_ProductToCategory] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_ProductToRole]') AND type in (N'U'))
BEGIN
CREATE TABLE {databaseOwner}[{objectQualifier}CP_Product_ProductToRole](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[ProductId] [int] NOT NULL,
	[RoleId] [int] NOT NULL,
 CONSTRAINT [PK_{objectQualifier}CP_Product_ProductToRole] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Download]') AND type in (N'U'))
BEGIN
CREATE TABLE {databaseOwner}[{objectQualifier}CP_Product_Download](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[ProductId] [int] NOT NULL,
	[OptionId] [int] NULL,
	[FileName] [nvarchar](200) NULL,
	[ActualName] [nvarchar](300) NULL,
	[Size] [int] NULL,
	[CreatedDate] [datetime] NULL,
 CONSTRAINT [PK_{objectQualifier}CP_Product_Download] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Cart]') AND type in (N'U'))
BEGIN
CREATE TABLE {databaseOwner}[{objectQualifier}CP_Product_Cart](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[ProductId] [int] NOT NULL,
	[ProductName] [nvarchar](200) NULL,
	[ClientId] [int] NULL,
	[ClientName] [nvarchar](50) NULL,
	[VendorId] [int] NULL,
	[VendorName] [nvarchar](50) NULL,
	[OptionId] [int] NULL,
	[OptionName] [nvarchar](200) NULL,
	[Quantity] [int] NULL,
	[UnitPrice] [decimal](18, 2) NULL,
	[TaxFee] [decimal](18, 2) NULL,
	[ShipId] [int] NULL,
	[ShipName] [nvarchar](200) NULL,
	[ShipFee] [decimal](18, 2) NULL,
	[CreatedDate] [datetime] NULL,
	[ItemSum] [decimal](18, 2) NULL,
	[DiscountRequest] [nvarchar](1000) NULL,
	[DiscountResponse] [nvarchar](1000) NULL,
 CONSTRAINT [PK_{objectQualifier}CP_Product_Cart] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Ticket]') AND type in (N'U'))
BEGIN
CREATE TABLE {databaseOwner}[{objectQualifier}CP_Product_Ticket](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[ProductId] [int] NOT NULL,
	[VendorId] [int] NULL,
	[VendorName] [nvarchar](50) NULL,
	[PortalId] [int] NULL,
	[ProductName] [nvarchar](200) NULL,
	[ClientId] [int] NULL,
	[ClientName] [nvarchar](50) NULL,
	[TicketNo] [nvarchar](100) NULL,
	[OptionId] [int] NULL,
	[OptionName] [nvarchar](200) NULL,
	[CreatedDate] [datetime] NULL,
	[UpdatedDate] [datetime] NULL,
	[Title] [nvarchar](1000) NULL,
	[Closed] [bit] NULL,
 CONSTRAINT [PK_{objectQualifier}CP_Product_Ticket] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Rating]') AND type in (N'U'))
BEGIN
CREATE TABLE {databaseOwner}[{objectQualifier}CP_Product_Rating](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[ProductId] [int] NOT NULL,
	[ProductName] [nvarchar](200) NULL,
	[VendorId] [int] NULL,
	[VendorName] [nvarchar](50) NULL,
	[ClientId] [int] NULL,
	[ClientName] [nvarchar](100) NULL,
	[Rating] [int] NULL,
	[Info] [nvarchar](2000) NULL,
	[Reply] [nvarchar](2000) NULL,
	[UpdatedDate] [datetime] NULL,
	[Authed] [bit] NULL,
 CONSTRAINT [PK_{objectQualifier}CP_Product_Rating] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Comment]') AND type in (N'U'))
BEGIN
CREATE TABLE {databaseOwner}[{objectQualifier}CP_Product_Comment](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[PortalId] [int] NOT NULL,
	[ProductId] [int] NOT NULL,
	[ProductName] [nvarchar](200) NULL,
	[UserId] [int] NULL,
	[UserName] [nvarchar](50) NULL,
	[CreatedDate] [datetime] NULL,
	[Comment] [nvarchar](1000) NULL,
	[Mail] [nvarchar](30) NULL,
	[Url] [nvarchar](100) NULL,
	[IsPrivate] [bit] NULL,
	[Authed] [bit] NULL,
 CONSTRAINT [PK_{objectQualifier}CP_Product_Comment] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
/************ end product table ********/

/************  create product relation ********/
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}[FK_{objectQualifier}CP_Product_Type_Portals]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Type]'))
ALTER TABLE {databaseOwner}[{objectQualifier}CP_Product_Type]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}CP_Product_Type_Portals] FOREIGN KEY([PortalId])
REFERENCES {databaseOwner}[{objectQualifier}Portals] ([PortalID])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}[FK_{objectQualifier}CP_Common_Dictionary_Portals]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Common_Dictionary]'))
ALTER TABLE {databaseOwner}[{objectQualifier}CP_Common_Dictionary]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}CP_Common_Dictionary_Portals] FOREIGN KEY([PortalId])
REFERENCES {databaseOwner}[{objectQualifier}Portals] ([PortalID])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}[FK_{objectQualifier}CP_Common_A3Folder_Portals]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Common_A3Folder]'))
ALTER TABLE {databaseOwner}[{objectQualifier}CP_Common_A3Folder]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}CP_Common_A3Folder_Portals] FOREIGN KEY([PortalId])
REFERENCES {databaseOwner}[{objectQualifier}Portals] ([PortalID])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}[FK_{objectQualifier}CP_Common_Role_Portals]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Common_Role]'))
ALTER TABLE {databaseOwner}[{objectQualifier}CP_Common_Role]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}CP_Common_Role_Portals] FOREIGN KEY([PortalId])
REFERENCES {databaseOwner}[{objectQualifier}Portals] ([PortalID])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}[FK_{objectQualifier}CP_Product_Address_Portals]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Address]'))
ALTER TABLE {databaseOwner}[{objectQualifier}CP_Product_Address]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}CP_Product_Address_Portals] FOREIGN KEY([PortalId])
REFERENCES {databaseOwner}[{objectQualifier}Portals] ([PortalID])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}[FK_{objectQualifier}CP_Common_A3File_CP_Common_A3Folder]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Common_A3File]'))
ALTER TABLE {databaseOwner}[{objectQualifier}CP_Common_A3File]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}CP_Common_A3File_CP_Common_A3Folder] FOREIGN KEY([FolderId])
REFERENCES {databaseOwner}[{objectQualifier}CP_Common_A3Folder] ([Id])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}[FK_{objectQualifier}CP_Product_Tag_CP_Product_Type]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Tag]'))
ALTER TABLE {databaseOwner}[{objectQualifier}CP_Product_Tag]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}CP_Product_Tag_CP_Product_Type] FOREIGN KEY([TypeId])
REFERENCES {databaseOwner}[{objectQualifier}CP_Product_Type] ([Id])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}[FK_{objectQualifier}CP_Product_UDField_CP_Product_Type]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_UDField]'))
ALTER TABLE {databaseOwner}[{objectQualifier}CP_Product_UDField]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}CP_Product_UDField_CP_Product_Type] FOREIGN KEY([TypeId])
REFERENCES {databaseOwner}[{objectQualifier}CP_Product_Type] ([Id])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}[FK_{objectQualifier}CP_Product_UserCategory_CP_Product_Type]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_UserCategory]'))
ALTER TABLE {databaseOwner}[{objectQualifier}CP_Product_UserCategory]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}CP_Product_UserCategory_CP_Product_Type] FOREIGN KEY([TypeId])
REFERENCES {databaseOwner}[{objectQualifier}CP_Product_Type] ([Id])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}[FK_{objectQualifier}CP_Product_Product_CP_Product_Type]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Product]'))
ALTER TABLE {databaseOwner}[{objectQualifier}CP_Product_Product]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}CP_Product_Product_CP_Product_Type] FOREIGN KEY([TypeId])
REFERENCES {databaseOwner}[{objectQualifier}CP_Product_Type] ([Id])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}[FK_{objectQualifier}CP_Product_Category_CP_Product_Type]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Category]'))
ALTER TABLE {databaseOwner}[{objectQualifier}CP_Product_Category]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}CP_Product_Category_CP_Product_Type] FOREIGN KEY([TypeId])
REFERENCES {databaseOwner}[{objectQualifier}CP_Product_Type] ([Id])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}[FK_{objectQualifier}CP_Product_TicketDetail_CP_Product_Ticket]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_TicketDetail]'))
ALTER TABLE {databaseOwner}[{objectQualifier}CP_Product_TicketDetail]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}CP_Product_TicketDetail_CP_Product_Ticket] FOREIGN KEY([TicketId])
REFERENCES {databaseOwner}[{objectQualifier}CP_Product_Ticket] ([Id])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}[FK_{objectQualifier}CP_Product_OrderDetail_CP_Product_Order]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_OrderDetail]'))
ALTER TABLE {databaseOwner}[{objectQualifier}CP_Product_OrderDetail]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}CP_Product_OrderDetail_CP_Product_Order] FOREIGN KEY([OrderId])
REFERENCES {databaseOwner}[{objectQualifier}CP_Product_Order] ([Id])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}[FK_{objectQualifier}CP_Product_OrderDetail_CP_Product_Product]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_OrderDetail]'))
ALTER TABLE {databaseOwner}[{objectQualifier}CP_Product_OrderDetail]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}CP_Product_OrderDetail_CP_Product_Product] FOREIGN KEY([ProductId])
REFERENCES {databaseOwner}[{objectQualifier}CP_Product_Product] ([Id])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}[FK_{objectQualifier}CP_Product_ProductToTag_CP_Product_Product]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_ProductToTag]'))
ALTER TABLE {databaseOwner}[{objectQualifier}CP_Product_ProductToTag]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}CP_Product_ProductToTag_CP_Product_Product] FOREIGN KEY([ProductId])
REFERENCES {databaseOwner}[{objectQualifier}CP_Product_Product] ([Id])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}[FK_{objectQualifier}CP_Product_Option_CP_Product_Product]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Option]'))
ALTER TABLE {databaseOwner}[{objectQualifier}CP_Product_Option]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}CP_Product_Option_CP_Product_Product] FOREIGN KEY([ProductId])
REFERENCES {databaseOwner}[{objectQualifier}CP_Product_Product] ([Id])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}[FK_{objectQualifier}CP_Product_Ship_CP_Product_Product]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Ship]'))
ALTER TABLE {databaseOwner}[{objectQualifier}CP_Product_Ship]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}CP_Product_Ship_CP_Product_Product] FOREIGN KEY([ProductId])
REFERENCES {databaseOwner}[{objectQualifier}CP_Product_Product] ([Id])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}[FK_{objectQualifier}CP_Product_Video_CP_Product_Product]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Video]'))
ALTER TABLE {databaseOwner}[{objectQualifier}CP_Product_Video]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}CP_Product_Video_CP_Product_Product] FOREIGN KEY([ProductId])
REFERENCES {databaseOwner}[{objectQualifier}CP_Product_Product] ([Id])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}[FK_{objectQualifier}CP_Product_Audio_CP_Product_Product]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Audio]'))
ALTER TABLE {databaseOwner}[{objectQualifier}CP_Product_Audio]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}CP_Product_Audio_CP_Product_Product] FOREIGN KEY([ProductId])
REFERENCES {databaseOwner}[{objectQualifier}CP_Product_Product] ([Id])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}[FK_{objectQualifier}CP_Product_Attachment_CP_Product_Product]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Attachment]'))
ALTER TABLE {databaseOwner}[{objectQualifier}CP_Product_Attachment]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}CP_Product_Attachment_CP_Product_Product] FOREIGN KEY([ProductId])
REFERENCES {databaseOwner}[{objectQualifier}CP_Product_Product] ([Id])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}[FK_{objectQualifier}CP_Product_UDData_CP_Product_Product]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_UDData]'))
ALTER TABLE {databaseOwner}[{objectQualifier}CP_Product_UDData]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}CP_Product_UDData_CP_Product_Product] FOREIGN KEY([ProductId])
REFERENCES {databaseOwner}[{objectQualifier}CP_Product_Product] ([Id])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}[FK_{objectQualifier}CP_Product_Watch_CP_Product_Product]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Watch]'))
ALTER TABLE {databaseOwner}[{objectQualifier}CP_Product_Watch]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}CP_Product_Watch_CP_Product_Product] FOREIGN KEY([ProductId])
REFERENCES {databaseOwner}[{objectQualifier}CP_Product_Product] ([Id])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}[FK_{objectQualifier}CP_Product_Image_CP_Product_Product]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Image]'))
ALTER TABLE {databaseOwner}[{objectQualifier}CP_Product_Image]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}CP_Product_Image_CP_Product_Product] FOREIGN KEY([ProductId])
REFERENCES {databaseOwner}[{objectQualifier}CP_Product_Product] ([Id])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}[FK_{objectQualifier}CP_Product_ProductToCategory_CP_Product_Product]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_ProductToCategory]'))
ALTER TABLE {databaseOwner}[{objectQualifier}CP_Product_ProductToCategory]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}CP_Product_ProductToCategory_CP_Product_Product] FOREIGN KEY([ProductId])
REFERENCES {databaseOwner}[{objectQualifier}CP_Product_Product] ([Id])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}[FK_{objectQualifier}CP_Product_ProductToRole_CP_Product_Product]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_ProductToRole]'))
ALTER TABLE {databaseOwner}[{objectQualifier}CP_Product_ProductToRole]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}CP_Product_ProductToRole_CP_Product_Product] FOREIGN KEY([ProductId])
REFERENCES {databaseOwner}[{objectQualifier}CP_Product_Product] ([Id])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}[FK_{objectQualifier}CP_Product_Download_CP_Product_Product]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Download]'))
ALTER TABLE {databaseOwner}[{objectQualifier}CP_Product_Download]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}CP_Product_Download_CP_Product_Product] FOREIGN KEY([ProductId])
REFERENCES {databaseOwner}[{objectQualifier}CP_Product_Product] ([Id])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}[FK_{objectQualifier}CP_Product_Cart_CP_Product_Product]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Cart]'))
ALTER TABLE {databaseOwner}[{objectQualifier}CP_Product_Cart]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}CP_Product_Cart_CP_Product_Product] FOREIGN KEY([ProductId])
REFERENCES {databaseOwner}[{objectQualifier}CP_Product_Product] ([Id])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}[FK_{objectQualifier}CP_Product_Ticket_CP_Product_Product]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Ticket]'))
ALTER TABLE {databaseOwner}[{objectQualifier}CP_Product_Ticket]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}CP_Product_Ticket_CP_Product_Product] FOREIGN KEY([ProductId])
REFERENCES {databaseOwner}[{objectQualifier}CP_Product_Product] ([Id])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}[FK_{objectQualifier}CP_Product_Rating_CP_Product_Product]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Rating]'))
ALTER TABLE {databaseOwner}[{objectQualifier}CP_Product_Rating]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}CP_Product_Rating_CP_Product_Product] FOREIGN KEY([ProductId])
REFERENCES {databaseOwner}[{objectQualifier}CP_Product_Product] ([Id])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}[FK_{objectQualifier}CP_Product_Comment_CP_Product_Product]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Comment]'))
ALTER TABLE {databaseOwner}[{objectQualifier}CP_Product_Comment]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}CP_Product_Comment_CP_Product_Product] FOREIGN KEY([ProductId])
REFERENCES {databaseOwner}[{objectQualifier}CP_Product_Product] ([Id])
ON UPDATE CASCADE
ON DELETE CASCADE

/************  end product relation ********/

/************  common table ********/
/******   Table {databaseOwner}[{objectQualifier}CrossPortalSetting]     08/13/2009 11:05:25 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CrossPortalSetting]') AND type in (N'U'))
BEGIN
CREATE TABLE {databaseOwner}[{objectQualifier}CrossPortalSetting](
	[PortalID] [int] NOT NULL,
	[SettingName] [nvarchar](300) NOT NULL,
	[SettingValue] [nvarchar](2000) NOT NULL,
 CONSTRAINT [PK_{objectQualifier}CrossProduct_PortalSetting] PRIMARY KEY CLUSTERED 
(
	[PortalID] ASC,
	[SettingName] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
/************  end common table ********/

/************  portal settings table relation ********/
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}[FK_{objectQualifier}CrossPortalSetting_Portals]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CrossPortalSetting]'))
ALTER TABLE {databaseOwner}[{objectQualifier}CrossPortalSetting]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}CrossPortalSetting_Portals] FOREIGN KEY([PortalID])
REFERENCES {databaseOwner}[{objectQualifier}Portals] ([PortalID])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
/************  end portal settings table relation  ********/

/************Create procedures for crossportalsettings***************/

/******   StoredProcedure {databaseOwner}[{objectQualifier}CrossPortalSettingGetModuleTab]     08/13/2009 11:05:41 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CrossPortalSettingGetModuleTab]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
/******   StoredProcedure dbo.CrossPortalSetting_GetModuleTab     10/18/2007 01:56:59 ******/

CREATE       PROCEDURE {databaseOwner}[{objectQualifier}CrossPortalSettingGetModuleTab]
	@PortalId int,	
	@ModuleDefName nvarchar(300)	
AS

Declare @TabId int


      set @TabId= (select top 1 a.tabid 
      from {databaseOwner}{objectQualifier}tabmodules a,{databaseOwner}{objectQualifier}modules b, {databaseOwner}{objectQualifier}moduledefinitions c,{databaseOwner}{objectQualifier}desktopmodules d
      where d.modulename=@ModuleDefName and
      b.PortalId=@PortalId and
      a.moduleid=b.moduleid and
      b.moduledefid= c.moduledefid and
      c.desktopmoduleid=d.desktopmoduleid)

if(@TabId is  null)
begin
   set @TabId=0
end
select @TabId




' 
END
GO
/******   StoredProcedure {databaseOwner}[{objectQualifier}CrossPortalSettingList]     08/13/2009 11:05:43 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CrossPortalSettingList]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
/******   StoredProcedure dbo.CrossPortalSetting_List    10/18/2007 01:56:59 ******/

CREATE PROCEDURE {databaseOwner}[{objectQualifier}CrossPortalSettingList]
AS

SELECT
	[PortalID],
	[SettingName],
	[SettingValue]
FROM {databaseOwner}{objectQualifier}CrossPortalSetting




' 
END
GO
/******   StoredProcedure {databaseOwner}[{objectQualifier}CrossPortalSettingUpdate]     08/13/2009 11:05:44 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CrossPortalSettingUpdate]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'


CREATE  PROCEDURE {databaseOwner}[{objectQualifier}CrossPortalSettingUpdate]
	@PortalID int, 
	@SettingName nvarchar(300), 
	@SettingValue nvarchar(2000) 
AS

UPDATE {databaseOwner}{objectQualifier}CrossPortalSetting SET
	[SettingValue] = @SettingValue
WHERE
	[PortalID] = @PortalID
	AND [SettingName] = @SettingName




' 
END
GO
/******   StoredProcedure {databaseOwner}[{objectQualifier}CrossPortalSettingAdd]     08/13/2009 11:05:44 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CrossPortalSettingAdd]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'


CREATE  PROCEDURE {databaseOwner}[{objectQualifier}CrossPortalSettingAdd]
	@PortalID int,
	@SettingName nvarchar(300),
	@SettingValue nvarchar(2000)
AS

-- THIS STORED PROCEDURE NEEDS TO BE MANUALLY COMPLETED
-- MULITPLE PRIMARY KEY MEMBERS OR NON-GUID/INT PRIMARY KEY
Declare @count int

SELECT  @count=count([PortalID])
FROM {databaseOwner}{objectQualifier}CrossPortalSetting
WHERE
	[PortalID] = @PortalID
	AND [SettingName] = @SettingName

if(@count=0)
begin
   INSERT INTO {databaseOwner}{objectQualifier}CrossPortalSetting 
   (
	[PortalID],
	[SettingName],
	[SettingValue]
    ) 
    VALUES 
    (
	@PortalID,
	@SettingName,
	@SettingValue
    )
   select SCOPE_IDENTITY()
end



' 
END
GO
/******   StoredProcedure {databaseOwner}[{objectQualifier}CrossPortalSettingDelete]     08/13/2009 11:05:45 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CrossPortalSettingDelete]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'

CREATE  PROCEDURE {databaseOwner}[{objectQualifier}CrossPortalSettingDelete]
	@PortalID int,
	@SettingName nvarchar(300)
AS

DELETE FROM {databaseOwner}{objectQualifier}CrossPortalSetting
WHERE
	[PortalID] = @PortalID
	AND [SettingName] = @SettingName



' 
END
GO
/******   StoredProcedure {databaseOwner}[{objectQualifier}CrossPortalSettingExist]     08/13/2009 11:05:45 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CrossPortalSettingExist]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'

CREATE   PROCEDURE {databaseOwner}[{objectQualifier}CrossPortalSettingExist]
	@PortalID int,
	@SettingName nvarchar(300)
	
AS

SELECT  count([PortalID])
	
FROM {databaseOwner}{objectQualifier}CrossPortalSetting
WHERE
	[PortalID] = @PortalID
	AND [SettingName] = @SettingName
	

' 
END
GO
/******   StoredProcedure {databaseOwner}[{objectQualifier}CrossPortalSettingGet]     08/13/2009 11:05:46 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CrossPortalSettingGet]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'

CREATE  PROCEDURE {databaseOwner}[{objectQualifier}CrossPortalSettingGet]
	@PortalID int,
	@SettingName nvarchar(300)
	
AS

SELECT
	[PortalID],
	[SettingName],
	[SettingValue]
FROM {databaseOwner}{objectQualifier}CrossPortalSetting
WHERE
	[PortalID] = @PortalID
	AND [SettingName] = @SettingName
	

' 
END
GO
/******   StoredProcedure {databaseOwner}[{objectQualifier}CrossPortalSettingGetByPortals]     08/13/2009 11:05:46 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CrossPortalSettingGetByPortals]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'

CREATE PROCEDURE {databaseOwner}[{objectQualifier}CrossPortalSettingGetByPortals]
	@PortalID int
AS

SELECT
	[PortalID],
	[SettingName],
	[SettingValue]
FROM {databaseOwner}{objectQualifier}CrossPortalSetting
WHERE
	[PortalID]=@PortalID


' 
END
GO

/******  end procedures for crossportalsettings ******/
/******   create procedures  ******/
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_OrderDetail_Get]    ScriptDate: 08/15/2010 21:56:49 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_OrderDetail_Get]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_OrderDetail_Get]
	@Id int
	
AS

SELECT *
FROM {databaseOwner}{objectQualifier}CP_Product_OrderDetail
WHERE
	[Id] = @Id
	
' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Product_Get]    ScriptDate: 08/15/2010 21:56:49 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Product_Get]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'

CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Product_Get]
	@Id int
	
AS

SELECT 
    a.*,
     ''UserName''=
    (select UserName from {databaseOwner}{objectQualifier}Users where {databaseOwner}{objectQualifier}Users.UserId=a.UserId),
    ''RatingTotal''=
    (select sum(Rating) from {databaseOwner}{objectQualifier}CP_Product_Rating where {databaseOwner}{objectQualifier}CP_Product_Rating.ProductId=a.Id),
    ''RatingVotes''=
     (select count(Id) from {databaseOwner}{objectQualifier}CP_Product_Rating where {databaseOwner}{objectQualifier}CP_Product_Rating.ProductId=a.Id),
    ''Comments''=
     (select count(Id) from {databaseOwner}{objectQualifier}CP_Product_Comment where {databaseOwner}{objectQualifier}CP_Product_Comment.ProductId=a.Id and {databaseOwner}{objectQualifier}CP_Product_Comment.IsPrivate=0)
FROM {databaseOwner}{objectQualifier}CP_Product_Product a
WHERE
	[Id] = @Id
	

' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_OrderDetail_GetByOrder]    ScriptDate: 08/15/2010 21:56:49 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_OrderDetail_GetByOrder]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_OrderDetail_GetByOrder]
	@OrderId int
AS

SELECT *
FROM {databaseOwner}{objectQualifier}CP_Product_OrderDetail
WHERE
	[OrderId]=@OrderId
' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_OrderDetail_Delete]    ScriptDate: 08/15/2010 21:56:49 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_OrderDetail_Delete]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_OrderDetail_Delete]
	@Id int
AS

DELETE FROM {databaseOwner}{objectQualifier}CP_Product_OrderDetail
WHERE
	[Id] = @Id
' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Product_Delete]    ScriptDate: 08/15/2010 21:56:49 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Product_Delete]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Product_Delete]
	@Id int
AS

DELETE FROM {databaseOwner}{objectQualifier}CP_Product_Product
WHERE
	[Id] = @Id
' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_OrderDetail_GetByProductAndClient]    ScriptDate: 08/15/2010 21:56:49 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_OrderDetail_GetByProductAndClient]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'

Create PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_OrderDetail_GetByProductAndClient]
	@ProductId int,
    @ClientId int
AS

SELECT *
FROM {databaseOwner}{objectQualifier}CP_Product_OrderDetail
WHERE ([ProductId]=@ProductId)
and ([ClientId]=@ClientId)

' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Common_User_PaingByType_Product]    ScriptDate: 08/15/2010 21:56:49 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Common_User_PaingByType_Product]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'








CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Common_User_PaingByType_Product]
    @TypeId   int,
    @SearchTerm nvarchar(50),
    @PageSize int, 
    @PageIndex int
AS
 Declare @PageLowerBound int
  DECLARE @PageUpperBound int
    -- Set the page bounds
    SET @PageLowerBound = @PageSize * @PageIndex
    SET @PageUpperBound = @PageLowerBound + @PageSize + 1
-- Create a temp table to store the select results
    CREATE TABLE #PageIndex 
    (
	IndexId		int IdENTITY (1, 1) NOT NULL,
	ItemId	int
     )

----Insert into temptable
    insert into #PageIndex(ItemId)
    SELECT distinct a.[UserId]
    FROM {databaseOwner}{objectQualifier}Users a
    Inner join {databaseOwner}{objectQualifier}CP_Product_Product c
    on a.[UserId]=c.[UserId]
    where (c.[TypeId] = @TypeId)--TypeId
    and (@SearchTerm='''' or a.[Username] like ''%''+@SearchTerm+''%'') -- SearchTerm


select 
	a.UserId,
    a.Username,
    a.FirstName,
    a.LastName,
    a.DisplayName, 
    b.Email,
    b.AvatarEmail,
    b.Authed,
    b.SiteUrl,
    b.LogoUrl,
    b.Slogan,
    ''Biography''='''',
    b.P_Type,
    b.P_DD_BankName,
    b.P_DD_RoutingNumber,
    b.P_DD_AccountNumber,
    b.P_DD_AccountType,
    b.P_Paypal,
    b.P_C_Payee,
    b.P_C_Address1,
    b.P_C_Address2,
    b.P_C_City,
    b.P_C_RegionCode,
    b.P_C_CountryCode,
    ''CustomerMessage''='''',
    ''IntegrateUrl''='''',
    ''Support''='''',
    ''License''='''',
    ''Delivery''='''',
    b.AdditionalParm,
    b.SecurityValue
FROM {databaseOwner}{objectQualifier}Users a
left join {databaseOwner}{objectQualifier}CP_Common_User b
on a.[UserId]=b.[UserId]
Inner join #PageIndex  c
on a.[UserId]=c.[ItemId]
and  c.[IndexId]> @PageLowerBound	
and	 c.[IndexId]< @PageUpperBound	  
 ORDER BY c.IndexId
	
	 --Return the total number of records available 
	SELECT TotalRecords = COUNT(IndexId) FROM #PageIndex






' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_OrderDetail_List]    ScriptDate: 08/15/2010 21:56:49 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_OrderDetail_List]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'



CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_OrderDetail_List]
    @PortalId int,
	@VendorId int,
    @ClientId int,
    @StartDate datetime,
    @EndDate DateTime,
    @SearchTerm nvarchar(100),
    @InvoiceNo nvarchar(100),
    @PageSize int, 
    @PageIndex int
AS
  Declare @PageLowerBound int
  DECLARE @PageUpperBound int
    -- Set the page bounds
    SET @PageLowerBound = @PageSize * @PageIndex
    SET @PageUpperBound = @PageLowerBound + @PageSize + 1
-- Create a temp table to store the select results
    CREATE TABLE #PageIndex 
    (
	IndexId		int IdENTITY (1, 1) NOT NULL,
	ItemId	int
     )
----Insert into temptable
    insert into #PageIndex(ItemId)
    SELECT
	[id]
    FROM {databaseOwner}{objectQualifier}CP_Product_OrderDetail a
    WHERE (a.[PortalId]=@PortalId)
    and(@VendorId=-1 or a.[VendorId]=@VendorId)
    and(@ClientId=-1 or a.[ClientId]=@ClientId)
    and(a.[CreatedDate] between @StartDate and DateAdd(d,1,@EndDate))
    and (@SearchTerm='''' or a.[ProductName] like ''%''+@SearchTerm+''%'') -- SearchTerm
    and (@InvoiceNo='''' or a.[InvoiceNo] like ''%''+@InvoiceNo+''%'') -- @InvoiceNo
    order by [id] desc

---Get needs rows
   SELECT
	b.*
    FROM #PageIndex a, {databaseOwner}{objectQualifier}CP_Product_OrderDetail b
    where b.[id]=a.[ItemId] 
    and  a.[IndexId]> @PageLowerBound	
    and	 a.[IndexId]< @PageUpperBound	  
    ORDER BY a.IndexId
	
	 --Return the total number of records available 
	SELECT TotalRecords = COUNT(IndexId) FROM #PageIndex



' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Product_GetByDate]    ScriptDate: 08/15/2010 21:56:49 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Product_GetByDate]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'

Create PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Product_GetByDate]
   @TypeId   int,
   @CurrentUserId int,
   @ProductDate datetime = null,
   @SortField	nvarchar(100),
   @MaxNumber	int,
   @ShowPage	bit,
   @PageSize int, 
   @PageIndex int
AS

If @ProductDate IS NULL SET @ProductDate = GetUTCDate()

if (@ShowPage=0) --if donn''t paging ,direct get record 
BEGIN
    set rowcount @MaxNumber
SELECT
		a.*,
    ''UserName''=
    (select UserName from {databaseOwner}{objectQualifier}Users where {databaseOwner}{objectQualifier}Users.UserId=a.UserId),
    ''RatingTotal''=
    (select sum(Rating) from {databaseOwner}{objectQualifier}CP_Product_Rating where {databaseOwner}{objectQualifier}CP_Product_Rating.ProductId=a.Id),
    ''RatingVotes''=
     (select count(Id) from {databaseOwner}{objectQualifier}CP_Product_Rating where {databaseOwner}{objectQualifier}CP_Product_Rating.ProductId=a.Id),
    ''Comments''=
     (select count(Id) from {databaseOwner}{objectQualifier}CP_Product_Comment where {databaseOwner}{objectQualifier}CP_Product_Comment.ProductId=a.Id and {databaseOwner}{objectQualifier}CP_Product_Comment.IsPrivate=0)
    
FROM {databaseOwner}{objectQualifier}CP_Product_Product a
WHERE (a.TypeId = @TypeId)--TypeId
      and    (@CurrentUserId = -2 or a.Id in (
	SELECT DISTINCT ProductId FROM {databaseOwner}{objectQualifier}CP_Product_ProductToRole
	WHERE ({databaseOwner}{objectQualifier}CP_Product_ProductToRole.RoleId = -1 OR {databaseOwner}{objectQualifier}CP_Product_ProductToRole.RoleId IN (SELECT RoleId FROM {databaseOwner}{objectQualifier}UserRoles WHERE UserID = @CurrentUserId))
        ))--UserId
     AND (IsNull(a.PublishDate, 1) <= CONVERT(CHAR(8), GETDATE(), 112))
      AND (IsNull(a.ExpireDate, DateAdd(d, 1, GetDate())) > CONVERT(CHAR(8), GETDATE(), 112))
     and(a.CreatedDate BETWEEN @ProductDate AND DateAdd( dd, 1, @ProductDate ) )--Product date
      AND ( a.Authed = 1) -- Authorized
      AND ( a.Active = 1)  -- Active
    
      ORDER BY a.[Order] asc,
	   CASE @SortField 
		WHEN ''PublishDate'' THEN a.PublishDate 
		WHEN ''LastModifiedDate'' THEN a.LastModifiedDate
        when ''Views'' then a.Views
        ELSE a.CreatedDate 
	END DESC
end 

else--paging
begin
    Declare @PageLowerBound int
    DECLARE @PageUpperBound int
    -- Set the page bounds
    SET @PageLowerBound = @PageSize * @PageIndex
    SET @PageUpperBound = @PageLowerBound + @PageSize + 1

-- Create a temp table to store the select results
    CREATE TABLE #PageIndex 
    (
	IndexID		int IDENTITY (1, 1) NOT NULL,
	RowId	int
     )

-----------Insert into temp table
   insert into #PageIndex(RowId)
   SELECT
	[id]
   FROM {databaseOwner}{objectQualifier}CP_Product_Product a
  WHERE (a.TypeId = @TypeId)--TypeId
     and    (@CurrentUserId = -2 or a.Id in (
	SELECT DISTINCT ProductId FROM {databaseOwner}{objectQualifier}CP_Product_ProductToRole
	WHERE ({databaseOwner}{objectQualifier}CP_Product_ProductToRole.RoleId = -1 OR {databaseOwner}{objectQualifier}CP_Product_ProductToRole.RoleId IN (SELECT RoleId FROM {databaseOwner}{objectQualifier}UserRoles WHERE UserID = @CurrentUserId))
        ))--UserId
      AND (IsNull(a.PublishDate, 1) <= CONVERT(CHAR(8), GETDATE(), 112))
      AND (IsNull(a.ExpireDate, DateAdd(d, 1, GetDate())) > CONVERT(CHAR(8), GETDATE(), 112))
     and(a.CreatedDate BETWEEN @ProductDate AND DateAdd( dd, 1, @ProductDate ) )--Product date
      AND ( a.Authed = 1) -- Authorized
      AND ( a.Active = 1)  -- Active
    
      ORDER BY a.[Order] asc,
	   CASE @SortField 
		WHEN ''PublishDate'' THEN a.PublishDate 
		WHEN ''LastModifiedDate'' THEN a.LastModifiedDate
        when ''Views'' then a.Views
        ELSE a.CreatedDate 
	END DESC

SELECT
		a.*,
    ''UserName''=
    (select UserName from {databaseOwner}{objectQualifier}Users where {databaseOwner}{objectQualifier}Users.UserId=a.UserId),
    ''RatingTotal''=
    (select sum(Rating) from {databaseOwner}{objectQualifier}CP_Product_Rating where {databaseOwner}{objectQualifier}CP_Product_Rating.ProductId=a.Id),
    ''RatingVotes''=
     (select count(Id) from {databaseOwner}{objectQualifier}CP_Product_Rating where {databaseOwner}{objectQualifier}CP_Product_Rating.ProductId=a.Id),
    ''Comments''=
     (select count(Id) from {databaseOwner}{objectQualifier}CP_Product_Comment where {databaseOwner}{objectQualifier}CP_Product_Comment.ProductId=a.Id and {databaseOwner}{objectQualifier}CP_Product_Comment.IsPrivate=0)
       FROM {databaseOwner}{objectQualifier}CP_Product_Product a,#PageIndex c
       where c.RowId=a.Id 
       and  c.IndexID> @PageLowerBound	
       and  c.IndexID< @PageUpperBound	
       ORDER BY c.IndexID
	   --Return the total number of records available 
	SELECT TotalRecords = COUNT(IndexID) FROM #PageIndex

end 









' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Product_DeleteByUser]    ScriptDate: 08/15/2010 21:56:49 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Product_DeleteByUser]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'


Create PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Product_DeleteByUser]
	@UserId int
AS

DELETE FROM {databaseOwner}{objectQualifier}CP_Product_Product
WHERE
	[UserId] = @UserId


' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Product_GetByMonth]    ScriptDate: 08/15/2010 21:56:49 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Product_GetByMonth]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
Create PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Product_GetByMonth]
   @TypeId   int,
   @CurrentUserId int,
   @MonthDate datetime = null,
   @SortField	nvarchar(100),
   @MaxNumber	int,
   @ShowPage	bit,
   @PageSize int, 
   @PageIndex int
AS

If @MonthDate IS NULL SET @MonthDate = GetUTCDate()

if (@ShowPage=0) --if donn''t paging ,direct get record 
BEGIN
    set rowcount @MaxNumber
SELECT
		a.*,
    ''UserName''=
    (select UserName from {databaseOwner}{objectQualifier}Users where {databaseOwner}{objectQualifier}Users.UserId=a.UserId),
    ''RatingTotal''=
    (select sum(Rating) from {databaseOwner}{objectQualifier}CP_Product_Rating where {databaseOwner}{objectQualifier}CP_Product_Rating.ProductId=a.Id),
    ''RatingVotes''=
     (select count(Id) from {databaseOwner}{objectQualifier}CP_Product_Rating where {databaseOwner}{objectQualifier}CP_Product_Rating.ProductId=a.Id),
    ''Comments''=
     (select count(Id) from {databaseOwner}{objectQualifier}CP_Product_Comment where {databaseOwner}{objectQualifier}CP_Product_Comment.ProductId=a.Id and {databaseOwner}{objectQualifier}CP_Product_Comment.IsPrivate=0)
FROM {databaseOwner}{objectQualifier}CP_Product_Product a
WHERE (a.TypeId = @TypeId)--TypeId
     and    (@CurrentUserId = -2 or a.Id in (
	SELECT DISTINCT ProductId FROM {databaseOwner}{objectQualifier}CP_Product_ProductToRole
	WHERE ({databaseOwner}{objectQualifier}CP_Product_ProductToRole.RoleId = -1 OR {databaseOwner}{objectQualifier}CP_Product_ProductToRole.RoleId IN (SELECT RoleId FROM {databaseOwner}{objectQualifier}UserRoles WHERE UserID = @CurrentUserId))
        ))--UserId
    AND (IsNull(a.PublishDate, 1) <= CONVERT(CHAR(8), GETDATE(), 112))
      AND (IsNull(a.ExpireDate, DateAdd(d, 1, GetDate())) > CONVERT(CHAR(8), GETDATE(), 112))
     and(a.CreatedDate BETWEEN DATEADD(month, DATEDIFF(month, 0, @MonthDate), 0)  AND @MonthDate )--Product date
      AND ( a.Authed = 1) -- Authorized
      AND ( a.Active = 1)  -- Active
    
      ORDER BY a.[Order] asc,
	   CASE @SortField 
		WHEN ''PublishDate'' THEN a.PublishDate 
		WHEN ''LastModifiedDate'' THEN a.LastModifiedDate
        when ''Views'' then a.Views
        ELSE a.CreatedDate 
	END DESC
end 

else--paging
begin
    Declare @PageLowerBound int
    DECLARE @PageUpperBound int
    -- Set the page bounds
    SET @PageLowerBound = @PageSize * @PageIndex
    SET @PageUpperBound = @PageLowerBound + @PageSize + 1

-- Create a temp table to store the select results
    CREATE TABLE #PageIndex 
    (
	IndexID		int IDENTITY (1, 1) NOT NULL,
	RowId	int
     )

-----------Insert into temp table
   insert into #PageIndex(RowId)
   SELECT
	[id]
   FROM {databaseOwner}{objectQualifier}CP_Product_Product a
 WHERE (a.TypeId = @TypeId)--TypeId
     and    (@CurrentUserId = -2 or a.Id in (
	SELECT DISTINCT ProductId FROM {databaseOwner}{objectQualifier}CP_Product_ProductToRole
	WHERE ({databaseOwner}{objectQualifier}CP_Product_ProductToRole.RoleId = -1 OR {databaseOwner}{objectQualifier}CP_Product_ProductToRole.RoleId IN (SELECT RoleId FROM {databaseOwner}{objectQualifier}UserRoles WHERE UserID = @CurrentUserId))
        ))--UserId
   AND (IsNull(a.PublishDate, 1) <= CONVERT(CHAR(8), GETDATE(), 112))
      AND (IsNull(a.ExpireDate, DateAdd(d, 1, GetDate())) > CONVERT(CHAR(8), GETDATE(), 112))
     and(a.CreatedDate BETWEEN DATEADD(month, DATEDIFF(month, 0, @MonthDate), 0)  AND @MonthDate )--Product date
      AND ( a.Authed = 1) -- Authorized
      AND ( a.Active = 1)  -- Active
    
      ORDER BY a.[Order] asc,
	   CASE @SortField 
		WHEN ''PublishDate'' THEN a.PublishDate 
		WHEN ''LastModifiedDate'' THEN a.LastModifiedDate
        when ''Views'' then a.Views
        ELSE a.CreatedDate 
	END DESC

SELECT
	a.*,
    ''UserName''=
    (select UserName from {databaseOwner}{objectQualifier}Users where {databaseOwner}{objectQualifier}Users.UserId=a.UserId),
    ''RatingTotal''=
    (select sum(Rating) from {databaseOwner}{objectQualifier}CP_Product_Rating where {databaseOwner}{objectQualifier}CP_Product_Rating.ProductId=a.Id),
    ''RatingVotes''=
     (select count(Id) from {databaseOwner}{objectQualifier}CP_Product_Rating where {databaseOwner}{objectQualifier}CP_Product_Rating.ProductId=a.Id),
    ''Comments''=
     (select count(Id) from {databaseOwner}{objectQualifier}CP_Product_Comment where {databaseOwner}{objectQualifier}CP_Product_Comment.ProductId=a.Id and {databaseOwner}{objectQualifier}CP_Product_Comment.IsPrivate=0)
       FROM {databaseOwner}{objectQualifier}CP_Product_Product a,#PageIndex c
       where c.RowId=a.Id 
       and  c.IndexID> @PageLowerBound	
       and  c.IndexID< @PageUpperBound	
       ORDER BY c.IndexID
	   --Return the total number of records available 
	SELECT TotalRecords = COUNT(IndexID) FROM #PageIndex

end 








' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Product_GetByType]    ScriptDate: 08/15/2010 21:56:50 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Product_GetByType]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'



CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Product_GetByType]
	 @TypeId   int,
     @CategoryId   int,
     @UserId int,
     @UnAuthed bit=0,
     @Featured bit=0,
     @UnActive bit=0,
     @Expired bit=0,
     @LowStockQuantity bit=0,
     @SearchTerm nvarchar(100),
     @PageSize int, 
     @PageIndex int
AS
    Declare @PageLowerBound int
    DECLARE @PageUpperBound int
    -- Set the page bounds
    SET @PageLowerBound = @PageSize * @PageIndex
    SET @PageUpperBound = @PageLowerBound + @PageSize + 1

-- Create a temp table to store the select results
    CREATE TABLE #PageIndex 
    (
	IndexID		int IDENTITY (1, 1) NOT NULL,
	RowId	int
     )

-----------Insert into temp table
   insert into #PageIndex(RowId)
   SELECT
	[id]
   FROM {databaseOwner}{objectQualifier}CP_Product_Product a
   WHERE  (a.TypeId = @TypeId) --TypeId   
     and (@CategoryId = -1 OR a.Id in (
	SELECT DISTINCT ProductId FROM {databaseOwner}{objectQualifier}CP_Product_ProductToCategory WHERE {databaseOwner}{objectQualifier}CP_Product_ProductToCategory.CategoryId=@CategoryId
)) --CategoryId
     and (@UserId= -1 or a.UserId=@UserId) -- UserId
     and (@UnAuthed=0 or a.Authed=0) --UnAuthed
     and (@Featured =0 or a.Featured = 1)-- featured
     and (@UnActive=0 or a.Active=0) --UnActive
     and (@Expired=0 or   IsNull(a.ExpireDate, DateAdd(d, 1, GetDate())) < CONVERT(CHAR(8), GETDATE(), 112)) -- Expired
     and (@LowStockQuantity=0 or a.[StockQuantity]<a.[LowThreshold]) --low stock quantity
     and (@searchTerm='''' or a.[Name] like ''%''+@searchTerm+''%'') -- Searchterm 
    ORDER BY a.[Order] asc,
	          a.CreatedDate desc

SELECT
     a.*,
    ''UserName''=
    (select UserName from {databaseOwner}{objectQualifier}Users where {databaseOwner}{objectQualifier}Users.UserId=a.UserId),
    ''RatingTotal''=
    (select sum(Rating) from {databaseOwner}{objectQualifier}CP_Product_Rating where {databaseOwner}{objectQualifier}CP_Product_Rating.ProductId=a.Id),
    ''RatingVotes''=
     (select count(Id) from {databaseOwner}{objectQualifier}CP_Product_Rating where {databaseOwner}{objectQualifier}CP_Product_Rating.ProductId=a.Id),
    ''Comments''=
     (select count(Id) from {databaseOwner}{objectQualifier}CP_Product_Comment where {databaseOwner}{objectQualifier}CP_Product_Comment.ProductId=a.Id and {databaseOwner}{objectQualifier}CP_Product_Comment.IsPrivate=0)
       FROM {databaseOwner}{objectQualifier}CP_Product_Product a,#PageIndex c
       where c.RowId=a.Id 
       and  c.IndexID> @PageLowerBound	
       and  c.IndexID< @PageUpperBound	
       ORDER BY c.IndexID
	
	     --Return the total number of records available 
	SELECT TotalRecords = COUNT(IndexID) FROM #PageIndex






' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Product_UpdateViews]    ScriptDate: 08/15/2010 21:56:50 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Product_UpdateViews]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'

/****** Object:  StoredProcedure dbo.[CP_Product_Product_UpdateViewNumber]    ScriptDate: 10/18/2007 01:57:17 ******/
Create    PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Product_UpdateViews]
	@Id		int
AS
UPDATE {databaseOwner}{objectQualifier}CP_Product_Product
SET
	Views = Views + 1
WHERE
	Id = @Id



' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_OrderDetail_GetVendorByType]    ScriptDate: 08/15/2010 21:56:50 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_OrderDetail_GetVendorByType]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'


Create PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_OrderDetail_GetVendorByType]
    @TypeId int,
    @StartDate datetime,
    @EndDate DateTime,
    @SearchTerm nvarchar(50),
    @PageSize int,
    @PageIndex int
AS
    Declare @PageLowerBound int
    DECLARE @PageUpperBound int
    -- Set the page bounds
    SET @PageLowerBound = @PageSize * @PageIndex
    SET @PageUpperBound = @PageLowerBound + @PageSize + 1

-- Create a temp table to store the select results
    CREATE TABLE #PageIndex 
    (
	IndexId		int IdENTITY (1, 1) NOT NULL,
	RowId	int
     )

   -----------Insert into temp table
   insert into #PageIndex(RowId)
   SELECT distinct [VendorId]
   FROM {databaseOwner}{objectQualifier}CP_Product_OrderDetail a
   WHERE (@TypeId=-1 or a.[TypeId]=@TypeId)
    and   (a.[CreatedDate] between @StartDate and DateAdd(d,1,@EndDate))
    and (@SearchTerm='''' or a.[VendorName] like ''%''+@SearchTerm+''%'') -- SearchTerm

   ------------Get rows now
   Select distinct a.[VendorId],a.[VendorName]
   FROM {databaseOwner}{objectQualifier}CP_Product_OrderDetail a,#PageIndex b
   where b.[RowId]=a.[VendorId]
   and  b.[IndexId]> @PageLowerBound	
   and  b.[IndexId]< @PageUpperBound	
   ORDER BY a.[VendorName]

	   --Return the total number of records available 
	SELECT TotalRecords = COUNT(IndexId) FROM #PageIndex



' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Product_UpdateAuthed]    ScriptDate: 08/15/2010 21:56:50 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Product_UpdateAuthed]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'



Create   procedure {databaseOwner}[{objectQualifier}CP_Product_Product_UpdateAuthed]
@Id	int,
@Authed	bit

as

update {databaseOwner}{objectQualifier}CP_Product_Product

set Authed = @Authed
WHERE Id = @Id 








' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Product_UpdateFeatured]    ScriptDate: 08/15/2010 21:56:50 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Product_UpdateFeatured]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'



Create   procedure {databaseOwner}[{objectQualifier}CP_Product_Product_UpdateFeatured]
@Id	int,
@Featured	bit

as

update {databaseOwner}{objectQualifier}CP_Product_Product

set Featured = @Featured
WHERE Id = @Id 








' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Product_UpdateActive]    ScriptDate: 08/15/2010 21:56:50 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Product_UpdateActive]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'



Create   procedure {databaseOwner}[{objectQualifier}CP_Product_Product_UpdateActive]
@Id	int,
@Active	bit

as

update {databaseOwner}{objectQualifier}CP_Product_Product

set Active = @Active
WHERE Id = @Id 








' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Product_GetProductMonths]    ScriptDate: 08/15/2010 21:56:50 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Product_GetProductMonths]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'



/****** {databaseOwner}{objectQualifier}CP_Product_Product_GetProductMonths    Skriptdatum: 01.03.2005 17:23:45 ******/

Create PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Product_GetProductMonths]
(
	@TypeId int
)
AS
	SELECT
	     DATEPART(mm, a.CreatedDate) as AddedMonth,
	     DATEPART(yy, a.CreatedDate) as AddedYear
	
	FROM {databaseOwner}{objectQualifier}CP_Product_Product a
	
	WHERE (a.TypeId = @TypeId )
      and (a.Authed=1) 
      and (a.Active=1)
	group by DATEPART(m, a.CreatedDate), DATEPART(yy, a.CreatedDate)
	order by AddedYear DESC, AddedMonth DESC




' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Product_GetByUserCategory]    ScriptDate: 08/15/2010 21:56:50 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Product_GetByUserCategory]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'





CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Product_GetByUserCategory]
	 @UserCategoryId   int,
     @CategoryId   int,
     @UnAuthed bit=0,
     @Featured bit=0,
     @UnActive bit=0,
     @Expired bit=0,
     @LowStockQuantity bit=0,
     @SearchTerm nvarchar(100),
     @PageSize int, 
     @PageIndex int
AS
    Declare @PageLowerBound int
    DECLARE @PageUpperBound int
    -- Set the page bounds
    SET @PageLowerBound = @PageSize * @PageIndex
    SET @PageUpperBound = @PageLowerBound + @PageSize + 1

-- Create a temp table to store the select results
    CREATE TABLE #PageIndex 
    (
	IndexID		int IDENTITY (1, 1) NOT NULL,
	RowId	int
     )

-----------Insert into temp table
   insert into #PageIndex(RowId)
   SELECT
	[id]
   FROM {databaseOwner}{objectQualifier}CP_Product_Product a
   WHERE  (a.UserCategoryId = @UserCategoryId) --UserCategoryId  
      and (@CategoryId = -1 OR a.Id in (
	SELECT DISTINCT ProductId FROM {databaseOwner}{objectQualifier}CP_Product_ProductToCategory WHERE {databaseOwner}{objectQualifier}CP_Product_ProductToCategory.CategoryId=@CategoryId
)) --CategoryId
     and (@UnAuthed=0 or a.Authed=0) --UnAuthed
     and (@Featured =0 or a.Featured = 1)-- featured
     and (@UnActive=0 or a.Active=0) --UnActive
     and (@Expired=0 or   IsNull(a.ExpireDate, DateAdd(d, 1, GetDate())) < CONVERT(CHAR(8), GETDATE(), 112)) -- Expired
     and (@LowStockQuantity=0 or a.[StockQuantity]<a.[LowThreshold]) --low stock quantity
     and (@searchTerm='''' or a.[Name] like ''%''+@searchTerm+''%'') -- Searchterm 
    ORDER BY a.[Order] asc,
	          a.CreatedDate desc

SELECT
     a.*,
    ''UserName''=
    (select UserName from {databaseOwner}{objectQualifier}Users where {databaseOwner}{objectQualifier}Users.UserId=a.UserId),
    ''RatingTotal''=
    (select sum(Rating) from {databaseOwner}{objectQualifier}CP_Product_Rating where {databaseOwner}{objectQualifier}CP_Product_Rating.ProductId=a.Id),
    ''RatingVotes''=
     (select count(Id) from {databaseOwner}{objectQualifier}CP_Product_Rating where {databaseOwner}{objectQualifier}CP_Product_Rating.ProductId=a.Id),
    ''Comments''=
     (select count(Id) from {databaseOwner}{objectQualifier}CP_Product_Comment where {databaseOwner}{objectQualifier}CP_Product_Comment.ProductId=a.Id and {databaseOwner}{objectQualifier}CP_Product_Comment.IsPrivate=0)
       FROM {databaseOwner}{objectQualifier}CP_Product_Product a,#PageIndex c
       where c.RowId=a.Id 
       and  c.IndexID> @PageLowerBound	
       and  c.IndexID< @PageUpperBound	
       ORDER BY c.IndexID
	
	     --Return the total number of records available 
	SELECT TotalRecords = COUNT(IndexID) FROM #PageIndex








' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Audio_Get]    ScriptDate: 08/15/2010 21:56:50 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Audio_Get]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Audio_Get]
	@Id int
	
AS

SELECT *
FROM {databaseOwner}{objectQualifier}CP_Product_Audio
WHERE
	[Id] = @Id
	
' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Audio_GetByProduct]    ScriptDate: 08/15/2010 21:56:50 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Audio_GetByProduct]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Audio_GetByProduct]
	@ProductId int
AS

SELECT *
FROM {databaseOwner}{objectQualifier}CP_Product_Audio
WHERE
	[ProductId]=@ProductId
' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Audio_Delete]    ScriptDate: 08/15/2010 21:56:50 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Audio_Delete]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Audio_Delete]
	@Id int
AS

DELETE FROM {databaseOwner}{objectQualifier}CP_Product_Audio
WHERE
	[Id] = @Id
' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Image_Get]    ScriptDate: 08/15/2010 21:56:50 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Image_Get]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Image_Get]
	@Id int
	
AS

SELECT *
FROM {databaseOwner}{objectQualifier}CP_Product_Image
WHERE
	[Id] = @Id
	
' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Image_GetByProduct]    ScriptDate: 08/15/2010 21:56:50 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Image_GetByProduct]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Image_GetByProduct]
	@ProductId int
AS

SELECT *
FROM {databaseOwner}{objectQualifier}CP_Product_Image
WHERE
	[ProductId]=@ProductId
' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Image_Delete]    ScriptDate: 08/15/2010 21:56:50 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Image_Delete]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Image_Delete]
	@Id int
AS

DELETE FROM {databaseOwner}{objectQualifier}CP_Product_Image
WHERE
	[Id] = @Id
' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Video_Get]    ScriptDate: 08/15/2010 21:56:50 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Video_Get]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Video_Get]
	@Id int
	
AS

SELECT *
FROM {databaseOwner}{objectQualifier}CP_Product_Video
WHERE
	[Id] = @Id
	
' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Video_GetByProduct]    ScriptDate: 08/15/2010 21:56:50 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Video_GetByProduct]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Video_GetByProduct]
	@ProductId int
AS

SELECT *
FROM {databaseOwner}{objectQualifier}CP_Product_Video
WHERE
	[ProductId]=@ProductId
' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Video_Delete]    ScriptDate: 08/15/2010 21:56:50 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Video_Delete]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Video_Delete]
	@Id int
AS

DELETE FROM {databaseOwner}{objectQualifier}CP_Product_Video
WHERE
	[Id] = @Id
' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Option_Get]    ScriptDate: 08/15/2010 21:56:50 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Option_Get]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Option_Get]
	@Id int
	
AS

SELECT *
FROM {databaseOwner}{objectQualifier}CP_Product_Option
WHERE
	[Id] = @Id
	
' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Option_Delete]    ScriptDate: 08/15/2010 21:56:50 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Option_Delete]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Option_Delete]
	@Id int
AS

DELETE FROM {databaseOwner}{objectQualifier}CP_Product_Option
WHERE
	[Id] = @Id
' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Ship_Get]    ScriptDate: 08/15/2010 21:56:51 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Ship_Get]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Ship_Get]
	@Id int
	
AS

SELECT *
FROM {databaseOwner}{objectQualifier}CP_Product_Ship
WHERE
	[Id] = @Id
	
' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Rating_Get]    ScriptDate: 08/15/2010 21:56:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Rating_Get]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'


CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Rating_Get]
	@Id int
	
AS

SELECT a.*
FROM {databaseOwner}{objectQualifier}CP_Product_Rating a
WHERE (a.[Id] = @Id)
	


' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Ship_GetByProduct]    ScriptDate: 08/15/2010 21:56:51 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Ship_GetByProduct]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Ship_GetByProduct]
	@ProductId int
AS

SELECT *
FROM {databaseOwner}{objectQualifier}CP_Product_Ship
WHERE
	[ProductId]=@ProductId
' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Rating_GetByProduct]    ScriptDate: 08/15/2010 21:56:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Rating_GetByProduct]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'



CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Rating_GetByProduct]
	@ProductId int,
    @PageSize int, 
    @PageIndex int
AS
  Declare @PageLowerBound int
  DECLARE @PageUpperBound int
    -- Set the page bounds
    SET @PageLowerBound = @PageSize * @PageIndex
    SET @PageUpperBound = @PageLowerBound + @PageSize + 1
-- Create a temp table to store the select results
    CREATE TABLE #PageIndex 
    (
	IndexID		int IDENTITY (1, 1) NOT NULL,
	ItemId	int
     )
----Insert into temptable
    insert into #PageIndex(ItemId)
    SELECT
	[id]
    FROM {databaseOwner}{objectQualifier}CP_Product_Rating
    WHERE [ProductId]=@ProductId
    order by [id] desc

---Get needs rows
   SELECT
	b.*
    FROM #PageIndex a, {databaseOwner}{objectQualifier}CP_Product_Rating b
    where b.id=a.ItemId
    and  a.IndexID> @PageLowerBound	
    and	 a.IndexID< @PageUpperBound	  
    ORDER BY
	a.IndexID
	
	     --Return the total number of records available 
	SELECT TotalRecords = COUNT(IndexID) FROM #PageIndex


' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Ship_Delete]    ScriptDate: 08/15/2010 21:56:51 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Ship_Delete]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Ship_Delete]
	@Id int
AS

DELETE FROM {databaseOwner}{objectQualifier}CP_Product_Ship
WHERE
	[Id] = @Id
' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Rating_Delete]    ScriptDate: 08/15/2010 21:56:51 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Rating_Delete]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Rating_Delete]
	@Id int
AS

DELETE FROM {databaseOwner}{objectQualifier}CP_Product_Rating
WHERE
	[Id] = @Id
' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Download_Get]    ScriptDate: 08/15/2010 21:56:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Download_Get]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'

CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Download_Get]
	@Id int
	
AS

SELECT a.*,
       b.[Name] as ''OptionName''
FROM {databaseOwner}{objectQualifier}CP_Product_Download a
left join {databaseOwner}{objectQualifier}CP_Product_Option b
on a.[optionId]=b.[Id]
WHERE a.[Id] = @Id
	

' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Common_A3File_Get]    ScriptDate: 08/15/2010 21:56:51 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Common_A3File_Get]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Common_A3File_Get]
	@Id int
	
AS

SELECT *
FROM {databaseOwner}{objectQualifier}CP_Common_A3File
WHERE
	[Id] = @Id
	
' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Download_GetByProduct]    ScriptDate: 08/15/2010 21:56:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Download_GetByProduct]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'

CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Download_GetByProduct]
	@ProductId int
AS

SELECT a.*,
       b.[Name] as ''OptionName''
FROM {databaseOwner}{objectQualifier}CP_Product_Download a
left join {databaseOwner}{objectQualifier}CP_Product_Option b
on a.[optionId]=b.[Id]
where a.[ProductId]=@ProductId

' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Common_A3File_GetByFolder]    ScriptDate: 08/15/2010 21:56:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Common_A3File_GetByFolder]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'


CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Common_A3File_GetByFolder]
	@FolderId int
AS

SELECT *
FROM {databaseOwner}{objectQualifier}CP_Common_A3File
WHERE
	[FolderId]=@FolderId
Order by [FileName]

' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Comment_GetByProduct]    ScriptDate: 08/15/2010 21:56:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Comment_GetByProduct]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'



/****** Object:  StoredProcedure dbo.[CP_Product_Comment_GetByProduct]    ScriptDate: 10/18/2007 01:57:06 ******/


CREATE      PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Comment_GetByProduct]
        @ProductId int,
        @ShowUnAuthed  bit,
        @ShowPrivate bit,
        @PageSize int, 
        @PageIndex int    
AS
  Declare @PageLowerBound int
  DECLARE @PageUpperBound int
    -- Set the page bounds
    SET @PageLowerBound = @PageSize * @PageIndex
    SET @PageUpperBound = @PageLowerBound + @PageSize + 1
-- Create a temp table to store the select results
    CREATE TABLE #PageIndex 
    (
	IndexID		int IDENTITY (1, 1) NOT NULL,
	CommentId	int
     )
----Insert into temptable
    insert into #PageIndex(CommentId)
    SELECT
	[id]
    FROM {databaseOwner}{objectQualifier}CP_Product_Comment
    WHERE [ProductId]=@ProductId
    and(@ShowUnAuthed=1 or authed=1)
    and(@ShowPrivate=1 or IsPrivate=0)
    order by [id] desc

---Get needs rows
   SELECT
	b.*
    FROM #PageIndex a, {databaseOwner}{objectQualifier}CP_Product_Comment b
    where b.id=a.CommentId 
    and  a.IndexID> @PageLowerBound	
    and	 a.IndexID< @PageUpperBound	  
    ORDER BY
	a.IndexID
	
	     --Return the total number of records available 
	SELECT TotalRecords = COUNT(IndexID) FROM #PageIndex




' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Download_Delete]    ScriptDate: 08/15/2010 21:56:51 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Download_Delete]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Download_Delete]
	@Id int
AS

DELETE FROM {databaseOwner}{objectQualifier}CP_Product_Download
WHERE
	[Id] = @Id
' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Comment_GetByUser]    ScriptDate: 08/15/2010 21:56:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Comment_GetByUser]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'




CREATE     PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Comment_GetByUser]
        @PortalId int,
        @UserId int,
        @ShowUnAuthedOnly bit,
        @ShowPrivateOnly bit,
        @PageSize int, 
        @PageIndex int    
AS
 
    Declare @PageLowerBound int
    DECLARE @PageUpperBound int
    -- Set the page bounds
    SET @PageLowerBound = @PageSize * @PageIndex
    SET @PageUpperBound = @PageLowerBound + @PageSize + 1

-- Create a temp table to store the select results
    CREATE TABLE #PageIndex 
    (
	IndexID		int IDENTITY (1, 1) NOT NULL,
	RowId	int
     )

-----------Insert into temp table
 insert into #PageIndex(RowId)
 SELECT a.[id]
 FROM {databaseOwner}{objectQualifier}CP_Product_Comment a,{databaseOwner}{objectQualifier}CP_Product_Product b
 WHERE  (a.PortalId = @PortalId) --PortalId  
      and ( a.ProductId=b.Id)
      and (@UserId=-1 or b.UserId=@UserId) --UserId
      and (@ShowUnAuthedOnly=0 or a.Authed=0) --UnAuthed
      and (@ShowPrivateOnly=0 or a.IsPrivate=1) -- IsPrivate
order by a. Id desc


---Get needs rows
   SELECT
	    a.*
    FROM  {databaseOwner}{objectQualifier}CP_Product_Comment a,#PageIndex c
    where (a.Id=c.RowId)
       and   (c.IndexID> @PageLowerBound)	
       and   (c.IndexID< @PageUpperBound)
    ORDER BY c.IndexID
  
     --Return the total number of records available 
	SELECT TotalRecords = COUNT(IndexID) FROM #PageIndex





' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Common_A3File_Delete]    ScriptDate: 08/15/2010 21:56:51 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Common_A3File_Delete]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Common_A3File_Delete]
	@Id int
AS

DELETE FROM {databaseOwner}{objectQualifier}CP_Common_A3File
WHERE
	[Id] = @Id
' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Common_A3Folder_Get]    ScriptDate: 08/15/2010 21:56:51 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Common_A3Folder_Get]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Common_A3Folder_Get]
	@Id int
	
AS

SELECT *
FROM {databaseOwner}{objectQualifier}CP_Common_A3Folder
WHERE
	[Id] = @Id
	
' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Rating_GetByVendor]    ScriptDate: 08/15/2010 21:56:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Rating_GetByVendor]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'



CREATE     PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Rating_GetByVendor]
        @VendorId int,
        @ProductId int,
        @PageSize int, 
        @PageIndex int    
AS
 
    Declare @PageLowerBound int
    DECLARE @PageUpperBound int
    -- Set the page bounds
    SET @PageLowerBound = @PageSize * @PageIndex
    SET @PageUpperBound = @PageLowerBound + @PageSize + 1

-- Create a temp table to store the select results
    CREATE TABLE #PageIndex 
    (
	IndexID		int IDENTITY (1, 1) NOT NULL,
	RowId	int
     )

-----------Insert into temp table
 insert into #PageIndex(RowId)
 SELECT a.[id]
 FROM {databaseOwner}{objectQualifier}CP_Product_Rating a
 WHERE  (a.VendorId = @VendorId)
    and ((@ProductId=-1) or (a.ProductId=@ProductId)) 
order by a. Id desc


---Get needs rows
   SELECT
	    a.*
    FROM  {databaseOwner}{objectQualifier}CP_Product_Rating a,#PageIndex c
    where (a.Id=c.RowId)
       and   (c.IndexID> @PageLowerBound)	
       and   (c.IndexID< @PageUpperBound)
    ORDER BY c.IndexID
  
     --Return the total number of records available 
	SELECT TotalRecords = COUNT(IndexID) FROM #PageIndex




' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Common_A3Folder_Add]    ScriptDate: 08/15/2010 21:56:51 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Common_A3Folder_Add]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Common_A3Folder_Add]
	@PortalId int,
	@UserId int,
	@Name nvarchar(50)
AS

INSERT INTO {databaseOwner}{objectQualifier}CP_Common_A3Folder (
	[PortalId],
	[UserId],
	[Name]
) VALUES (
	@PortalId,
	@UserId,
	@Name
)

select SCOPE_IDENTITY()
' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Common_A3Folder_Update]    ScriptDate: 08/15/2010 21:56:52 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Common_A3Folder_Update]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Common_A3Folder_Update]
	@Id int, 
	@PortalId int, 
	@UserId int, 
	@Name nvarchar(50) 
AS

UPDATE {databaseOwner}{objectQualifier}CP_Common_A3Folder SET
	[PortalId] = @PortalId,
	[UserId] = @UserId,
	[Name] = @Name
WHERE
	[Id] = @Id
' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Common_A3Folder_Delete]    ScriptDate: 08/15/2010 21:56:52 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Common_A3Folder_Delete]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Common_A3Folder_Delete]
	@Id int
AS

DELETE FROM {databaseOwner}{objectQualifier}CP_Common_A3Folder
WHERE
	[Id] = @Id
' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Cart_Get]    ScriptDate: 08/15/2010 21:56:52 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Cart_Get]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Cart_Get]
	@Id int
	
AS

SELECT *
FROM {databaseOwner}{objectQualifier}CP_Product_Cart
WHERE
	[Id] = @Id
	
' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Common_A3Folder_GetByUser]    ScriptDate: 08/15/2010 21:56:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Common_A3Folder_GetByUser]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'



CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Common_A3Folder_GetByUser]
	@UserId int
AS

SELECT *
FROM {databaseOwner}{objectQualifier}CP_Common_A3Folder
WHERE
	[UserId]=@UserId
order by [Name]



' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Cart_GetByVendor]    ScriptDate: 08/15/2010 21:56:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Cart_GetByVendor]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'


CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Cart_GetByVendor]
	@VendorId int,
    @ProductId int,
    @ClientId int,
    @PageSize int, 
    @PageIndex int
AS
  Declare @PageLowerBound int
  DECLARE @PageUpperBound int
    -- Set the page bounds
    SET @PageLowerBound = @PageSize * @PageIndex
    SET @PageUpperBound = @PageLowerBound + @PageSize + 1
-- Create a temp table to store the select results
    CREATE TABLE #PageIndex 
    (
	IndexId		int IdENTITY (1, 1) NOT NULL,
	ItemId	int
     )
----Insert into temptable
    insert into #PageIndex(ItemId)
    SELECT
	[id]
    FROM {databaseOwner}{objectQualifier}CP_Product_Cart
    WHERE (@VendorId=-1 or [VendorId]=@VendorId)
    and(@ProductId=-1 or [ProductId]=@ProductId)
    and(@ClientId=-1 or [ClientId]=@ClientId)
    order by [ClientId] asc,[id] desc

---Get needs rows
   SELECT
	b.*
    FROM #PageIndex a, {databaseOwner}{objectQualifier}CP_Product_Cart b
    where b.[id]=a.[ItemId] 
    and  a.[IndexId]> @PageLowerBound	
    and	 a.[IndexId]< @PageUpperBound	  
    ORDER BY a.IndexId
	
	 --Return the total number of records available 
	SELECT TotalRecords = COUNT(IndexId) FROM #PageIndex

' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Cart_Delete]    ScriptDate: 08/15/2010 21:56:52 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Cart_Delete]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Cart_Delete]
	@Id int
AS

DELETE FROM {databaseOwner}{objectQualifier}CP_Product_Cart
WHERE
	[Id] = @Id
' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Product_GetItemCount]    ScriptDate: 08/15/2010 21:56:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Product_GetItemCount]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'


Create PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Product_GetItemCount]
	@PortalId int
AS

Declare @RecordCount int
Select @RecordCount=0
SELECT @RecordCount=count(Id) 
FROM {databaseOwner}{objectQualifier}CP_Product_Product a
WHERE [PortalId] = @PortalId

Select @RecordCount
	


' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Common_User_Delete]    ScriptDate: 08/15/2010 21:56:52 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Common_User_Delete]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Common_User_Delete]
	@UserId int
AS

DELETE FROM {databaseOwner}{objectQualifier}CP_Common_User
WHERE
	[UserId] = @UserId
' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Type_Delete]    ScriptDate: 08/15/2010 21:56:52 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Type_Delete]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Type_Delete]
	@Id int
AS

DELETE FROM {databaseOwner}{objectQualifier}CP_Product_Type
WHERE
	[Id] = @Id
' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Download_GetByOption]    ScriptDate: 08/15/2010 21:56:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Download_GetByOption]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'


create PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Download_GetByOption]
	@OptionId int
AS

SELECT a.*,
       b.[Name] as ''OptionName''
FROM {databaseOwner}{objectQualifier}CP_Product_Download a,{databaseOwner}{objectQualifier}CP_Product_Option b
where a.[OptionId]=@OptionId 
and   a.[OptionId]=b.[Id]


' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Order_Get]    ScriptDate: 08/15/2010 21:56:52 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Order_Get]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Order_Get]
	@Id int
	
AS

SELECT *
FROM {databaseOwner}{objectQualifier}CP_Product_Order
WHERE
	[Id] = @Id
	
' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Order_List]    ScriptDate: 08/15/2010 21:56:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Order_List]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'



CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Order_List]
	@PortalId int,
    @UserId int,
    @StartDate datetime,
    @EndDate DateTime,
    @OrderNo nvarchar(100),
    @PageSize int, 
    @PageIndex int
AS
  Declare @PageLowerBound int
  DECLARE @PageUpperBound int
    -- Set the page bounds
    SET @PageLowerBound = @PageSize * @PageIndex
    SET @PageUpperBound = @PageLowerBound + @PageSize + 1
-- Create a temp table to store the select results
    CREATE TABLE #PageIndex 
    (
	IndexId		int IdENTITY (1, 1) NOT NULL,
	ItemId	int
     )
----Insert into temptable
    insert into #PageIndex(ItemId)
    SELECT
	[id]
    FROM {databaseOwner}{objectQualifier}CP_Product_Order a 
    WHERE (a.[PortalId]=@PortalId)
    and(@UserId=-1 or a.[UserId]=@UserId)
    and(a.[OrderDate] between @StartDate and DateAdd(d,1,@EndDate))
    and (@OrderNo='''' or a.[OrderNo] like ''%''+@OrderNo+''%'') -- @OrderNo
    order by [id] desc

---Get needs rows
   SELECT
	b.*
    FROM #PageIndex a, {databaseOwner}{objectQualifier}CP_Product_Order b
    where b.[id]=a.[ItemId] 
    and  a.[IndexId]> @PageLowerBound	
    and	 a.[IndexId]< @PageUpperBound	  
    ORDER BY a.IndexId
	
	 --Return the total number of records available 
	SELECT TotalRecords = COUNT(IndexId) FROM #PageIndex



' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Ticket_List]    ScriptDate: 08/15/2010 21:56:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Ticket_List]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'



Create PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Ticket_List]
    @PortalId int,
	@VendorId int,
    @ClientId int,
    @ProductId int,
    @StartDate datetime,
    @EndDate DateTime,
    @SearchTerm nvarchar(100),
    @TicketNo nvarchar(100),
    @PageSize int, 
    @PageIndex int
AS
  Declare @PageLowerBound int
  DECLARE @PageUpperBound int
    -- Set the page bounds
    SET @PageLowerBound = @PageSize * @PageIndex
    SET @PageUpperBound = @PageLowerBound + @PageSize + 1
-- Create a temp table to store the select results
    CREATE TABLE #PageIndex 
    (
	IndexId		int IdENTITY (1, 1) NOT NULL,
	ItemId	int
     )
----Insert into temptable
    insert into #PageIndex(ItemId)
    SELECT
	[id]
    FROM {databaseOwner}{objectQualifier}CP_Product_Ticket a
    WHERE (a.[PortalId]=@PortalId)
    and(@VendorId=-1 or a.[VendorId]=@VendorId)
    and(@ClientId=-1 or a.[ClientId]=@ClientId)
    and(@ProductId=-1 or a.[ProductId]=@ProductId)
    and(a.[CreatedDate] between @StartDate and DateAdd(d,1,@EndDate))
    and (@SearchTerm='''' or a.[Title] like ''%''+@SearchTerm+''%'') -- SearchTerm
    and (@TicketNo='''' or a.[TicketNo] like ''%''+@TicketNo+''%'') -- @TicketNo
    order by [id] desc

---Get needs rows
   SELECT
	b.*
    FROM #PageIndex a, {databaseOwner}{objectQualifier}CP_Product_Ticket b
    where b.[id]=a.[ItemId] 
    and  a.[IndexId]> @PageLowerBound	
    and	 a.[IndexId]< @PageUpperBound	  
    ORDER BY a.IndexId
	
	 --Return the total number of records available 
	SELECT TotalRecords = COUNT(IndexId) FROM #PageIndex



' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Order_Delete]    ScriptDate: 08/15/2010 21:56:52 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Order_Delete]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Order_Delete]
	@Id int
AS

DELETE FROM {databaseOwner}{objectQualifier}CP_Product_Order
WHERE
	[Id] = @Id
' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Common_User_GetByType_Article]    ScriptDate: 08/15/2010 21:56:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Common_User_GetByType_Article]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'






CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Common_User_GetByType_Article]
    @TypeId   int
AS
select distinct
	a.UserId,
    a.Username,
    a.FirstName,
    a.LastName,
    a.DisplayName, 
    b.Email,
    b.AvatarEmail,
    b.Authed,
    b.SiteUrl,
    b.LogoUrl,
    b.Slogan,
    ''Biography''='''',
    b.P_Type,
    b.P_DD_BankName,
    b.P_DD_RoutingNumber,
    b.P_DD_AccountNumber,
    b.P_DD_AccountType,
    b.P_Paypal,
    b.P_C_Payee,
    b.P_C_Address1,
    b.P_C_Address2,
    b.P_C_City,
    b.P_C_RegionCode,
    b.P_C_CountryCode,
    ''CustomerMessage''='''',
    ''IntegrateUrl''='''',
    ''Support''='''',
    ''License''='''',
    ''Delivery''='''',
    b.AdditionalParm,
    b.SecurityValue
FROM {databaseOwner}{objectQualifier}Users a
left join {databaseOwner}{objectQualifier}CP_Common_User b
on a.UserId=b.UserId
Inner join {databaseOwner}{objectQualifier}CP_Article_Article c
on a.UserId=c.UserId
where (c.TypeId = @TypeId)--TypeId






' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Common_Role_Get]    ScriptDate: 08/15/2010 21:56:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Common_Role_Get]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'

CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Common_Role_Get]
	@RoleId int
	
AS

SELECT a.*,
       b.RoleName
FROM {databaseOwner}{objectQualifier}CP_Common_Role a,{databaseOwner}{objectQualifier}Roles b
WHERE
	(a.[RoleId] = @RoleId) and
    (a.RoleId=b.RoleId)
	

' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Common_Role_GetByPortals]    ScriptDate: 08/15/2010 21:56:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Common_Role_GetByPortals]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'

CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Common_Role_GetByPortals]
	@PortalId int
AS

SELECT  a.*,
        b.RoleName
FROM {databaseOwner}{objectQualifier}CP_Common_Role a,{databaseOwner}{objectQualifier}Roles b
WHERE
	(a.[PortalId]=@PortalId) and
    (a.RoleId=b.RoleId)

' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_ProductToTag_GetByProduct]    ScriptDate: 08/15/2010 21:56:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_ProductToTag_GetByProduct]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'

Create PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_ProductToTag_GetByProduct]
	@ProductId int
AS

SELECT a.*,
       ''Tag''=(Select Tag from {databaseOwner}{objectQualifier}CP_Product_Tag where {databaseOwner}{objectQualifier}CP_Product_Tag.Id=a.TagId)
FROM {databaseOwner}{objectQualifier}CP_Product_ProductToTag a
WHERE
	[ProductId]=@ProductId


' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Tag_Delete]    ScriptDate: 08/15/2010 21:56:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Tag_Delete]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'

CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Tag_Delete]
	@Id int
AS

DELETE FROM {databaseOwner}{objectQualifier}CP_Product_Tag
WHERE
	[Id] = @Id

DELETE FROM {databaseOwner}{objectQualifier}CP_Product_ProductToTag
WHERE
	[TagId] = @Id



' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Tag_Get]    ScriptDate: 08/15/2010 21:56:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Tag_Get]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'

CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Tag_Get]
	@Id int
	
AS

SELECT a.*,
       ''ProductCounts''=
     (select count(Id) from {databaseOwner}{objectQualifier}CP_Product_ProductToTag where {databaseOwner}{objectQualifier}CP_Product_ProductToTag.TagId=a.Id)
FROM {databaseOwner}{objectQualifier}CP_Product_Tag a
WHERE
	[Id] = @Id
	



' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Tag_Add]    ScriptDate: 08/15/2010 21:56:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Tag_Add]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'

CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Tag_Add]
    @TypeId int,
	@PortalId int,
	@UserId int,
	@Tag nvarchar(200)
AS

INSERT INTO {databaseOwner}{objectQualifier}CP_Product_Tag (
    [TypeId],
	[PortalId],
	[UserId],
	[Tag],
	[CreatedDate]
) VALUES (
    @TypeId,
	@PortalId,
	@UserId,
	@Tag,
	getdate()
)

select SCOPE_IDENTITY()



' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Tag_GetByTag]    ScriptDate: 08/15/2010 21:56:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Tag_GetByTag]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'



CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Tag_GetByTag]
	@Tag nvarchar(200),
    @TypeId int
AS
Set rowcount 1

SELECT a.*,
       ''ProductCounts''=0
FROM {databaseOwner}{objectQualifier}CP_Product_Tag a
WHERE
    TypeId=@TypeId and
	Upper([Tag]) = Upper(@Tag)
	





' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Tag_GetByType]    ScriptDate: 08/15/2010 21:56:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Tag_GetByType]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'



CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Tag_GetByType]
	@TypeId int
AS

SELECT a.*,
       ''ProductCounts''=
     (select count(Id) from {databaseOwner}{objectQualifier}CP_Product_ProductToTag where {databaseOwner}{objectQualifier}CP_Product_ProductToTag.TagId=a.Id)
FROM {databaseOwner}{objectQualifier}CP_Product_Tag  a
WHERE
	[TypeId]=@TypeId
order by CreatedDate desc





' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Tag_Update]    ScriptDate: 08/15/2010 21:56:53 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Tag_Update]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Tag_Update]
	@Id int, 
    @TypeId int,
	@PortalId int, 
	@UserId int, 
	@Tag nvarchar(200), 
	@CreatedDate datetime 
AS

UPDATE {databaseOwner}{objectQualifier}CP_Product_Tag SET
    [TypeId]=@TypeId,
	[PortalId] = @PortalId,
	[UserId] = @UserId,
	[Tag] = @Tag,
	[CreatedDate] = @CreatedDate
WHERE
	[Id] = @Id
' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_UDField_Update]    ScriptDate: 08/15/2010 21:56:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_UDField_Update]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'

CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_UDField_Update]
	@Id int, 
	@PortalId int, 
    @TypeId int,
	@FieldName nvarchar(50), 
	@FieldTitle nvarchar(50), 
	@Visible bit, 
	@FieldOrder int, 
	@FieldType varchar(20), 
	@Required bit, 
	@DefaultValue nvarchar(2000), 
	@OutputSettings nvarchar(2000), 
	@InputSettings nvarchar(2000), 
	@ValidationRule nvarchar(512), 
	@ValidationMessage nvarchar(512), 
	@NormalizeFlag bit, 
	@HelpText nvarchar(512), 
	@Searchable bit, 
	@ShowOnEdit bit, 
	@PrivateField bit, 
	@EditStyle nvarchar(512) 
AS

UPDATE {databaseOwner}{objectQualifier}CP_Product_UDField SET
	[PortalId] = @PortalId,
    [TypeId]=@TypeId,
	[FieldName] = @FieldName,
	[FieldTitle] = @FieldTitle,
	[Visible] = @Visible,
	[FieldOrder] = @FieldOrder,
	[FieldType] = @FieldType,
	[Required] = @Required,
	[DefaultValue] = @DefaultValue,
	[OutputSettings] = @OutputSettings,
	[InputSettings] = @InputSettings,
	[ValidationRule] = @ValidationRule,
	[ValidationMessage] = @ValidationMessage,
	[NormalizeFlag] = @NormalizeFlag,
	[HelpText] = @HelpText,
	[Searchable] = @Searchable,
	[ShowOnEdit] = @ShowOnEdit,
	[PrivateField] = @PrivateField,
	[EditStyle] = @EditStyle
WHERE
	[Id] = @Id

' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_UDField_GetByType]    ScriptDate: 08/15/2010 21:56:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_UDField_GetByType]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'



Create PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_UDField_GetByType]
	@TypeId int
AS

SELECT *
FROM {databaseOwner}{objectQualifier}CP_Product_UDField
WHERE
	[TypeId]=@TypeId
ORDER BY FieldOrder




' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_UDField_Get]    ScriptDate: 08/15/2010 21:56:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_UDField_Get]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'

CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_UDField_Get]
	@Id int
	
AS

SELECT *
FROM {databaseOwner}{objectQualifier}CP_Product_UDField
WHERE
	[Id] = @Id
	


' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_UDField_GetByName]    ScriptDate: 08/15/2010 21:56:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_UDField_GetByName]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'



create PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_UDField_GetByName]
	@FieldName nvarchar(50),
    @TypeId int
AS
Set rowcount 1

SELECT a.*
FROM {databaseOwner}{objectQualifier}CP_Product_UDField a
WHERE
    [TypeId]=@TypeId and
	Upper([FieldName]) = Upper(@FieldName)
	





' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_UDField_GetByPortals]    ScriptDate: 08/15/2010 21:56:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_UDField_GetByPortals]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'


CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_UDField_GetByPortals]
	@PortalId int
AS

SELECT *
FROM {databaseOwner}{objectQualifier}CP_Product_UDField
WHERE
	[PortalId]=@PortalId
ORDER BY FieldOrder



' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_UDField_SwapOrder]    ScriptDate: 08/15/2010 21:56:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_UDField_SwapOrder]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'

    CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_UDField_SwapOrder]
    @FirstId   INT,
    @SecondId   INT
    AS
    DECLARE @Pos1 INT
    DECLARE @Pos2 INT
    SET @Pos1 = (SELECT FieldOrder FROM {databaseOwner}{objectQualifier}CP_Product_UDField WHERE Id = @FirstId)
    SET @Pos2 = (SELECT FieldOrder FROM {databaseOwner}{objectQualifier}CP_Product_UDField WHERE Id = @SecondId)

    UPDATE {databaseOwner}{objectQualifier}CP_Product_UDField SET FieldOrder = -1    WHERE Id = @SecondId
    UPDATE {databaseOwner}{objectQualifier}CP_Product_UDField SET FieldOrder = @Pos2 WHERE Id = @FirstId
    UPDATE {databaseOwner}{objectQualifier}CP_Product_UDField SET FieldOrder = @Pos1 WHERE Id = @SecondId
    


' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_UDField_Delete]    ScriptDate: 08/15/2010 21:56:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_UDField_Delete]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'

CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_UDField_Delete]
	@Id int
AS

DELETE FROM {databaseOwner}{objectQualifier}CP_Product_UDField
WHERE
	[Id] = @Id


' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_UDField_Add]    ScriptDate: 08/15/2010 21:56:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_UDField_Add]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'

CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_UDField_Add]
	@PortalId int,
    @TypeId int,
	@FieldName nvarchar(50),
	@FieldTitle nvarchar(50),
	@Visible bit,
	@FieldOrder int,
	@FieldType varchar(20),
	@Required bit,
	@DefaultValue nvarchar(2000),
	@OutputSettings nvarchar(2000),
	@InputSettings nvarchar(2000),
	@ValidationRule nvarchar(512),
	@ValidationMessage nvarchar(512),
	@NormalizeFlag bit,
	@HelpText nvarchar(512),
	@Searchable bit,
	@ShowOnEdit bit,
	@PrivateField bit,
	@EditStyle nvarchar(512)
AS

INSERT INTO {databaseOwner}{objectQualifier}CP_Product_UDField (
	[PortalId],
    [TypeId],
	[FieldName],
	[FieldTitle],
	[Visible],
	[FieldOrder],
	[FieldType],
	[Required],
	[DefaultValue],
	[OutputSettings],
	[InputSettings],
	[ValidationRule],
	[ValidationMessage],
	[NormalizeFlag],
	[HelpText],
	[Searchable],
	[ShowOnEdit],
	[PrivateField],
	[EditStyle]
) VALUES (
	@PortalId,
    @TypeId,
	@FieldName,
	@FieldTitle,
	@Visible,
	@FieldOrder,
	@FieldType,
	@Required,
	@DefaultValue,
	@OutputSettings,
	@InputSettings,
	@ValidationRule,
	@ValidationMessage,
	@NormalizeFlag,
	@HelpText,
	@Searchable,
	@ShowOnEdit,
	@PrivateField,
	@EditStyle
)

select SCOPE_IDENTITY()


' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Product_Update]    ScriptDate: 08/15/2010 21:56:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Product_Update]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'






CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Product_Update]
	@Id int, 
	@PortalId int, 
	@TypeId int, 
	@UserCategoryId int, 
	@UserId int, 
	@CreatedDate datetime, 
	@Name nvarchar(200),
    @PreviousVersion int, 
	@Authed bit, 
	@Featured bit, 
	@Active bit, 
	@Summary nvarchar(1000), 
	@LinkUrl nvarchar(200), 
	@Description ntext, 
	@Thumbnail nvarchar(200), 
	@Image nvarchar(200), 
	@Support ntext, 
	@License ntext, 
	@RoleAfterOrder int, 
	@RoleAddDay int, 
	@PurchasePrice decimal(18, 2), 
	@PromoPrice decimal(18, 2), 
    @EnablePromoPrice bit,
	@PromoStart datetime, 
	@PromoEnd datetime, 
	@StockQuantity int, 
	@LowThreshold int, 
	@Delivery ntext, 
	@SpecialOffer ntext, 
	@Views int, 
	@PublishDate datetime, 
	@ExpireDate datetime, 
	@LastModifiedDate datetime, 
	@AllowComment bit, 
	@AllowRating bit, 
	@CommentRoles nvarchar(200), 
	@RatingRoles nvarchar(200), 
	@DownloadRoles nvarchar(200), 
	@AutoAuthComment bit, 
	@Order int,
    @ViewRoles nvarchar(200), 
    @Categories nvarchar(200),
    @Tags nvarchar(200) 
AS

UPDATE {databaseOwner}{objectQualifier}CP_Product_Product SET
	[PortalId] = @PortalId,
	[TypeId] = @TypeId,
	[UserCategoryId] = @UserCategoryId,
	[UserId] = @UserId,
	[CreatedDate] = @CreatedDate,
	[Name] = @Name,
    [PreviousVersion]=@PreviousVersion,
	[Authed] = @Authed,
	[Featured] = @Featured,
	[Active] = @Active,
	[Summary] = @Summary,
	[LinkUrl] = @LinkUrl,
	[Description] = @Description,
	[Thumbnail] = @Thumbnail,
	[Image] = @Image,
	[Support] = @Support,
	[License] = @License,
	[RoleAfterOrder] = @RoleAfterOrder,
	[RoleAddDay] = @RoleAddDay,
	[PurchasePrice] = @PurchasePrice,
	[PromoPrice] = @PromoPrice,
    [EnablePromoPrice]=@EnablePromoPrice,
	[PromoStart] = @PromoStart,
	[PromoEnd] = @PromoEnd,
	[StockQuantity] = @StockQuantity,
	[LowThreshold] = @LowThreshold,
	[Delivery] = @Delivery,
	[SpecialOffer] = @SpecialOffer,
	[Views] = @Views,
	[PublishDate] = @PublishDate,
	[ExpireDate] = @ExpireDate,
	[LastModifiedDate] = GetDate(),
	[AllowComment] = @AllowComment,
	[AllowRating] = @AllowRating,
	[CommentRoles] = @CommentRoles,
	[RatingRoles] = @RatingRoles,
	[DownloadRoles] = @DownloadRoles,
	[AutoAuthComment] = @AutoAuthComment,
	[Order] = @Order
WHERE
	[Id] = @Id

DELETE {databaseOwner}{objectQualifier}CP_Product_ProductToCategory WHERE ProductId = @Id
INSERT INTO {databaseOwner}{objectQualifier}CP_Product_ProductToCategory SELECT @Id, intValue FROM {databaseOwner}CP_CsvToInt(@Categories)

DELETE {databaseOwner}{objectQualifier}CP_Product_ProductToTag WHERE ProductId = @Id
INSERT INTO {databaseOwner}{objectQualifier}CP_Product_ProductToTag SELECT @Id, intValue FROM {databaseOwner}CP_CsvToInt(@Tags)

DELETE {databaseOwner}{objectQualifier}CP_Product_ProductToRole WHERE ProductId = @Id
INSERT INTO {databaseOwner}{objectQualifier}CP_Product_ProductToRole SELECT @Id, intValue FROM {databaseOwner}CP_CsvToInt(@ViewRoles)








' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Product_Add]    ScriptDate: 08/15/2010 21:56:54 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Product_Add]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'






CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Product_Add]
	@PortalId int,
	@TypeId int,
	@UserCategoryId int,
	@UserId int,
	@CreatedDate datetime,
	@Name nvarchar(200),
    @PreviousVersion int,
	@Authed bit,
	@Featured bit,
	@Active bit,
	@Summary nvarchar(1000),
	@LinkUrl nvarchar(200),
	@Description ntext,
	@Thumbnail nvarchar(200),
	@Image nvarchar(200),
	@Support ntext,
	@License ntext,
	@RoleAfterOrder int,
	@RoleAddDay int,
	@PurchasePrice decimal(18, 2),
	@PromoPrice decimal(18, 2),
    @EnablePromoPrice bit,
	@PromoStart datetime,
	@PromoEnd datetime,
	@StockQuantity int,
	@LowThreshold int,
	@Delivery ntext,
	@SpecialOffer ntext,
	@Views int,
	@PublishDate datetime,
	@ExpireDate datetime,
	@LastModifiedDate datetime,
	@AllowComment bit,
	@AllowRating bit,
	@CommentRoles nvarchar(200),
	@RatingRoles nvarchar(200),
	@DownloadRoles nvarchar(200),
	@AutoAuthComment bit,
	@Order int,
    @ViewRoles nvarchar(200),
    @Categories nvarchar(200),
    @Tags nvarchar(200)   
AS

INSERT INTO {databaseOwner}{objectQualifier}CP_Product_Product (
	[PortalId],
	[TypeId],
	[UserCategoryId],
	[UserId],
	[CreatedDate],
	[Name],
    [PreviousVersion],
	[Authed],
	[Featured],
	[Active],
	[Summary],
	[LinkUrl],
	[Description],
	[Thumbnail],
	[Image],
	[Support],
	[License],
	[RoleAfterOrder],
	[RoleAddDay],
	[PurchasePrice],
	[PromoPrice],
    [EnablePromoPrice],
	[PromoStart],
	[PromoEnd],
	[StockQuantity],
	[LowThreshold],
	[Delivery],
	[SpecialOffer],
	[Views],
	[PublishDate],
	[ExpireDate],
	[LastModifiedDate],
	[AllowComment],
	[AllowRating],
	[CommentRoles],
	[RatingRoles],
	[DownloadRoles],
	[AutoAuthComment],
	[Order]
) VALUES (
	@PortalId,
	@TypeId,
	@UserCategoryId,
	@UserId,
	GetDate(),
	@Name,
    @PreviousVersion,
	@Authed,
	@Featured,
	@Active,
	@Summary,
	@LinkUrl,
	@Description,
	@Thumbnail,
	@Image,
	@Support,
	@License,
	@RoleAfterOrder,
	@RoleAddDay,
	@PurchasePrice,
	@PromoPrice,
    @EnablePromoPrice,
	@PromoStart,
	@PromoEnd,
	@StockQuantity,
	@LowThreshold,
	@Delivery,
	@SpecialOffer,
	@Views,
	@PublishDate,
	@ExpireDate,
	GetDate(),
	@AllowComment,
	@AllowRating,
	@CommentRoles,
	@RatingRoles,
	@DownloadRoles,
	@AutoAuthComment,
	@Order
)

DECLARE @ProductId INT	
SET @ProductId = @@IDENTITY
	
INSERT INTO {databaseOwner}{objectQualifier}CP_Product_ProductToCategory SELECT @ProductId, intValue FROM {databaseOwner}CP_CsvToInt(@Categories)
INSERT INTO {databaseOwner}{objectQualifier}CP_Product_ProductToTag SELECT @ProductId, intValue FROM {databaseOwner}CP_CsvToInt(@Tags)
INSERT INTO {databaseOwner}{objectQualifier}CP_Product_ProductToRole SELECT @ProductId, intValue FROM {databaseOwner}CP_CsvToInt(@ViewRoles)

select @ProductId





' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Product_GetByParm]    ScriptDate: 08/15/2010 21:56:54 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Product_GetByParm]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'



CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Product_GetByParm]
   @TypeId   int,
   @CurrentUserId	int,
   @CategoryId int,
   @TagId	int,
   @UserId int,
   @SearchTerm nvarchar(100),
   @SortField	nvarchar(100),
   @MaxNumber	int,
   @ShowPage	bit,
   @PageSize int, 
   @PageIndex int
AS
if (@ShowPage=0) --if donn''t paging ,direct get record 
BEGIN
    set rowcount @MaxNumber

    SELECT
	a.*,
    ''UserName''=
    (select UserName from {databaseOwner}{objectQualifier}Users where {databaseOwner}{objectQualifier}Users.UserId=a.UserId),
    ''RatingTotal''=
    (select sum(Rating) from {databaseOwner}{objectQualifier}CP_Product_Rating where {databaseOwner}{objectQualifier}CP_Product_Rating.ProductId=a.Id),
    ''RatingVotes''=
     (select count(Id) from {databaseOwner}{objectQualifier}CP_Product_Rating where {databaseOwner}{objectQualifier}CP_Product_Rating.ProductId=a.Id),
    ''Comments''=
     (select count(Id) from {databaseOwner}{objectQualifier}CP_Product_Comment where {databaseOwner}{objectQualifier}CP_Product_Comment.ProductId=a.Id and {databaseOwner}{objectQualifier}CP_Product_Comment.IsPrivate=0)
FROM {databaseOwner}{objectQualifier}CP_Product_Product a
WHERE (a.TypeId = @TypeId)--TypeId
    and    (@CurrentUserId = -2 or a.Id in (
	SELECT DISTINCT ProductId FROM {databaseOwner}{objectQualifier}CP_Product_ProductToRole
	WHERE ({databaseOwner}{objectQualifier}CP_Product_ProductToRole.RoleId = -1 OR {databaseOwner}{objectQualifier}CP_Product_ProductToRole.RoleId IN (SELECT RoleId FROM {databaseOwner}{objectQualifier}UserRoles WHERE UserId = @CurrentUserId))
        ))--Current user Id
    AND ( @CategoryId = -1 OR a.Id in (
	SELECT DISTINCT ProductId FROM {databaseOwner}{objectQualifier}CP_Product_ProductToCategory 
    WHERE {databaseOwner}{objectQualifier}CP_Product_ProductToCategory.CategoryId=@CategoryId )
            )--CategoryId
      AND ( @TagId = -1 OR a.Id in (
	SELECT DISTINCT ProductId FROM {databaseOwner}{objectQualifier}CP_Product_ProductToTag 
    WHERE {databaseOwner}{objectQualifier}CP_Product_ProductToTag.TagId=@TagId )
            )--TagId
     and (@UserId=-1 or a.UserId=@UserId) -- UserId
     and (@searchTerm='''' or a.[Name] like ''%''+@searchTerm+''%'') -- Searchterm
     AND (IsNull(a.PublishDate, 1) <= CONVERT(CHAR(8), GETDATE(), 112))
      AND (IsNull(a.ExpireDate, DateAdd(d, 1, GetDate())) > CONVERT(CHAR(8), GETDATE(), 112))
      AND ( a.Authed = 1) -- Authorized
      AND ( a.Active = 1)  -- Active
       
      ORDER BY a.[Order] asc,
	   CASE @SortField 
		WHEN ''PublishDate'' THEN a.PublishDate 
		WHEN ''LastModifiedDate'' THEN a.LastModifiedDate
        when ''Views'' then a.Views
        ELSE a.CreatedDate 
	  END DESC 
end 

else--paging
begin
    Declare @PageLowerBound int
    DECLARE @PageUpperBound int
    -- Set the page bounds
    SET @PageLowerBound = @PageSize * @PageIndex
    SET @PageUpperBound = @PageLowerBound + @PageSize + 1

-- Create a temp table to store the select results
    CREATE TABLE #PageIndex 
    (
	IndexId		int IdENTITY (1, 1) NOT NULL,
	RowId	int
     )

-----------Insert into temp table
   insert into #PageIndex(RowId)
   SELECT
	[id]
   FROM {databaseOwner}{objectQualifier}CP_Product_Product a
WHERE (a.TypeId = @TypeId)--TypeId
    and    (@CurrentUserId = -2 or a.Id in (
	SELECT DISTINCT ProductId FROM {databaseOwner}{objectQualifier}CP_Product_ProductToRole
	WHERE ({databaseOwner}{objectQualifier}CP_Product_ProductToRole.RoleId = -1 OR {databaseOwner}{objectQualifier}CP_Product_ProductToRole.RoleId IN (SELECT RoleId FROM {databaseOwner}{objectQualifier}UserRoles WHERE UserId = @CurrentUserId))
        ))--current User Id
    AND ( @CategoryId = -1 OR a.Id in (
	SELECT DISTINCT ProductId FROM {databaseOwner}{objectQualifier}CP_Product_ProductToCategory 
    WHERE {databaseOwner}{objectQualifier}CP_Product_ProductToCategory.CategoryId=@CategoryId )
            )--CategoryId
      AND ( @TagId = -1 OR a.Id in (
	SELECT DISTINCT ProductId FROM {databaseOwner}{objectQualifier}CP_Product_ProductToTag 
    WHERE {databaseOwner}{objectQualifier}CP_Product_ProductToTag.TagId=@TagId )
            )--TagId
     and (@UserId=-1 or a.UserId=@UserId) -- UserId
     and (@searchTerm='''' or a.[Name] like ''%''+@searchTerm+''%'') -- Searchterm
     AND (IsNull(a.PublishDate, 1) <= CONVERT(CHAR(8), GETDATE(), 112))
      AND (IsNull(a.ExpireDate, DateAdd(d, 1, GetDate())) > CONVERT(CHAR(8), GETDATE(), 112))
      AND ( a.Authed = 1) -- Authorized
      AND ( a.Active = 1)  -- Active
      ORDER BY a.[Order] asc,
	   CASE @SortField 
		WHEN ''PublishDate'' THEN a.PublishDate 
		WHEN ''LastModifiedDate'' THEN a.LastModifiedDate
        when ''Views'' then a.Views
        ELSE a.CreatedDate 
	  END DESC 

SELECT
		a.*,
    ''UserName''=
    (select UserName from {databaseOwner}{objectQualifier}Users where {databaseOwner}{objectQualifier}Users.UserId=a.UserId),
    ''RatingTotal''=
    (select sum(Rating) from {databaseOwner}{objectQualifier}CP_Product_Rating where {databaseOwner}{objectQualifier}CP_Product_Rating.ProductId=a.Id),
    ''RatingVotes''=
     (select count(Id) from {databaseOwner}{objectQualifier}CP_Product_Rating where {databaseOwner}{objectQualifier}CP_Product_Rating.ProductId=a.Id),
    ''Comments''=
     (select count(Id) from {databaseOwner}{objectQualifier}CP_Product_Comment where {databaseOwner}{objectQualifier}CP_Product_Comment.ProductId=a.Id and {databaseOwner}{objectQualifier}CP_Product_Comment.IsPrivate=0)
       FROM {databaseOwner}{objectQualifier}CP_Product_Product a,#PageIndex c
       where c.RowId=a.Id 
       and  c.IndexId> @PageLowerBound	
       and  c.IndexId< @PageUpperBound	
       ORDER BY c.IndexId
	   --Return the total number of records available 
	SELECT TotalRecords = COUNT(IndexId) FROM #PageIndex

end 









' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Product_GetRss]    ScriptDate: 08/15/2010 21:56:54 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Product_GetRss]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'





CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Product_GetRss]
   @TypeId   int,
   @CategoryId int,
   @TagId	int,
   @UserId int,
   @SearchTerm nvarchar(100),
   @ProductDate datetime = null,
   @DateType nvarchar(10)=''month'',
   @ItemCount int
AS
set rowcount @ItemCount

If (@ProductDate IS NULL) SET @ProductDate = GetUTCDate()
if	(@DateType=''day'') 
begin 
    SELECT
	a.*,
    ''UserName''=
    (select UserName from {databaseOwner}{objectQualifier}Users where {databaseOwner}{objectQualifier}Users.UserId=a.UserId),
    ''RatingTotal''=
    (select sum(Rating) from {databaseOwner}{objectQualifier}CP_Product_Rating where {databaseOwner}{objectQualifier}CP_Product_Rating.ProductId=a.Id),
    ''RatingVotes''=
     (select count(Id) from {databaseOwner}{objectQualifier}CP_Product_Rating where {databaseOwner}{objectQualifier}CP_Product_Rating.ProductId=a.Id),
    ''Comments''=
     (select count(Id) from {databaseOwner}{objectQualifier}CP_Product_Comment where {databaseOwner}{objectQualifier}CP_Product_Comment.ProductId=a.Id and {databaseOwner}{objectQualifier}CP_Product_Comment.IsPrivate=0)
FROM {databaseOwner}{objectQualifier}CP_Product_Product a
WHERE (a.TypeId = @TypeId)--TypeId
     and   (a.Id in (
	SELECT DISTINCT ProductId FROM {databaseOwner}{objectQualifier}CP_Product_ProductToRole
	WHERE ({databaseOwner}{objectQualifier}CP_Product_ProductToRole.RoleId = -1 )))--only display view roles=-1
    and ( @CategoryId = -1 OR a.Id in (
	SELECT DISTINCT ProductId FROM {databaseOwner}{objectQualifier}CP_Product_ProductToCategory 
    WHERE {databaseOwner}{objectQualifier}CP_Product_ProductToCategory.CategoryId=@CategoryId )
            )--CategoryId
      and ( @TagId = -1 OR a.Id in (
	SELECT DISTINCT ProductId FROM {databaseOwner}{objectQualifier}CP_Product_ProductToTag 
    WHERE {databaseOwner}{objectQualifier}CP_Product_ProductToTag.TagId=@TagId )
            )--TagId
     and (@UserId=-1 or a.UserId=@UserId) -- UserId
     and (@searchTerm='''' or a.[Name] like ''%''+@searchTerm+''%'') -- Searchterm
     and (IsNull(a.PublishDate, 1) <= CONVERT(CHAR(8), GETDATE(), 112))
     and (IsNull(a.ExpireDate, DateAdd(d, 1, GetDate())) > CONVERT(CHAR(8), GETDATE(), 112))
     and(a.publishDate BETWEEN @ProductDate and DateAdd( dd, 1, @ProductDate ) )--Product date
      and ( a.Authed = 1) -- Authorized
      and ( a.Active = 1)  -- Active
      ORDER BY a.PublishDate  desc
end
else 
  if	(@DateType=''month'') 
  begin 
    SELECT
	a.*,
    ''UserName''=
    (select UserName from {databaseOwner}{objectQualifier}Users where {databaseOwner}{objectQualifier}Users.UserId=a.UserId),
    ''RatingTotal''=
    (select sum(Rating) from {databaseOwner}{objectQualifier}CP_Product_Rating where {databaseOwner}{objectQualifier}CP_Product_Rating.ProductId=a.Id),
    ''RatingVotes''=
     (select count(Id) from {databaseOwner}{objectQualifier}CP_Product_Rating where {databaseOwner}{objectQualifier}CP_Product_Rating.ProductId=a.Id),
    ''Comments''=
     (select count(Id) from {databaseOwner}{objectQualifier}CP_Product_Comment where {databaseOwner}{objectQualifier}CP_Product_Comment.ProductId=a.Id and {databaseOwner}{objectQualifier}CP_Product_Comment.IsPrivate=0)
FROM {databaseOwner}{objectQualifier}CP_Product_Product a
WHERE (a.TypeId = @TypeId)--TypeId
     and   (a.Id in (
	SELECT DISTINCT ProductId FROM {databaseOwner}{objectQualifier}CP_Product_ProductToRole
	WHERE ({databaseOwner}{objectQualifier}CP_Product_ProductToRole.RoleId = -1 )))--only display view roles=-1
     and ( @CategoryId = -1 OR a.Id in (
	SELECT DISTINCT ProductId FROM {databaseOwner}{objectQualifier}CP_Product_ProductToCategory 
    WHERE {databaseOwner}{objectQualifier}CP_Product_ProductToCategory.CategoryId=@CategoryId )
            )--CategoryId
      and ( @TagId = -1 OR a.Id in (
	SELECT DISTINCT ProductId FROM {databaseOwner}{objectQualifier}CP_Product_ProductToTag 
    WHERE {databaseOwner}{objectQualifier}CP_Product_ProductToTag.TagId=@TagId )
            )--TagId
     and (@UserId=-1 or a.UserId=@UserId) -- UserId
     and (@searchTerm='''' or a.[Name] like ''%''+@searchTerm+''%'') -- Searchterm
     and (IsNull(a.PublishDate, 1) <= CONVERT(CHAR(8), GETDATE(), 112))
     and (IsNull(a.ExpireDate, DateAdd(d, 1, GetDate())) > CONVERT(CHAR(8), GETDATE(), 112))
     and(a.publishDate BETWEEN DATEADD(month, DATEDIFF(month, 0, @ProductDate), 0)  AND @ProductDate )--Product date
      and ( a.Authed = 1) -- Authorized
      and ( a.Active = 1)  -- Active
       ORDER BY a.PublishDate  desc
   end
 else
    begin 
      SELECT
	a.*,
    ''UserName''=
    (select UserName from {databaseOwner}{objectQualifier}Users where {databaseOwner}{objectQualifier}Users.UserId=a.UserId),
    ''RatingTotal''=
    (select sum(Rating) from {databaseOwner}{objectQualifier}CP_Product_Rating where {databaseOwner}{objectQualifier}CP_Product_Rating.ProductId=a.Id),
    ''RatingVotes''=
     (select count(Id) from {databaseOwner}{objectQualifier}CP_Product_Rating where {databaseOwner}{objectQualifier}CP_Product_Rating.ProductId=a.Id),
    ''Comments''=
     (select count(Id) from {databaseOwner}{objectQualifier}CP_Product_Comment where {databaseOwner}{objectQualifier}CP_Product_Comment.ProductId=a.Id and {databaseOwner}{objectQualifier}CP_Product_Comment.IsPrivate=0)
FROM {databaseOwner}{objectQualifier}CP_Product_Product a
WHERE (a.TypeId = @TypeId)--TypeId
    and   (a.Id in (
	SELECT DISTINCT ProductId FROM {databaseOwner}{objectQualifier}CP_Product_ProductToRole
	WHERE ({databaseOwner}{objectQualifier}CP_Product_ProductToRole.RoleId = -1 )))--only display view roles=-1
     and ( @CategoryId = -1 OR a.Id in (
	SELECT DISTINCT ProductId FROM {databaseOwner}{objectQualifier}CP_Product_ProductToCategory 
    WHERE {databaseOwner}{objectQualifier}CP_Product_ProductToCategory.CategoryId=@CategoryId )
            )--CategoryId
      and ( @TagId = -1 OR a.Id in (
	SELECT DISTINCT ProductId FROM {databaseOwner}{objectQualifier}CP_Product_ProductToTag 
    WHERE {databaseOwner}{objectQualifier}CP_Product_ProductToTag.TagId=@TagId )
            )--TagId
     and (@UserId=-1 or a.UserId=@UserId) -- UserId
     and (@searchTerm='''' or a.[Name] like ''%''+@searchTerm+''%'') -- Searchterm
     and (IsNull(a.PublishDate, 1) <= CONVERT(CHAR(8), GETDATE(), 112))
     and (IsNull(a.ExpireDate, DateAdd(d, 1, GetDate())) > CONVERT(CHAR(8), GETDATE(), 112))
     and ( a.Authed = 1) -- Authorized
      and ( a.Active = 1)  -- Active
       ORDER BY a.PublishDate  desc
 end









' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_UserCategory_Delete]    ScriptDate: 08/15/2010 21:56:54 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_UserCategory_Delete]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'

CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_UserCategory_Delete]
	@Id int
AS

DELETE FROM {databaseOwner}{objectQualifier}CP_Product_UserCategory
WHERE
	[Id] = @Id

DELETE FROM {databaseOwner}{objectQualifier}CP_Product_Product
WHERE
	[UserCategoryId] = @Id
' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_UserCategory_Update]    ScriptDate: 08/15/2010 21:56:54 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_UserCategory_Update]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_UserCategory_Update]
	@Id int, 
	@PortalId int, 
	@TypeId int, 
	@UserId int, 
	@Name nvarchar(80), 
	@Thumbnail nvarchar(200), 
	@Image nvarchar(200), 
	@Order int, 
	@Description nvarchar(1000) 
AS

UPDATE {databaseOwner}{objectQualifier}CP_Product_UserCategory SET
	[PortalId] = @PortalId,
	[TypeId] = @TypeId,
	[UserId] = @UserId,
	[Name] = @Name,
	[Thumbnail] = @Thumbnail,
	[Image] = @Image,
	[Order] = @Order,
	[Description] = @Description
WHERE
	[Id] = @Id
' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_UserCategory_Get]    ScriptDate: 08/15/2010 21:56:54 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_UserCategory_Get]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'


CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_UserCategory_Get]
	@Id int
	
AS

SELECT a.*,
       b.[Name] as ''TypeName'',
        ''ProductCounts''=
     (select count(Id) from {databaseOwner}{objectQualifier}CP_Product_Product where {databaseOwner}{objectQualifier}CP_Product_Product.UserCategoryId=a.Id)
FROM {databaseOwner}{objectQualifier}CP_Product_UserCategory a, {databaseOwner}{objectQualifier}CP_Product_Type b
WHERE
	(a.[Id] = @Id) and
    (a.[TypeId]=b.[Id])
	


' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_UserCategory_GetByUser]    ScriptDate: 08/15/2010 21:56:54 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_UserCategory_GetByUser]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'




CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_UserCategory_GetByUser]
	@UserId int
AS

SELECT a.*,
       b.[Name] as ''TypeName'',
      ''ProductCounts''=
      (select count(Id) from {databaseOwner}{objectQualifier}CP_Product_Product where {databaseOwner}{objectQualifier}CP_Product_Product.UserCategoryId=a.Id)
FROM {databaseOwner}{objectQualifier}CP_Product_UserCategory a, {databaseOwner}{objectQualifier}CP_Product_Type b
WHERE 
    (a.[UserId]=@UserId) and
     (a.[TypeId]=b.[Id])
order by [Order] asc




' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_UserCategory_Add]    ScriptDate: 08/15/2010 21:56:54 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_UserCategory_Add]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_UserCategory_Add]
	@PortalId int,
	@TypeId int,
	@UserId int,
	@Name nvarchar(80),
	@Thumbnail nvarchar(200),
	@Image nvarchar(200),
	@Order int,
	@Description nvarchar(1000)
AS

INSERT INTO {databaseOwner}{objectQualifier}CP_Product_UserCategory (
	[PortalId],
	[TypeId],
	[UserId],
	[Name],
	[Thumbnail],
	[Image],
	[Order],
	[Description]
) VALUES (
	@PortalId,
	@TypeId,
	@UserId,
	@Name,
	@Thumbnail,
	@Image,
	@Order,
	@Description
)

select SCOPE_IDENTITY()
' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Product_GetNewVersion]    ScriptDate: 08/15/2010 21:56:54 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Product_GetNewVersion]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'


Create PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Product_GetNewVersion]
	@Id int
	
AS
set rowcount 1

SELECT 
    a.*,
     ''UserName''=
    (select UserName from {databaseOwner}{objectQualifier}Users where {databaseOwner}{objectQualifier}Users.UserId=a.UserId),
    ''RatingTotal''=
    (select sum(Rating) from {databaseOwner}{objectQualifier}CP_Product_Rating where {databaseOwner}{objectQualifier}CP_Product_Rating.ProductId=a.Id),
    ''RatingVotes''=
     (select count(Id) from {databaseOwner}{objectQualifier}CP_Product_Rating where {databaseOwner}{objectQualifier}CP_Product_Rating.ProductId=a.Id),
    ''Comments''=
     (select count(Id) from {databaseOwner}{objectQualifier}CP_Product_Comment where {databaseOwner}{objectQualifier}CP_Product_Comment.ProductId=a.Id and {databaseOwner}{objectQualifier}CP_Product_Comment.IsPrivate=0)
FROM {databaseOwner}{objectQualifier}CP_Product_Product a
WHERE (a.[PreviousVersion] = @Id)
	


' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Common_User_GetByType_Product]    ScriptDate: 08/15/2010 21:56:54 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Common_User_GetByType_Product]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'






CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Common_User_GetByType_Product]
    @TypeId   int
AS
select distinct
	a.UserId,
    a.Username,
    a.FirstName,
    a.LastName,
    a.DisplayName, 
    b.Email,
    b.AvatarEmail,
    b.Authed,
    b.SiteUrl,
    b.LogoUrl,
    b.Slogan,
    ''Biography''='''',
    b.P_Type,
    b.P_DD_BankName,
    b.P_DD_RoutingNumber,
    b.P_DD_AccountNumber,
    b.P_DD_AccountType,
    b.P_Paypal,
    b.P_C_Payee,
    b.P_C_Address1,
    b.P_C_Address2,
    b.P_C_City,
    b.P_C_RegionCode,
    b.P_C_CountryCode,
    ''CustomerMessage''='''',
    ''IntegrateUrl''='''',
    ''Support''='''',
    ''License''='''',
    ''Delivery''='''',
    b.AdditionalParm,
    b.SecurityValue
FROM {databaseOwner}{objectQualifier}Users a
left join {databaseOwner}{objectQualifier}CP_Common_User b
on a.UserId=b.UserId
Inner join {databaseOwner}{objectQualifier}CP_Product_Product c
on a.UserId=c.UserId
where (c.TypeId = @TypeId)--TypeId






' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Common_User_Get]    ScriptDate: 08/15/2010 21:56:54 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Common_User_Get]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'





CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Common_User_Get]
	@UserId int
AS
SELECT a.UserId,
    a.Username,
    a.FirstName,
    a.LastName,
    a.DisplayName,
    b.Email,
    b.AvatarEmail,
    b.Authed,
    b.SiteUrl,
    b.LogoUrl,
    b.Slogan,
    b.Biography,
    b.P_Type,
    b.P_DD_BankName,
    b.P_DD_RoutingNumber,
    b.P_DD_AccountNumber,
    b.P_DD_AccountType,
    b.P_Paypal,
    b.P_C_Payee,
    b.P_C_Address1,
    b.P_C_Address2,
    b.P_C_City,
    b.P_C_RegionCode,
    b.P_C_CountryCode,
    b.CustomerMessage,
    b.IntegrateUrl,
    b.Support,
    b.License,
    b.Delivery,
    b.AdditionalParm,
    b.SecurityValue
FROM {databaseOwner}{objectQualifier}Users a
left join {databaseOwner}{objectQualifier}CP_Common_User b
on a.UserId=b.UserId
WHERE a.UserId = @UserId
	





' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Product_GetPreviousVersion]    ScriptDate: 08/15/2010 21:56:54 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Product_GetPreviousVersion]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'


create PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Product_GetPreviousVersion]
	@TypeId int,
    @UserId int,
    @ProductId int
AS
 SELECT  a.*,
     ''UserName''=
    (select UserName from {databaseOwner}{objectQualifier}Users where {databaseOwner}{objectQualifier}Users.UserId=a.UserId),
    ''RatingTotal''=
    (select sum(Rating) from {databaseOwner}{objectQualifier}CP_Product_Rating where {databaseOwner}{objectQualifier}CP_Product_Rating.ProductId=a.Id),
    ''RatingVotes''=
     (select count(Id) from {databaseOwner}{objectQualifier}CP_Product_Rating where {databaseOwner}{objectQualifier}CP_Product_Rating.ProductId=a.Id),
    ''Comments''=
     (select count(Id) from {databaseOwner}{objectQualifier}CP_Product_Comment where {databaseOwner}{objectQualifier}CP_Product_Comment.ProductId=a.Id and {databaseOwner}{objectQualifier}CP_Product_Comment.IsPrivate=0)
FROM {databaseOwner}{objectQualifier}CP_Product_Product a
WHERE
	[TypeId] = @TypeId and
    [UserId]= @UserId and
    [Id]<>@ProductId
	


' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Product_GetFlashImage]    ScriptDate: 08/15/2010 21:56:55 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Product_GetFlashImage]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'

/****** Object:  StoredProcedure dbo.[CP_Product_Product_GetFlashImage]    ScriptDate: 10/18/2007 01:57:12 ******/

CREATE  PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Product_GetFlashImage]
   @TypeId   int,
   @UserId		int,
   @Categories varchar(100),
   @RecordCount	int, 
   @Featured	bit,
   @SortField	varchar(100)
AS
   set rowcount @RecordCount
SELECT
	a.*  ,
     ''UserName''=
    (select UserName from {databaseOwner}{objectQualifier}Users where {databaseOwner}{objectQualifier}Users.UserId=a.UserId),
    ''RatingTotal''=
    (select sum(Rating) from {databaseOwner}{objectQualifier}CP_Product_Rating where {databaseOwner}{objectQualifier}CP_Product_Rating.ProductId=a.Id),
    ''RatingVotes''=
     (select count(Id) from {databaseOwner}{objectQualifier}CP_Product_Rating where {databaseOwner}{objectQualifier}CP_Product_Rating.ProductId=a.Id),
    ''Comments''=
     (select count(Id) from {databaseOwner}{objectQualifier}CP_Product_Comment where {databaseOwner}{objectQualifier}CP_Product_Comment.ProductId=a.Id and {databaseOwner}{objectQualifier}CP_Product_Comment.IsPrivate=0)
FROM {databaseOwner}{objectQualifier}CP_Product_Product a
WHERE a.TypeId = @TypeId--TypeId
    AND ((@UserId=-2) or  a.Id in (
	SELECT DISTINCT ProductId FROM {databaseOwner}{objectQualifier}CP_Product_ProductToRole
	WHERE ({databaseOwner}{objectQualifier}CP_Product_ProductToRole.RoleId = -1 OR {databaseOwner}{objectQualifier}CP_Product_ProductToRole.RoleId IN (SELECT RoleId FROM {databaseOwner}{objectQualifier}UserRoles WHERE UserId = @UserId))
        ))--UserId
   AND ( @Categories = '''' OR a.Id in (
	SELECT DISTINCT ProductId FROM {databaseOwner}{objectQualifier}CP_Product_ProductToCategory WHERE ({databaseOwner}{objectQualifier}CP_Product_ProductToCategory.CategoryId IN (SELECT intValue FROM {databaseOwner}CP_CsvToInt(@Categories)))
            ))--Categories    
    AND ( a.Authed = 1)  
     AND ( a.Active = 1)        
      AND (IsNull(a.PublishDate, 1) <= CONVERT(CHAR(8), GETDATE(), 112))
      AND (IsNull(a.ExpireDate, DateAdd(d, 1, GetDate())) > CONVERT(CHAR(8), GETDATE(), 112))
      AND (@Featured = 0 OR a.Featured = 1)
      and ((a.[Image] is not null) and (a.[Image]<>''''))
      ORDER BY a.[Order] asc,
	   CASE @SortField 
		WHEN ''PublishDate'' THEN a.PublishDate 
		WHEN ''LastModifiedDate'' THEN a.LastModifiedDate
        when ''Views'' then a.Views
        ELSE a.CreatedDate 
	END DESC

' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Product_GetByModuleSettings]    ScriptDate: 08/15/2010 21:56:55 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Product_GetByModuleSettings]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'





/****** Object:  StoredProcedure dbo.[CP_Product_Product_GetByModuleSettings]    ScriptDate: 10/18/2007 01:57:11 ******/

CREATE   PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Product_GetByModuleSettings]
   @TypeId   int,
   @CurrentUserId	int,
   @Categories nvarchar(100),
   @Authors nvarchar(100),
   @ShowFeaturedOnly bit,
   @ShowPromoOnly	bit,
   @ShowImageOnly bit,
   @SearchTerm nvarchar(100),
   @SortField	nvarchar(100),
   @MaxNumber	int,
   @ShowPage	bit,
   @PageSize int, 
   @PageIndex int
AS
if (@ShowPage=0) --if donn''t paging ,direct get record 
BEGIN
    set rowcount @MaxNumber
SELECT
	a.*,
     ''UserName''=
    (select UserName from {databaseOwner}{objectQualifier}Users where {databaseOwner}{objectQualifier}Users.UserId=a.UserId),
    ''RatingTotal''=
    (select sum(Rating) from {databaseOwner}{objectQualifier}CP_Product_Rating where {databaseOwner}{objectQualifier}CP_Product_Rating.ProductId=a.Id),
    ''RatingVotes''=
     (select count(Id) from {databaseOwner}{objectQualifier}CP_Product_Rating where {databaseOwner}{objectQualifier}CP_Product_Rating.ProductId=a.Id),
    ''Comments''=
     (select count(Id) from {databaseOwner}{objectQualifier}CP_Product_Comment where {databaseOwner}{objectQualifier}CP_Product_Comment.ProductId=a.Id and {databaseOwner}{objectQualifier}CP_Product_Comment.IsPrivate=0)
FROM {databaseOwner}{objectQualifier}CP_Product_Product a
WHERE (a.TypeId = @TypeId)--TypeId
     and (@CurrentUserId = -2 or a.Id in (
	SELECT DISTINCT ProductId FROM {databaseOwner}{objectQualifier}CP_Product_ProductToRole
	WHERE ({databaseOwner}{objectQualifier}CP_Product_ProductToRole.RoleId = -1 OR {databaseOwner}{objectQualifier}CP_Product_ProductToRole.RoleId IN (SELECT RoleId FROM {databaseOwner}{objectQualifier}UserRoles WHERE UserId = @CurrentUserId))
        ))--UserId
     and ( @Categories = '''' OR a.Id in (
	SELECT DISTINCT ProductId FROM {databaseOwner}{objectQualifier}CP_Product_ProductToCategory WHERE ({databaseOwner}{objectQualifier}CP_Product_ProductToCategory.CategoryId IN (SELECT intValue FROM {databaseOwner}CP_CsvToInt(@Categories)))
            ))--Categories    
      and ( @Authors = '''' OR a.UserId in (
             SELECT intValue FROM {databaseOwner}CP_CsvToInt(@Authors))) --Authors          
     and (IsNull(a.PublishDate, 1) <= CONVERT(CHAR(8), GETDATE(), 112))
      and (IsNull(a.ExpireDate, DateAdd(d, 1, GetDate())) > CONVERT(CHAR(8), GETDATE(), 112))
      and ( a.Authed = 1) -- Authorized
      and ( a.Active = 1)  -- Active
      and (@ShowFeaturedOnly = 0 OR a.Featured = 1)
      and (@ShowPromoOnly = 0 OR a.EnablePromoPrice = 1)--promo
      and (@ShowImageOnly=0 or ((a.[Image] is not null) and (a.[Image]<>'''')))
      and (@searchTerm='''' or a.[Name] like ''%''+@searchTerm+''%'') -- Searchterm
      ORDER BY a.[Order] asc,
	   CASE @SortField 
		WHEN ''PublishDate'' THEN a.PublishDate 
		WHEN ''LastModifiedDate'' THEN a.LastModifiedDate
        when ''Views'' then a.Views
        ELSE a.CreatedDate 
	END DESC
end 

else--paging
begin
    Declare @PageLowerBound int
    DECLARE @PageUpperBound int
    -- Set the page bounds
    SET @PageLowerBound = @PageSize * @PageIndex
    SET @PageUpperBound = @PageLowerBound + @PageSize + 1

-- Create a temp table to store the select results
    CREATE TABLE #PageIndex 
    (
	IndexId		int IdENTITY (1, 1) NOT NULL,
	RowId	int
     )

-----------Insert into temp table
   insert into #PageIndex(RowId)
   SELECT
	[id]
   FROM {databaseOwner}{objectQualifier}CP_Product_Product a
   WHERE (a.TypeId = @TypeId)--TypeId
     and (@CurrentUserId = -2 or a.Id in (
	SELECT DISTINCT ProductId FROM {databaseOwner}{objectQualifier}CP_Product_ProductToRole
	WHERE ({databaseOwner}{objectQualifier}CP_Product_ProductToRole.RoleId = -1 OR {databaseOwner}{objectQualifier}CP_Product_ProductToRole.RoleId IN (SELECT RoleId FROM {databaseOwner}{objectQualifier}UserRoles WHERE UserId = @CurrentUserId))
        ))--UserId
     and ( @Categories = '''' OR a.Id in (
	SELECT DISTINCT ProductId FROM {databaseOwner}{objectQualifier}CP_Product_ProductToCategory WHERE ({databaseOwner}{objectQualifier}CP_Product_ProductToCategory.CategoryId IN (SELECT intValue FROM {databaseOwner}CP_CsvToInt(@Categories)))
            ))--Categories    
      and ( @Authors = '''' OR a.UserId in (
             SELECT intValue FROM {databaseOwner}CP_CsvToInt(@Authors))) --Authors          
     and (IsNull(a.PublishDate, 1) <= CONVERT(CHAR(8), GETDATE(), 112))
      and (IsNull(a.ExpireDate, DateAdd(d, 1, GetDate())) > CONVERT(CHAR(8), GETDATE(), 112))
      and ( a.Authed = 1) -- Authorized
      and ( a.Active = 1)  -- Active
      and (@ShowFeaturedOnly = 0 OR a.Featured = 1)
      and (@ShowPromoOnly = 0 OR a.EnablePromoPrice = 1)--promo
      and (@ShowImageOnly=0 or ((a.[Image] is not null) and (a.[Image]<>'''')))
      and (@searchTerm='''' or a.[Name] like ''%''+@searchTerm+''%'') -- Searchterm
      ORDER BY a.[Order] asc,
	   CASE @SortField 
		WHEN ''PublishDate'' THEN a.PublishDate 
		WHEN ''LastModifiedDate'' THEN a.LastModifiedDate
        when ''Views'' then a.Views
        ELSE a.CreatedDate 
	END DESC

SELECT
	a.*,
    ''UserName''=
    (select UserName from {databaseOwner}{objectQualifier}Users where {databaseOwner}{objectQualifier}Users.UserId=a.UserId),
    ''RatingTotal''=
    (select sum(Rating) from {databaseOwner}{objectQualifier}CP_Product_Rating where {databaseOwner}{objectQualifier}CP_Product_Rating.ProductId=a.Id),
    ''RatingVotes''=
     (select count(Id) from {databaseOwner}{objectQualifier}CP_Product_Rating where {databaseOwner}{objectQualifier}CP_Product_Rating.ProductId=a.Id),
    ''Comments''=
     (select count(Id) from {databaseOwner}{objectQualifier}CP_Product_Comment where {databaseOwner}{objectQualifier}CP_Product_Comment.ProductId=a.Id and {databaseOwner}{objectQualifier}CP_Product_Comment.IsPrivate=0)
       FROM {databaseOwner}{objectQualifier}CP_Product_Product a,#PageIndex c
       where c.RowId=a.Id 
       and  c.IndexId> @PageLowerBound	
       and  c.IndexId< @PageUpperBound	
       ORDER BY c.IndexId

	   --Return the total number of records available 
	SELECT TotalRecords = COUNT(IndexId) FROM #PageIndex

end 










' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_OrderDetail_Add]    ScriptDate: 08/15/2010 21:56:55 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_OrderDetail_Add]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'




CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_OrderDetail_Add]
	@OrderId int,
	@PortalId int,
    @TypeId int,
	@OrderNo nvarchar(100),
	@InvoiceNo nvarchar(100),
	@ClientId int,
	@ClientName nvarchar(50),
	@VendorId int,
	@VendorName nvarchar(50),
	@ProductId int,
	@ProductName nvarchar(200),
	@OptionId int,
	@OptionName nvarchar(200),
	@Quantity int,
	@UnitPrice decimal(18, 2),
	@TaxFee decimal(18, 2),
	@ShipId int,
	@ShipName nvarchar(200),
	@ShipFee decimal(18, 2),
	@ItemSum decimal(18, 2),
	@CreatedDate datetime,
	@ShipDate datetime,
	@ArriveDate datetime,
	@DiscountRequest nvarchar(1000),
	@DiscountResponse nvarchar(1000)
AS

INSERT INTO {databaseOwner}{objectQualifier}CP_Product_OrderDetail (
	[OrderId],
	[PortalId],
    [TypeId],
	[OrderNo],
	[InvoiceNo],
	[ClientId],
	[ClientName],
	[VendorId],
	[VendorName],
	[ProductId],
	[ProductName],
	[OptionId],
	[OptionName],
	[Quantity],
	[UnitPrice],
	[TaxFee],
	[ShipId],
	[ShipName],
	[ShipFee],
	[ItemSum],
	[CreatedDate],
	[ShipDate],
	[ArriveDate],
	[DiscountRequest],
	[DiscountResponse]
) VALUES (
	@OrderId,
	@PortalId,
    @TypeId,
	@OrderNo,
	@InvoiceNo,
	@ClientId,
	@ClientName,
	@VendorId,
	@VendorName,
	@ProductId,
	@ProductName,
	@OptionId,
	@OptionName,
	@Quantity,
	@UnitPrice,
	@TaxFee,
	@ShipId,
	@ShipName,
	@ShipFee,
	@ItemSum,
	GetDate(),
	@ShipDate,
	@ArriveDate,
	@DiscountRequest,
	@DiscountResponse
)

select SCOPE_IDENTITY()




' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_OrderDetail_Update]    ScriptDate: 08/15/2010 21:56:55 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_OrderDetail_Update]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'



CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_OrderDetail_Update]
	@Id int, 
	@OrderId int, 
	@PortalId int, 
    @TypeId int,
	@OrderNo nvarchar(100), 
	@InvoiceNo nvarchar(100), 
	@ClientId int, 
	@ClientName nvarchar(50), 
	@VendorId int, 
	@VendorName nvarchar(50), 
	@ProductId int, 
	@ProductName nvarchar(200), 
	@OptionId int, 
	@OptionName nvarchar(200), 
	@Quantity int, 
	@UnitPrice decimal(18, 2), 
	@TaxFee decimal(18, 2), 
	@ShipId int, 
	@ShipName nvarchar(200), 
	@ShipFee decimal(18, 2), 
	@ItemSum decimal(18, 2), 
	@CreatedDate datetime, 
	@ShipDate datetime, 
	@ArriveDate datetime, 
	@DiscountRequest nvarchar(1000), 
	@DiscountResponse nvarchar(1000) 
AS

UPDATE {databaseOwner}{objectQualifier}CP_Product_OrderDetail SET
	[OrderId] = @OrderId,
	[PortalId] = @PortalId,
    [TypeId] = @TypeId,
	[OrderNo] = @OrderNo,
	[InvoiceNo] = @InvoiceNo,
	[ClientId] = @ClientId,
	[ClientName] = @ClientName,
	[VendorId] = @VendorId,
	[VendorName] = @VendorName,
	[ProductId] = @ProductId,
	[ProductName] = @ProductName,
	[OptionId] = @OptionId,
	[OptionName] = @OptionName,
	[Quantity] = @Quantity,
	[UnitPrice] = @UnitPrice,
	[TaxFee] = @TaxFee,
	[ShipId] = @ShipId,
	[ShipName] = @ShipName,
	[ShipFee] = @ShipFee,
	[ItemSum] = @ItemSum,
	[CreatedDate] = @CreatedDate,
	[ShipDate] = @ShipDate,
	[ArriveDate] = @ArriveDate,
	[DiscountRequest] = @DiscountRequest,
	[DiscountResponse] = @DiscountResponse
WHERE
	[Id] = @Id



' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_OrderDetail_GetVendorByPortal]    ScriptDate: 08/15/2010 21:56:55 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_OrderDetail_GetVendorByPortal]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'



CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_OrderDetail_GetVendorByPortal]
	@PortalId int,
    @StartDate datetime,
    @EndDate DateTime
AS
    SELECT distinct [VendorId],[VendorName]
    FROM {databaseOwner}{objectQualifier}CP_Product_OrderDetail
    WHERE ([PortalId] = @PortalId)
    and   ([CreatedDate] between @StartDate and DateAdd(d,1,@EndDate))
	order by [VendorName]
 ' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Common_A3File_Update]    ScriptDate: 08/15/2010 21:56:55 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Common_A3File_Update]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'




CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Common_A3File_Update]
	@Id int, 
	@FolderId int, 
	@PortalId int, 
	@UserId int, 
	@FileName nvarchar(200), 
    @Bucket  nvarchar(200),
	@A3Key nvarchar(200), 
	@Extension nvarchar(100), 
	@Size int, 
	@Width int, 
	@Height int, 
    @Duration nchar(10),
	@ContentType nvarchar(200), 
	@CreatedDate datetime, 
	@LastModifiedDate datetime 
AS

UPDATE {databaseOwner}{objectQualifier}CP_Common_A3File SET
	[FolderId] = @FolderId,
	[PortalId] = @PortalId,
	[UserId] = @UserId,
	[FileName] = @FileName,
    [Bucket]=@Bucket,
	[A3Key] = @A3Key,
	[Extension] = @Extension,
	[Size] = @Size,
	[Width] = @Width,
	[Height] = @Height,
    [Duration] = @Duration,
	[ContentType] = @ContentType,
	[CreatedDate] = @CreatedDate,
	[LastModifiedDate] = GetDate()
WHERE
	[Id] = @Id




' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Common_A3File_Add]    ScriptDate: 08/15/2010 21:56:55 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Common_A3File_Add]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'



CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Common_A3File_Add]
	@FolderId int,
	@PortalId int,
	@UserId int,
	@FileName nvarchar(200),
    @Bucket nvarchar(200),
	@A3Key nvarchar(200),
	@Extension nvarchar(100),
	@Size int,
	@Width int,
	@Height int,
    @Duration nchar(10),
	@ContentType nvarchar(200),
	@CreatedDate datetime,
	@LastModifiedDate datetime
AS

INSERT INTO {databaseOwner}{objectQualifier}CP_Common_A3File (
	[FolderId],
	[PortalId],
	[UserId],
	[FileName],
    [Bucket],
	[A3Key],
	[Extension],
	[Size],
	[Width],
	[Height],
    [Duration],
	[ContentType],
	[CreatedDate],
	[LastModifiedDate]
) VALUES (
	@FolderId,
	@PortalId,
	@UserId,
	@FileName,
    @Bucket,
	@A3Key,
	@Extension,
	@Size,
	@Width,
	@Height,
    @Duration,
	@ContentType,
	GetDate(),
	GetDate()
)

select SCOPE_IDENTITY()



' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Common_A3File_GetSpaceUsedByUser]    ScriptDate: 08/15/2010 21:56:55 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Common_A3File_GetSpaceUsedByUser]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'


CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Common_A3File_GetSpaceUsedByUser]
	@UserId int
AS

Declare @RecordCount int
Select @RecordCount=count(Id) 
FROM {databaseOwner}{objectQualifier}CP_Common_A3File
WHERE
	(@UserId=-1 or [UserId] = @UserId)

Declare @SumSize bigint

if (@RecordCount>0) 
       SELECT @SumSize=Sum([Size])
       FROM {databaseOwner}{objectQualifier}CP_Common_A3File
       WHERE
	   (@UserId=-1 or [UserId] = @UserId)
   else
      select  @SumSize=0

 SELECT @SumSize

' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Common_A3File_GetByA3Key]    ScriptDate: 08/15/2010 21:56:55 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Common_A3File_GetByA3Key]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'

CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Common_A3File_GetByA3Key]
	@A3Key nvarchar(200)
AS
Set rowcount 1
SELECT *
FROM {databaseOwner}{objectQualifier}CP_Common_A3File
WHERE
	Lower([A3Key]) = Lower(@A3Key)
	

' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Option_Add]    ScriptDate: 08/15/2010 21:56:55 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Option_Add]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'


CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Option_Add]
	@ProductId int,
	@Name nvarchar(200),
	@Description nvarchar(1000),
	@BonusPrice decimal(18, 2),
	@IsDefault bit,
	@RoleAfterOrder int,
	@RoleAddDay int,
	@Active bit
AS

INSERT INTO {databaseOwner}{objectQualifier}CP_Product_Option (
	[ProductId],
	[Name],
	[Description],
	[BonusPrice],
	[IsDefault],
	[RoleAfterOrder],
	[RoleAddDay],
	[Active]
) VALUES (
	@ProductId,
	@Name,
	@Description,
	@BonusPrice,
	@IsDefault,
	@RoleAfterOrder,
	@RoleAddDay,
	@Active
)

select SCOPE_IDENTITY()


' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Option_Update]    ScriptDate: 08/15/2010 21:56:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Option_Update]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'


CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Option_Update]
	@Id int, 
	@ProductId int, 
	@Name nvarchar(200), 
	@Description nvarchar(1000), 
	@BonusPrice decimal(18, 2), 
	@IsDefault bit, 
	@RoleAfterOrder int, 
	@RoleAddDay int, 
	@Active bit 
AS

UPDATE {databaseOwner}{objectQualifier}CP_Product_Option SET
	[ProductId] = @ProductId,
	[Name] = @Name,
	[Description] = @Description,
	[BonusPrice] = @BonusPrice,
	[IsDefault] = @IsDefault,
	[RoleAfterOrder] = @RoleAfterOrder,
	[RoleAddDay] = @RoleAddDay,
	[Active] = @Active
WHERE
	[Id] = @Id


' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Option_GetByProduct]    ScriptDate: 08/15/2010 21:56:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Option_GetByProduct]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'

CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Option_GetByProduct]
	@ProductId int,
    @ShowActiveOnly bit
AS

SELECT *
FROM {databaseOwner}{objectQualifier}CP_Product_Option
WHERE ([ProductId]=@ProductId)
 and (@ShowActiveOnly=-1 or [Active]=1)

' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Product_GetProductDaysForMonth]    ScriptDate: 08/15/2010 21:56:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Product_GetProductDaysForMonth]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'


/****** {databaseOwner}{objectQualifier}CP_Product_Product_GetProductDaysForMonth   01.03.2005 17:23:45 ******/

CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Product_GetProductDaysForMonth]
(
	@TypeId int,
	@ProductDate DateTime,
    @CurrentUserId int
)
AS

DECLARE @ProductMonth int
DECLARE @ProductYear int
SELECT @ProductMonth = 	DATEPART(mm, @ProductDate) 
SELECT @ProductYear = 	DATEPART(yy, @ProductDate) 


	SELECT
		a.[ID] as ProductId,
		a.[Name] as ''Title'',
		a.[CreatedDate] as AddedDate,
        DATEPART(dd, a.CreatedDate) as AddedDay,
		DATEPART(mm, a.CreatedDate) as AddedMonth,
		DATEPART(yy, a.CreatedDate) as AddedYear
	FROM   {databaseOwner}{objectQualifier}CP_Product_Product a
	WHERE (a.[TypeId] = @TypeId )and
          (@CurrentUserId = -2 or a.Id in (
	SELECT DISTINCT ProductId FROM {databaseOwner}{objectQualifier}CP_Product_ProductToRole
	WHERE ({databaseOwner}{objectQualifier}CP_Product_ProductToRole.RoleId = -1 OR {databaseOwner}{objectQualifier}CP_Product_ProductToRole.RoleId IN (SELECT RoleId FROM {databaseOwner}{objectQualifier}UserRoles WHERE UserID = @CurrentUserId))
        ))--UserId
       and ( a.Authed=1) and
          ( a.Active=1) and
	      (DATEPART(yy, a.CreatedDate) = @ProductYear) AND 
		  (DATEPART(mm, a.CreatedDate) = @ProductMonth)
	ORDER BY a.CreatedDate








' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_CartAddress_Update]    ScriptDate: 08/15/2010 21:56:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_CartAddress_Update]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'

CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_CartAddress_Update]
	@UserId int, 
	@B_FirstName nvarchar(50), 
	@B_LastName nvarchar(50), 
	@B_Address1 nvarchar(200), 
	@B_Address2 nvarchar(200), 
	@B_City nvarchar(200), 
	@B_RegionCode nvarchar(200), 
	@B_CountryCode nvarchar(200), 
	@B_PostalCode nvarchar(50), 
	@B_Phone1 nvarchar(20), 
	@B_Phone2 nvarchar(20), 
	@S_FirstName nvarchar(50), 
	@S_LastName nvarchar(50), 
	@S_Address1 nvarchar(200), 
	@S_Address2 nvarchar(200), 
	@S_City nvarchar(200), 
	@S_RegionCode nvarchar(200), 
	@S_CountryCode nvarchar(200), 
	@S_PostalCode nvarchar(50), 
	@S_Phone1 nvarchar(20), 
	@S_Phone2 nvarchar(20), 
	@NeedAddress bit, 
	@ShipSameAsBill bit 
AS
Declare @RecordCount int

Select @RecordCount=count(UserId) 
from {databaseOwner}{objectQualifier}CP_Product_CartAddress
where UserId=@UserId

if (@RecordCount>0) 
    begin
    UPDATE {databaseOwner}{objectQualifier}CP_Product_CartAddress 
    SET
	[B_FirstName] = @B_FirstName,
	[B_LastName] = @B_LastName,
	[B_Address1] = @B_Address1,
	[B_Address2] = @B_Address2,
	[B_City] = @B_City,
	[B_RegionCode] = @B_RegionCode,
	[B_CountryCode] = @B_CountryCode,
	[B_PostalCode] = @B_PostalCode,
	[B_Phone1] = @B_Phone1,
	[B_Phone2] = @B_Phone2,
	[S_FirstName] = @S_FirstName,
	[S_LastName] = @S_LastName,
	[S_Address1] = @S_Address1,
	[S_Address2] = @S_Address2,
	[S_City] = @S_City,
	[S_RegionCode] = @S_RegionCode,
	[S_CountryCode] = @S_CountryCode,
	[S_PostalCode] = @S_PostalCode,
	[S_Phone1] = @S_Phone1,
	[S_Phone2] = @S_Phone2,
	[NeedAddress] = @NeedAddress,
	[ShipSameAsBill] = @ShipSameAsBill
    WHERE [UserId] = @UserId
  end
else
    begin
   INSERT INTO {databaseOwner}{objectQualifier}CP_Product_CartAddress (
    [UserId],
	[B_FirstName],
	[B_LastName],
	[B_Address1],
	[B_Address2],
	[B_City],
	[B_RegionCode],
	[B_CountryCode],
	[B_PostalCode],
	[B_Phone1],
	[B_Phone2],
	[S_FirstName],
	[S_LastName],
	[S_Address1],
	[S_Address2],
	[S_City],
	[S_RegionCode],
	[S_CountryCode],
	[S_PostalCode],
	[S_Phone1],
	[S_Phone2],
	[NeedAddress],
	[ShipSameAsBill]
) VALUES (
    @UserId,
	@B_FirstName,
	@B_LastName,
	@B_Address1,
	@B_Address2,
	@B_City,
	@B_RegionCode,
	@B_CountryCode,
	@B_PostalCode,
	@B_Phone1,
	@B_Phone2,
	@S_FirstName,
	@S_LastName,
	@S_Address1,
	@S_Address2,
	@S_City,
	@S_RegionCode,
	@S_CountryCode,
	@S_PostalCode,
	@S_Phone1,
	@S_Phone2,
	@NeedAddress,
	@ShipSameAsBill
    )
end
' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_CartAddress_Get]    ScriptDate: 08/15/2010 21:56:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_CartAddress_Get]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'

CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_CartAddress_Get]
	@UserId int
	
AS
set rowcount 1
SELECT *
FROM {databaseOwner}{objectQualifier}CP_Product_CartAddress
WHERE
	[UserId] = @UserId
	

' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Common_User_Update]    ScriptDate: 08/15/2010 21:56:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Common_User_Update]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'






CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Common_User_Update]
	@UserId int, 
	@Email nvarchar(80), 
	@AvatarEmail nvarchar(80), 
	@Authed bit, 
	@SiteUrl nvarchar(200), 
	@LogoUrl nvarchar(200), 
	@Slogan nvarchar(200), 
	@Biography ntext, 
	@P_Type nvarchar(20), 
	@P_DD_BankName nvarchar(400), 
	@P_DD_RoutingNumber nvarchar(200), 
	@P_DD_AccountNumber nvarchar(100), 
	@P_DD_AccountType nvarchar(40), 
	@P_Paypal nvarchar(40), 
	@P_C_Payee nvarchar(40), 
	@P_C_Address1 nvarchar(200), 
	@P_C_Address2 nvarchar(200), 
	@P_C_City nvarchar(200), 
	@P_C_RegionCode nvarchar(200), 
	@P_C_CountryCode nvarchar(200), 
	@CustomerMessage nvarchar(4000),
    @IntegrateUrl nvarchar(400),
    @Support ntext,
    @License ntext,
    @Delivery ntext,
    @AdditionalParm nvarchar(200),
    @SecurityValue nchar(20)
AS
Declare @RecordCount int

Select @RecordCount=count(UserId) 
from {databaseOwner}{objectQualifier}CP_Common_User
where UserId=@UserId
if (@RecordCount>0) 
    begin
       UPDATE {databaseOwner}{objectQualifier}CP_Common_User 
       SET
	    [Email] = @Email,
	    [AvatarEmail] = @AvatarEmail,
	    [Authed] = @Authed,
	    [SiteUrl] = @SiteUrl,
	    [LogoUrl] = @LogoUrl,
	    [Slogan] = @Slogan,
    	[Biography] = @Biography,
	    [P_Type] = @P_Type,
	    [P_DD_BankName] = @P_DD_BankName,
	    [P_DD_RoutingNumber] = @P_DD_RoutingNumber,
	    [P_DD_AccountNumber] = @P_DD_AccountNumber,
	    [P_DD_AccountType] = @P_DD_AccountType,
	    [P_Paypal] = @P_Paypal,
	    [P_C_Payee] = @P_C_Payee,
	    [P_C_Address1] = @P_C_Address1,
	    [P_C_Address2] = @P_C_Address2,
	    [P_C_City] = @P_C_City,
	    [P_C_RegionCode] = @P_C_RegionCode,
	    [P_C_CountryCode] = @P_C_CountryCode,
	    [CustomerMessage] = @CustomerMessage,
        [IntegrateUrl]=@IntegrateUrl,
        [Support]=@Support,
        [License]=@License,
        [Delivery]=@Delivery,
        [AdditionalParm]=@AdditionalParm,
        [SecurityValue]=@SecurityValue
     WHERE [UserId] = @UserId
   end
else
    begin
      INSERT INTO {databaseOwner}{objectQualifier}CP_Common_User (
	[UserId],
    [Email],
	[AvatarEmail],
	[Authed],
	[SiteUrl],
	[LogoUrl],
	[Slogan],
	[Biography],
	[P_Type],
	[P_DD_BankName],
	[P_DD_RoutingNumber],
	[P_DD_AccountNumber],
	[P_DD_AccountType],
	[P_Paypal],
	[P_C_Payee],
	[P_C_Address1],
	[P_C_Address2],
	[P_C_City],
	[P_C_RegionCode],
	[P_C_CountryCode],
	[CustomerMessage],
    [IntegrateUrl],
    [Support],
    [License],
    [Delivery],
    [AdditionalParm],
    [SecurityValue]
) VALUES (
    @UserId,
	@Email,
	@AvatarEmail,
	@Authed,
	@SiteUrl,
	@LogoUrl,
	@Slogan,
	@Biography,
	@P_Type,
	@P_DD_BankName,
	@P_DD_RoutingNumber,
	@P_DD_AccountNumber,
	@P_DD_AccountType,
	@P_Paypal,
	@P_C_Payee,
	@P_C_Address1,
	@P_C_Address2,
	@P_C_City,
	@P_C_RegionCode,
	@P_C_CountryCode,
	@CustomerMessage,
    @IntegrateUrl,
    @Support,
    @License,
    @Delivery,
    @AdditionalParm,
    @SecurityValue
    )
    end 





' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Ship_Update]    ScriptDate: 08/15/2010 21:56:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Ship_Update]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'


CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Ship_Update]
	@Id int, 
	@ProductId int, 
	@OptionId int, 
	@Name nvarchar(200), 
	@Description nvarchar(1000), 
	@Price decimal(18, 2) 
AS

UPDATE {databaseOwner}{objectQualifier}CP_Product_Ship SET
	[ProductId] = @ProductId,
	[OptionId] = @OptionId,
	[Name] = @Name,
	[Description] = @Description,
	[Price] = @Price
WHERE
	[Id] = @Id


' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Ship_Add]    ScriptDate: 08/15/2010 21:56:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Ship_Add]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'


CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Ship_Add]
	@ProductId int,
	@OptionId int,
	@Name nvarchar(200),
	@Description nvarchar(1000),
	@Price decimal(18, 2)
AS

INSERT INTO {databaseOwner}{objectQualifier}CP_Product_Ship (
	[ProductId],
	[OptionId],
	[Name],
	[Description],
	[Price]
) VALUES (
	@ProductId,
	@OptionId,
	@Name,
	@Description,
	@Price
)

select SCOPE_IDENTITY()


' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Common_Role_Add]    ScriptDate: 08/15/2010 21:56:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Common_Role_Add]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'

CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Common_Role_Add]
    @RoleId int,
	@PortalId int,
	@DiskQuote int,
	@ProductCount int,
	@ArticleCount int,
	@ImageCount int,
	@VideoCount int,
	@AudioCount int,
	@DocumentCount int,
	@FriendCount int
AS

INSERT INTO {databaseOwner}{objectQualifier}CP_Common_Role (
    [RoleId],
	[PortalId],
	[DiskQuote],
	[ProductCount],
	[ArticleCount],
	[ImageCount],
	[VideoCount],
	[AudioCount],
	[DocumentCount],
	[FriendCount]
) VALUES (
    @RoleId,
	@PortalId,
	@DiskQuote,
	@ProductCount,
	@ArticleCount,
	@ImageCount,
	@VideoCount,
	@AudioCount,
	@DocumentCount,
	@FriendCount
)


' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Common_Role_Delete]    ScriptDate: 08/15/2010 21:56:56 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Common_Role_Delete]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Common_Role_Delete]
	@RoleId int
AS

DELETE FROM {databaseOwner}{objectQualifier}CP_Common_Role
WHERE
	[RoleId] = @RoleId
' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Common_Role_Update]    ScriptDate: 08/15/2010 21:56:56 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Common_Role_Update]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Common_Role_Update]
	@RoleId int, 
	@PortalId int, 
	@DiskQuote int, 
	@ProductCount int, 
	@ArticleCount int, 
	@ImageCount int, 
	@VideoCount int, 
	@AudioCount int, 
	@DocumentCount int, 
	@FriendCount int 
AS

UPDATE {databaseOwner}{objectQualifier}CP_Common_Role SET
	[PortalId] = @PortalId,
	[DiskQuote] = @DiskQuote,
	[ProductCount] = @ProductCount,
	[ArticleCount] = @ArticleCount,
	[ImageCount] = @ImageCount,
	[VideoCount] = @VideoCount,
	[AudioCount] = @AudioCount,
	[DocumentCount] = @DocumentCount,
	[FriendCount] = @FriendCount
WHERE
	[RoleId] = @RoleId
' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Address_Get]    ScriptDate: 08/15/2010 21:56:56 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Address_Get]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Address_Get]
	@Id int
	
AS

SELECT *
FROM {databaseOwner}{objectQualifier}CP_Product_Address
WHERE
	[Id] = @Id
	
' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Address_GetByUser]    ScriptDate: 08/15/2010 21:56:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Address_GetByUser]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'

CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Address_GetByUser]
	@UserId int
AS

SELECT *
FROM {databaseOwner}{objectQualifier}CP_Product_Address
WHERE
	[UserId]=@UserId

' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Address_Add]    ScriptDate: 08/15/2010 21:56:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Address_Add]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'


CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Address_Add]
	@PortalId int,
	@UserId int,
	@Name nvarchar(100),
	@Address1 nvarchar(200),
	@Address2 nvarchar(200),
	@City nvarchar(200),
	@RegionCode nvarchar(200),
	@CountryCode nvarchar(200),
	@PostalCode nvarchar(10),
	@Phone1 nvarchar(20),
	@Phone2 nvarchar(20),
	@IsPrimary bit,
	@CreatedDate datetime,
	@FirstName nvarchar(50),
	@LastName nvarchar(50)
AS

INSERT INTO {databaseOwner}{objectQualifier}CP_Product_Address (
	[PortalId],
	[UserId],
	[Name],
	[Address1],
	[Address2],
	[City],
	[RegionCode],
	[CountryCode],
	[PostalCode],
	[Phone1],
	[Phone2],
	[IsPrimary],
	[CreatedDate],
	[FirstName],
	[LastName]
) VALUES (
	@PortalId,
	@UserId,
	@Name,
	@Address1,
	@Address2,
	@City,
	@RegionCode,
	@CountryCode,
	@PostalCode,
	@Phone1,
	@Phone2,
	@IsPrimary,
	getdate(),
	@FirstName,
	@LastName
)

select SCOPE_IDENTITY()


' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Address_Update]    ScriptDate: 08/15/2010 21:56:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Address_Update]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'

CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Address_Update]
	@Id int, 
	@PortalId int, 
	@UserId int, 
	@Name nvarchar(100), 
	@Address1 nvarchar(200), 
	@Address2 nvarchar(200), 
	@City nvarchar(200), 
	@RegionCode nvarchar(200), 
	@CountryCode nvarchar(200), 
	@PostalCode nvarchar(10), 
	@Phone1 nvarchar(20), 
	@Phone2 nvarchar(20), 
	@IsPrimary bit, 
	@CreatedDate datetime, 
	@FirstName nvarchar(50), 
	@LastName nvarchar(50) 
AS

UPDATE {databaseOwner}{objectQualifier}CP_Product_Address SET
	[PortalId] = @PortalId,
	[UserId] = @UserId,
	[Name] = @Name,
	[Address1] = @Address1,
	[Address2] = @Address2,
	[City] = @City,
	[RegionCode] = @RegionCode,
	[CountryCode] = @CountryCode,
	[PostalCode] = @PostalCode,
	[Phone1] = @Phone1,
	[Phone2] = @Phone2,
	[IsPrimary] = @IsPrimary,
	[CreatedDate] = @CreatedDate,
	[FirstName] = @FirstName,
	[LastName] = @LastName
WHERE
	[Id] = @Id

' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Address_Delete]    ScriptDate: 08/15/2010 21:56:57 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Address_Delete]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Address_Delete]
	@Id int
AS

DELETE FROM {databaseOwner}{objectQualifier}CP_Product_Address
WHERE
	[Id] = @Id
' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Video_Add]    ScriptDate: 08/15/2010 21:56:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Video_Add]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'


CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Video_Add]
	@ProductId int,
	@Title nvarchar(200),
    @VideoFile nvarchar(2000),
	@VideoPath nvarchar(2000),
	@Description ntext,
	@Duration nchar(10),
	@Thumbnail nvarchar(400),
	@CreatedDate datetime,
	@Views int
AS

INSERT INTO {databaseOwner}{objectQualifier}CP_Product_Video (
	[ProductId],
	[Title],
    [VideoFile],
	[VideoPath],
	[Description],
	[Duration],
	[Thumbnail],
	[CreatedDate],
	[Views]
) VALUES (
	@ProductId,
	@Title,
    @VideoFile,
	@VideoPath,
	@Description,
	@Duration,
	@Thumbnail,
	getdate(),
	@Views
)

select SCOPE_IDENTITY()


' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Video_Update]    ScriptDate: 08/15/2010 21:56:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Video_Update]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'

CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Video_Update]
	@Id int, 
	@ProductId int, 
	@Title nvarchar(200), 
    @VideoFile nvarchar(2000), 
	@VideoPath nvarchar(2000), 
	@Description ntext, 
	@Duration nchar(10), 
	@Thumbnail nvarchar(400), 
	@CreatedDate datetime, 
	@Views int 
AS

UPDATE {databaseOwner}{objectQualifier}CP_Product_Video SET
	[ProductId] = @ProductId,
	[Title] = @Title,
    [VideoFile]=@VideoFile,
	[VideoPath] = @VideoPath,
	[Description] = @Description,
	[Duration] = @Duration,
	[Thumbnail] = @Thumbnail,
	[CreatedDate] = @CreatedDate,
	[Views] = @Views
WHERE
	[Id] = @Id

' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Audio_Add]    ScriptDate: 08/15/2010 21:56:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Audio_Add]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'


CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Audio_Add]
	@ProductId int,
	@Title nvarchar(200),
	@Description ntext,
    @AudioFile nvarchar(200),
	@AudioPath nvarchar(200),
	@Duration nchar(10),
	@CreatedDate datetime,
	@Views int
AS

INSERT INTO {databaseOwner}{objectQualifier}CP_Product_Audio (
	[ProductId],
	[Title],
	[Description],
    [AudioFile],
	[AudioPath],
	[Duration],
	[CreatedDate],
	[Views]
) VALUES (
	@ProductId,
	@Title,
	@Description,
    @AudioFile,
	@AudioPath,
	@Duration,
	getdate(),
	@Views
)

select SCOPE_IDENTITY()


' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Audio_Update]    ScriptDate: 08/15/2010 21:56:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Audio_Update]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'

CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Audio_Update]
	@Id int, 
	@ProductId int, 
	@Title nvarchar(200), 
	@Description ntext, 
    @AudioFile nvarchar(200), 
	@AudioPath nvarchar(200), 
	@Duration nchar(10), 
	@CreatedDate datetime, 
	@Views int 
AS

UPDATE {databaseOwner}{objectQualifier}CP_Product_Audio SET
	[ProductId] = @ProductId,
	[Title] = @Title,
	[Description] = @Description,
    [AudioFile]=@AudioFile, 
	[AudioPath] = @AudioPath,
	[Duration] = @Duration,
	[CreatedDate] = @CreatedDate,
	[Views] = @Views
WHERE
	[Id] = @Id

' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Attachment_GetByProduct]    ScriptDate: 08/15/2010 21:56:57 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Attachment_GetByProduct]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Attachment_GetByProduct]
	@ProductId int
AS

SELECT *
FROM {databaseOwner}{objectQualifier}CP_Product_Attachment
WHERE
	[ProductId]=@ProductId
' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Attachment_Add]    ScriptDate: 08/15/2010 21:56:57 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Attachment_Add]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Attachment_Add]
	@ProductId int,
	@FileName nvarchar(250),
	@FilePath nvarchar(500)
AS

INSERT INTO {databaseOwner}{objectQualifier}CP_Product_Attachment (
	[ProductId],
	[FileName],
	[FilePath]
) VALUES (
	@ProductId,
	@FileName,
	@FilePath
)

select SCOPE_IDENTITY()
' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Attachment_Get]    ScriptDate: 08/15/2010 21:56:57 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Attachment_Get]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Attachment_Get]
	@Id int
	
AS

SELECT *
FROM {databaseOwner}{objectQualifier}CP_Product_Attachment
WHERE
	[Id] = @Id
	
' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Attachment_Update]    ScriptDate: 08/15/2010 21:56:57 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Attachment_Update]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Attachment_Update]
	@Id int, 
	@ProductId int, 
	@FileName nvarchar(250), 
	@FilePath nvarchar(500) 
AS

UPDATE {databaseOwner}{objectQualifier}CP_Product_Attachment SET
	[ProductId] = @ProductId,
	[FileName] = @FileName,
	[FilePath] = @FilePath
WHERE
	[Id] = @Id
' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Attachment_Delete]    ScriptDate: 08/15/2010 21:56:57 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Attachment_Delete]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Attachment_Delete]
	@Id int
AS

DELETE FROM {databaseOwner}{objectQualifier}CP_Product_Attachment
WHERE
	[Id] = @Id
' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Attachment_DeleteByProduct]    ScriptDate: 08/15/2010 21:56:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Attachment_DeleteByProduct]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'

create PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Attachment_DeleteByProduct]
	@ProductId int
AS

DELETE FROM {databaseOwner}{objectQualifier}CP_Product_Attachment
WHERE
	[ProductId] = @ProductId

' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Image_Add]    ScriptDate: 08/15/2010 21:56:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Image_Add]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'



CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Image_Add]
	@ProductId int,
	@Title nvarchar(200),
	@Description ntext,
	@Thumbnail nvarchar(200),
    @ImageFile nvarchar(200),
	@ImagePath nvarchar(200),
	@CreatedDate datetime,
	@Views int
AS

INSERT INTO {databaseOwner}{objectQualifier}CP_Product_Image (
	[ProductId],
	[Title],
	[Description],
	[Thumbnail],
    [ImageFile],
	[ImagePath],
	[CreatedDate],
	[Views]
) VALUES (
	@ProductId,
	@Title,
	@Description,
	@Thumbnail,
    @ImageFile,
	@ImagePath,
	getdate(),
	@Views
)

select SCOPE_IDENTITY()



' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Image_Update]    ScriptDate: 08/15/2010 21:56:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Image_Update]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'

CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Image_Update]
	@Id int, 
	@ProductId int, 
	@Title nvarchar(200), 
	@Description ntext, 
	@Thumbnail nvarchar(200), 
    @ImageFile nvarchar(200), 
	@ImagePath nvarchar(200), 
	@CreatedDate datetime, 
	@Views int 
AS

UPDATE {databaseOwner}{objectQualifier}CP_Product_Image SET
	[ProductId] = @ProductId,
	[Title] = @Title,
	[Description] = @Description,
	[Thumbnail] = @Thumbnail,
    [ImageFile]=@ImageFile,
	[ImagePath] = @ImagePath,
	[CreatedDate] = @CreatedDate,
	[Views] = @Views
WHERE
	[Id] = @Id

' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_UDField_FillDefaultData]    ScriptDate: 08/15/2010 21:56:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_UDField_FillDefaultData]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'



    CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_UDField_FillDefaultData]
    @TypeId         INT,
    @FieldId          INT, /* can be null for any field */
    @DefaultValue	  nvarchar(2000), /*can be Null to copy default expression (no evaluation!) */
    @OriginalDefaultValue nvarchar(2000) /*original default value */
    AS
    IF @DefaultValue is not Null and @DefaultValue<>''''
      begin
       /*find out rows which not have field and productid yet */
       Insert into {databaseOwner}{objectQualifier}CP_Product_UDData(FieldId,ProductId,FieldValue)
       select @FieldId,a.Id,@DefaultValue
       from {databaseOwner}{objectQualifier}CP_Product_Product a
       where (a.TypeId=@TypeId) and
             (a.Id not in ( SELECT DISTINCT ProductId from {databaseOwner}{objectQualifier}CP_Product_UDData where {databaseOwner}{objectQualifier}CP_Product_UDData.FieldId=@FieldId))
    
     IF @OriginalDefaultValue is not Null and @OriginalDefaultValue<>''''
      begin
       /*find out rows which have previous default value specified */
       Update {databaseOwner}{objectQualifier}CP_Product_UDData
       set FieldValue=@DefaultValue
       where FieldId=@FieldId
       and   Cast(FieldValue as nvarchar)=@OriginalDefaultValue
     end
  end

' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_UDData_Update]    ScriptDate: 08/15/2010 21:56:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_UDData_Update]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'


CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_UDData_Update]
	@FieldId int, 
	@ProductId int, 
	@FieldValue ntext 
AS
Declare @RecordCount int

Select @RecordCount=count(Id) 
from {databaseOwner}{objectQualifier}CP_Product_UDData
where FieldId=@FieldId and
      ProductId=@ProductId

if (@RecordCount>0) 
    begin
    UPDATE {databaseOwner}{objectQualifier}CP_Product_UDData 
    SET [FieldValue] = @FieldValue
    WHERE FieldId=@FieldId and
          ProductId=@ProductId
    end
else
   begin
     INSERT INTO {databaseOwner}{objectQualifier}CP_Product_UDData (
	        [FieldId],
	        [ProductId],
	        [FieldValue]
            ) VALUES (
	        @FieldId,
	        @ProductId,
	        @FieldValue
            )
    end
	


' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_UDData_GetByFieldAndProduct]    ScriptDate: 08/15/2010 21:56:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_UDData_GetByFieldAndProduct]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'

Create PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_UDData_GetByFieldAndProduct]
	@FieldId int,
    @ProductId int
	
AS
set rowcount 1
SELECT *
FROM {databaseOwner}{objectQualifier}CP_Product_UDData
WHERE
	[FieldId] = @FieldId and
    [ProductId]=@ProductId
	


' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_UDData_GetByProduct]    ScriptDate: 08/15/2010 21:56:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_UDData_GetByProduct]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'

create PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_UDData_GetByProduct]
	@ProductId int
AS

SELECT *
FROM {databaseOwner}{objectQualifier}CP_Product_UDData
WHERE
	[ProductId]=@ProductId


' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_UDData_Copy]    ScriptDate: 08/15/2010 21:56:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_UDData_Copy]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'



create PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_UDData_Copy]
	@OriginalProductId int, 
	@newProductId int
AS
     INSERT INTO {databaseOwner}{objectQualifier}CP_Product_UDData (
	        [FieldId],
	        [ProductId],
	        [FieldValue]
            ) 
     select FieldId,@newProductId,FieldValue
     from {databaseOwner}{objectQualifier}CP_Product_UDData
     where ProductId=@OriginalProductId
   




' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_UDData_Delete]    ScriptDate: 08/15/2010 21:56:58 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_UDData_Delete]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_UDData_Delete]
	@Id int
AS

DELETE FROM {databaseOwner}{objectQualifier}CP_Product_UDData
WHERE
	[Id] = @Id

' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_UDData_Get]    ScriptDate: 08/15/2010 21:56:58 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_UDData_Get]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_UDData_Get]
	@Id int
	
AS

SELECT *
FROM {databaseOwner}{objectQualifier}CP_Product_UDData
WHERE
	[Id] = @Id
	

' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Watch_Delete]    ScriptDate: 08/15/2010 21:56:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Watch_Delete]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'

CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Watch_Delete]
	@Id int
AS

DELETE FROM {databaseOwner}{objectQualifier}CP_Product_Watch
WHERE
	[Id] = @Id

' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Watch_Get]    ScriptDate: 08/15/2010 21:56:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Watch_Get]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'

CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Watch_Get]
	@Id int
	
AS

SELECT *
FROM {databaseOwner}{objectQualifier}CP_Product_Watch
WHERE
	[Id] = @Id
	

' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Watch_GetByUser]    ScriptDate: 08/15/2010 21:56:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Watch_GetByUser]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'



CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Watch_GetByUser]
	@UserId int
AS

SELECT *
FROM {databaseOwner}{objectQualifier}CP_Product_Watch
WHERE
	[UserId]=@UserId
order by id desc


' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Watch_Add]    ScriptDate: 08/15/2010 21:56:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Watch_Add]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'


CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Watch_Add]
	@ProductId int,
	@UserId int,
	@PortalId int,
	@ProductName nvarchar(200),
	@CreatedDate datetime
AS

INSERT INTO {databaseOwner}{objectQualifier}CP_Product_Watch (
	[ProductId],
	[UserId],
	[PortalId],
	[ProductName],
	[CreatedDate]
) VALUES (
	@ProductId,
	@UserId,
	@PortalId,
	@ProductName,
	Getdate()
)

select SCOPE_IDENTITY()


' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Category_GetByType]    ScriptDate: 08/15/2010 21:56:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Category_GetByType]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
/****** Object:  StoredProcedure {databaseOwner}{objectQualifier}CP_Product_Category_ListByType    ScriptDate: 10/18/2007 01:57:03 ******/


CREATE     PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Category_GetByType]
	@TypeId int
      as
SELECT
	a.*,
    ''ProductCounts''=
       (Select count(b.ProductId)   from 
        {databaseOwner}{objectQualifier}CP_Product_ProductToCategory b,{databaseOwner}{objectQualifier}CP_Product_Product c 
        where b.CategoryId=a.Id and b.ProductId=c.Id and c.Active=1)
FROM {databaseOwner}{objectQualifier}CP_Product_Category a
WHERE
	[TypeId]=@TypeId
   ORDER BY	[Level] ASC,
			[ParentId] ASC,
			[Order] ASC




' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Category_GetByPortals]    ScriptDate: 08/15/2010 21:56:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Category_GetByPortals]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
/****** Object:  StoredProcedure {databaseOwner}{objectQualifier}CP_Product_Category_ListByPortal    ScriptDate: 10/18/2007 01:57:03 ******/


CREATE     PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Category_GetByPortals]
	@PortalId int
      as
SELECT
	a.*,
    ''ProductCounts''=
       (Select count(b.ProductId)   from 
        {databaseOwner}{objectQualifier}CP_Product_ProductToCategory b,{databaseOwner}{objectQualifier}CP_Product_Product c 
        where b.CategoryId=a.Id and b.ProductId=c.Id and c.Active=1)
FROM {databaseOwner}{objectQualifier}CP_Product_Category a
WHERE
	[PortalId]=@PortalId
   ORDER BY	[Level] ASC,
			[ParentId] ASC,
			[Order] ASC




' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Category_GetByParent]    ScriptDate: 08/15/2010 21:56:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Category_GetByParent]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
/****** Object:  StoredProcedure {databaseOwner}{objectQualifier}CP_Product_Category_ListByParentId    ScriptDate: 10/18/2007 01:57:03 ******/

CREATE     PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Category_GetByParent]
@TypeId int,
@ParentID int
	
AS


   SELECT 	a.*,
            ''ProductCounts''=(Select count(b.ProductId) from {databaseOwner}{objectQualifier}CP_Product_ProductToCategory b,{databaseOwner}{objectQualifier}CP_Product_Product c  
                 where b.CategoryId=a.Id and b.ProductId=c.Id and c.Active=1)

   FROM {databaseOwner}{objectQualifier}CP_Product_Category a

   WHERE (TypeId=@TypeId)
         and ([ParentId] = @ParentID) 
   ORDER BY	[Level] ASC,
			[ParentId] ASC,
			[Order] ASC
			
' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Category_GetByList]    ScriptDate: 08/15/2010 21:56:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Category_GetByList]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'

/****** Object:  StoredProcedure dbo.[CP_Product_Category_ListModuleCategories]    ScriptDate: 10/18/2007 01:57:13 ******/
CREATE      PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Category_GetByList]
   @Categories varchar(400)
AS
SELECT a.*,
        ''ProductCounts''=
       (Select count(b.ProductId)   from 
        {databaseOwner}{objectQualifier}CP_Product_ProductToCategory b,{databaseOwner}{objectQualifier}CP_Product_Product c 
        where b.CategoryId=a.Id and b.ProductId=c.Id and c.Active=1)
	
FROM {databaseOwner}{objectQualifier}CP_Product_Category a
WHERE a.Id IN (SELECT intValue FROM {databaseOwner}CP_CsvToInt(@Categories))








' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Category_Update]    ScriptDate: 08/15/2010 21:56:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Category_Update]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
/****** Object:  StoredProcedure {databaseOwner}{objectQualifier}CP_Product_Category_Update    ScriptDate: 10/18/2007 01:57:04 ******/


CREATE   PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Category_Update]
	@Id int, 
	@PortalId int, 
    @TypeId int,
	@ParentId int, 
	@Name nvarchar(100), 
    @Thumbnail nvarchar(100), 
	@Image nvarchar(50), 
	@Order int, 
	@Level int,
    @Description nvarchar(1000)
	
AS

UPDATE {databaseOwner}{objectQualifier}CP_Product_Category 
SET
	[PortalId] = @PortalId,
    [TypeId]=@TypeId,
	[ParentId] = @ParentId,
	[Name] = @Name,
    [Thumbnail]=@Thumbnail,
	[Image] = @Image,
	[Order] = @Order,
	[Level] = @Level,	
	[Description]=@Description
WHERE
	[Id] = @Id



' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Category_UpdateLevel]    ScriptDate: 08/15/2010 21:56:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Category_UpdateLevel]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'/****** Object:  StoredProcedure {databaseOwner}{objectQualifier}CP_Product_Category_UpdateLevel    ScriptDate: 10/18/2007 01:57:04 ******/

create  PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Category_UpdateLevel]

@Id int,
@Level int

AS

UPDATE {databaseOwner}{objectQualifier}CP_Product_Category

SET 
		[Level] = @Level

WHERE 	[id] = @Id





' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Category_UpdateOrder]    ScriptDate: 08/15/2010 21:56:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Category_UpdateOrder]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'


/****** Object:  StoredProcedure {databaseOwner}{objectQualifier}CP_Product_Category_UpdateOrder    ScriptDate: 10/18/2007 01:57:04 ******/

Create  PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Category_UpdateOrder]

@Id int,
@Order int

AS

UPDATE {databaseOwner}{objectQualifier}CP_Product_Category

SET 
		[Order] = @Order

WHERE 	[id] = @Id







' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Category_Delete]    ScriptDate: 08/15/2010 21:56:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Category_Delete]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'/****** Object:  StoredProcedure {databaseOwner}{objectQualifier}CP_Product_Category_Delete    ScriptDate: 10/18/2007 01:57:02 ******/


CREATE    PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Category_Delete]
	@Id int
AS
DELETE FROM {databaseOwner}{objectQualifier}CP_Product_Category
WHERE
	[Id] = @Id

DELETE FROM {databaseOwner}{objectQualifier}CP_Product_ProductToCategory
WHERE
	[CategoryId] = @Id


' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Category_Get]    ScriptDate: 08/15/2010 21:56:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Category_Get]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
/****** Object:  StoredProcedure {databaseOwner}{objectQualifier}CP_Product_Category_Get    ScriptDate: 10/18/2007 01:57:02 ******/


CREATE    PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Category_Get]
	@Id int
	
AS
SELECT
	a.*,
    ''ProductCounts''=
       (Select count(b.ProductId)   from 
        {databaseOwner}{objectQualifier}CP_Product_ProductToCategory b,{databaseOwner}{objectQualifier}CP_Product_Product c 
        where b.CategoryId=a.Id and b.ProductId=c.Id and c.Active=1)
FROM {databaseOwner}{objectQualifier}CP_Product_Category a
WHERE
	[Id] = @Id
	








' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Category_Add]    ScriptDate: 08/15/2010 21:56:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Category_Add]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
/****** Object:  StoredProcedure {databaseOwner}{objectQualifier}CP_Product_Category_Add    ScriptDate: 10/18/2007 01:57:02 ******/


CREATE       PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Category_Add]
	@PortalId int,
    @TypeId int,
	@ParentId int,
	@Name nvarchar(100),
    @Thumbnail nvarchar(100), 
	@Image nvarchar(50),
	@Order int,
	@Level int,
    @Description nvarchar(1000)
AS

INSERT INTO {databaseOwner}{objectQualifier}CP_Product_Category (
	[PortalId],
    [TypeId],
	[ParentId],
	[Name],
    [Thumbnail],
	[Image],
	[Order],
	[Level],
    [Description]	
) VALUES (
	@PortalId,
    @TypeId,
	@ParentId,
	@Name,
    @Thumbnail, 
	@Image,
	@Order,
	@Level,
    @Description
)

select SCOPE_IDENTITY()












' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Type_Update]    ScriptDate: 08/15/2010 21:56:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Type_Update]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'


CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Type_Update]
	@Id int, 
	@PortalId int, 
	@ParentId int, 
	@Name nvarchar(80), 
	@Thumbnail nvarchar(200), 
	@Image nvarchar(200), 
	@TypePath nvarchar(255), 
	@ListPage int, 
	@DetailPage int, 
	@SellType int, 
	@Sellable bit, 
	@Order int, 
	@Level int, 
	@Description nvarchar(1000), 
	@EnableTax bit, 
	@TaxRate decimal(10, 2), 
	@TaxDescription nvarchar(1000),
    @ChargePercent decimal(10, 2)
AS

UPDATE {databaseOwner}{objectQualifier}CP_Product_Type SET
	[PortalId] = @PortalId,
	[ParentId] = @ParentId,
	[Name] = @Name,
	[Thumbnail] = @Thumbnail,
	[Image] = @Image,
	[TypePath] = @TypePath,
	[ListPage] = @ListPage,
	[DetailPage] = @DetailPage,
	[SellType] = @SellType,
	[Sellable] = @Sellable,
	[Order] = @Order,
	[Level] = @Level,
	[Description] = @Description,
	[EnableTax] = @EnableTax,
	[TaxRate] = @TaxRate,
	[TaxDescription] = @TaxDescription,
    [ChargePercent]=@ChargePercent
WHERE
	[Id] = @Id


' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Type_Get]    ScriptDate: 08/15/2010 21:56:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Type_Get]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'

CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Type_Get]
	@Id int
	
AS

SELECT a.*,
        ''ProductCounts''=
       (Select count(b.Id)   from 
        {databaseOwner}{objectQualifier}CP_Product_Product b where b.TypeId=a.Id and b.Active=1)
FROM {databaseOwner}{objectQualifier}CP_Product_Type a
WHERE
	[Id] = @Id
	

' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Type_GetByPortals]    ScriptDate: 08/15/2010 21:56:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Type_GetByPortals]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'



CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Type_GetByPortals]
	@PortalId int
AS

SELECT a.*,
        ''ProductCounts''=
       (Select count(b.Id)   from 
        {databaseOwner}{objectQualifier}CP_Product_Product b where b.TypeId=a.Id and b.Active=1)
FROM {databaseOwner}{objectQualifier}CP_Product_Type a
WHERE [PortalId]=@PortalId
order by [Order]



' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Type_Add]    ScriptDate: 08/15/2010 21:56:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Type_Add]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'


CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Type_Add]
	@PortalId int,
	@ParentId int,
	@Name nvarchar(80),
	@Thumbnail nvarchar(200),
	@Image nvarchar(200),
	@TypePath nvarchar(255),
	@ListPage int,
	@DetailPage int,
	@SellType int,
	@Sellable bit,
	@Order int,
	@Level int,
	@Description nvarchar(1000),
	@EnableTax bit,
	@TaxRate decimal(10, 2),
	@TaxDescription nvarchar(1000),
    @ChargePercent decimal(10, 2)
AS

INSERT INTO {databaseOwner}{objectQualifier}CP_Product_Type (
	[PortalId],
	[ParentId],
	[Name],
	[Thumbnail],
	[Image],
	[TypePath],
	[ListPage],
	[DetailPage],
	[SellType],
	[Sellable],
	[Order],
	[Level],
	[Description],
	[EnableTax],
	[TaxRate],
	[TaxDescription],
    [ChargePercent]
) VALUES (
	@PortalId,
	@ParentId,
	@Name,
	@Thumbnail,
	@Image,
	@TypePath,
	@ListPage,
	@DetailPage,
	@SellType,
	@Sellable,
	@Order,
	@Level,
	@Description,
	@EnableTax,
	@TaxRate,
	@TaxDescription,
    @ChargePercent
)

select SCOPE_IDENTITY()


' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Type_GetByList]    ScriptDate: 08/15/2010 21:56:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Type_GetByList]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'

/****** Object:  StoredProcedure dbo.[CP_Product_Type_GetByList]    ScriptDate: 10/18/2007 01:57:13 ******/
Create      PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Type_GetByList]
   @TypeList varchar(400)
AS
SELECT a.*,
        ''ProductCounts''=
       (Select count(b.Id)   from 
        {databaseOwner}{objectQualifier}CP_Product_Product b
        where b.TypeId=a.Id and b.Active=1)
FROM {databaseOwner}{objectQualifier}CP_Product_Type a
WHERE a.Id IN (SELECT intValue FROM {databaseOwner}CP_CsvToInt(@TypeList))








' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Ticket_Update]    ScriptDate: 08/15/2010 21:56:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Ticket_Update]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'

CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Ticket_Update]
	@Id int, 
	@ProductId int, 
	@VendorId int, 
	@VendorName nvarchar(50), 
	@PortalId int, 
	@ProductName nvarchar(200), 
	@ClientId int, 
	@ClientName nvarchar(50), 
	@TicketNo nvarchar(100), 
	@OptionId int, 
	@OptionName nvarchar(200), 
	@CreatedDate datetime, 
	@UpdatedDate datetime, 
	@Title nvarchar(1000), 
	@Closed bit 
AS

UPDATE {databaseOwner}{objectQualifier}CP_Product_Ticket SET
	[ProductId] = @ProductId,
	[VendorId] = @VendorId,
	[VendorName] = @VendorName,
	[PortalId] = @PortalId,
	[ProductName] = @ProductName,
	[ClientId] = @ClientId,
	[ClientName] = @ClientName,
	[TicketNo] = @TicketNo,
	[OptionId] = @OptionId,
	[OptionName] = @OptionName,
	[CreatedDate] = @CreatedDate,
	[UpdatedDate] = GetDate(),
	[Title] = @Title,
	[Closed] = @Closed
WHERE
	[Id] = @Id

' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Ticket_Get]    ScriptDate: 08/15/2010 21:57:00 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Ticket_Get]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Ticket_Get]
	@Id int
	
AS

SELECT *
FROM {databaseOwner}{objectQualifier}CP_Product_Ticket
WHERE
	[Id] = @Id
	
' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Ticket_Delete]    ScriptDate: 08/15/2010 21:57:00 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Ticket_Delete]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Ticket_Delete]
	@Id int
AS

DELETE FROM {databaseOwner}{objectQualifier}CP_Product_Ticket
WHERE
	[Id] = @Id
' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Ticket_Add]    ScriptDate: 08/15/2010 21:57:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Ticket_Add]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'

CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Ticket_Add]
	@ProductId int,
	@VendorId int,
	@VendorName nvarchar(50),
	@PortalId int,
	@ProductName nvarchar(200),
	@ClientId int,
	@ClientName nvarchar(50),
	@TicketNo nvarchar(100),
	@OptionId int,
	@OptionName nvarchar(200),
	@CreatedDate datetime,
	@UpdatedDate datetime,
	@Title nvarchar(1000),
	@Closed bit
AS

INSERT INTO {databaseOwner}{objectQualifier}CP_Product_Ticket (
	[ProductId],
	[VendorId],
	[VendorName],
	[PortalId],
	[ProductName],
	[ClientId],
	[ClientName],
	[TicketNo],
	[OptionId],
	[OptionName],
	[CreatedDate],
	[UpdatedDate],
	[Title],
	[Closed]
) VALUES (
	@ProductId,
	@VendorId,
	@VendorName,
	@PortalId,
	@ProductName,
	@ClientId,
	@ClientName,
	@TicketNo,
	@OptionId,
	@OptionName,
	GetDate(),
	GetDate(),
	@Title,
	@Closed
)

select SCOPE_IDENTITY()

' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Common_Dictionary_GetByKey]    ScriptDate: 08/15/2010 21:57:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Common_Dictionary_GetByKey]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'



CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Common_Dictionary_GetByKey]
	@PortalId int,
    @ItemKey nvarchar(100)
AS

SELECT *
FROM {databaseOwner}{objectQualifier}CP_Common_Dictionary
WHERE
	([PortalId]=@PortalId) and
    (ItemKey=@ItemKey)
    order by [order] asc,[value] asc



' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Common_Dictionary_Delete]    ScriptDate: 08/15/2010 21:57:00 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Common_Dictionary_Delete]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Common_Dictionary_Delete]
	@Id int
AS

DELETE FROM {databaseOwner}{objectQualifier}CP_Common_Dictionary
WHERE
	[Id] = @Id
' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Common_Dictionary_Update]    ScriptDate: 08/15/2010 21:57:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Common_Dictionary_Update]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'

CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Common_Dictionary_Update]
	@Id int, 
	@PortalId int, 
	@ItemKey nvarchar(100), 
	@Value nvarchar(1000), 
	@Order int 
AS

UPDATE {databaseOwner}{objectQualifier}CP_Common_Dictionary SET
	[PortalId] = @PortalId,
	[ItemKey] = @ItemKey,
	[Value] = @Value,
	[Order] = @Order
WHERE
	[Id] = @Id

' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Common_Dictionary_GetByPortals]    ScriptDate: 08/15/2010 21:57:00 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Common_Dictionary_GetByPortals]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Common_Dictionary_GetByPortals]
	@PortalId int
AS

SELECT *
FROM {databaseOwner}{objectQualifier}CP_Common_Dictionary
WHERE
	[PortalId]=@PortalId
' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Common_Dictionary_Add]    ScriptDate: 08/15/2010 21:57:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Common_Dictionary_Add]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'

CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Common_Dictionary_Add]
	@PortalId int,
	@ItemKey nvarchar(100),
	@Value nvarchar(1000),
	@Order int
AS

INSERT INTO {databaseOwner}{objectQualifier}CP_Common_Dictionary (
	[PortalId],
	[ItemKey],
	[Value],
	[Order]
) VALUES (
	@PortalId,
	@ItemKey,
	@Value,
	@Order
)

select SCOPE_IDENTITY()

' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Common_Dictionary_Get]    ScriptDate: 08/15/2010 21:57:00 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Common_Dictionary_Get]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Common_Dictionary_Get]
	@Id int
	
AS

SELECT *
FROM {databaseOwner}{objectQualifier}CP_Common_Dictionary
WHERE
	[Id] = @Id
	
' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Cart_RestorePrice]    ScriptDate: 08/15/2010 21:57:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Cart_RestorePrice]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'

CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Cart_RestorePrice]
	@ClientId int,
    @VendorId int
AS
Update {databaseOwner}{objectQualifier}CP_Product_Cart
set ItemSum= UnitPrice * Quantity + TaxFee + ShipFee
WHERE ([ClientId]=@ClientId)
and ([VendorId]=@VendorId)






' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Cart_GetByClient]    ScriptDate: 08/15/2010 21:57:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Cart_GetByClient]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'



CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Cart_GetByClient]
	@ClientId int
AS

SELECT *
FROM {databaseOwner}{objectQualifier}CP_Product_Cart
WHERE [ClientId]=@ClientId
order by id desc



' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Cart_Add]    ScriptDate: 08/15/2010 21:57:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Cart_Add]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'





CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Cart_Add]
	@ProductId int,
	@ProductName nvarchar(200),
	@ClientId int,
	@ClientName nvarchar(50),
	@VendorId int,
	@VendorName nvarchar(50),
	@OptionId int,
	@OptionName nvarchar(200),
	@Quantity int,
	@UnitPrice decimal(18, 2),
	@TaxFee decimal(18, 2),
    @ShipId int,
	@ShipName nvarchar(200),
	@ShipFee decimal(18, 2),
	@CreatedDate datetime,
	@ItemSum decimal(18, 2),
    @DiscountRequest nvarchar(1000),
    @DiscountResponse nvarchar(1000)
AS

INSERT INTO {databaseOwner}{objectQualifier}CP_Product_Cart (
	[ProductId],
	[ProductName],
	[ClientId],
	[ClientName],
	[VendorId],
	[VendorName],
	[OptionId],
	[OptionName],
	[Quantity],
	[UnitPrice],
	[TaxFee],
    [ShipId],
	[ShipName],
	[ShipFee],
	[CreatedDate],
	[ItemSum],
    [DiscountRequest],
    [DiscountResponse]
) VALUES (
	@ProductId,
	@ProductName,
	@ClientId,
	@ClientName,
	@VendorId,
	@VendorName,
	@OptionId,
	@OptionName,
	@Quantity,
	@UnitPrice,
	@TaxFee,
    @ShipId,
	@ShipName,
	@ShipFee,
	GetDate(),
	@ItemSum,
    @DiscountRequest,
    @DiscountResponse
)

select SCOPE_IDENTITY()





' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Cart_Update]    ScriptDate: 08/15/2010 21:57:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Cart_Update]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'




CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Cart_Update]
	@Id int, 
	@ProductId int, 
	@ProductName nvarchar(200), 
	@ClientId int, 
	@ClientName nvarchar(50), 
	@VendorId int, 
	@VendorName nvarchar(50), 
	@OptionId int, 
	@OptionName nvarchar(200), 
	@Quantity int, 
	@UnitPrice decimal(18, 2), 
	@TaxFee decimal(18, 2), 
    @ShipId int,
	@ShipName nvarchar(200), 
	@ShipFee decimal(18, 2), 
	@CreatedDate datetime, 
	@ItemSum decimal(18, 2),
    @DiscountRequest nvarchar(1000),
    @DiscountResponse nvarchar(1000) 
AS

UPDATE {databaseOwner}{objectQualifier}CP_Product_Cart SET
	[ProductId] = @ProductId,
	[ProductName] = @ProductName,
	[ClientId] = @ClientId,
	[ClientName] = @ClientName,
	[VendorId] = @VendorId,
	[VendorName] = @VendorName,
	[OptionId] = @OptionId,
	[OptionName] = @OptionName,
	[Quantity] = @Quantity,
	[UnitPrice] = @UnitPrice,
	[TaxFee] = @TaxFee,
    [ShipId]=@ShipId,
	[ShipName] = @ShipName,
	[ShipFee] = @ShipFee,
	[CreatedDate] = @CreatedDate,
	[ItemSum] = @ItemSum,
    [DiscountRequest]=@DiscountRequest,
    [DiscountResponse]= @DiscountResponse
WHERE
	[Id] = @Id




' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Cart_List]    ScriptDate: 08/15/2010 21:57:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Cart_List]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'




Create PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Cart_List]
	@VendorId int
AS
SELECT *
FROM {databaseOwner}{objectQualifier}CP_Product_Cart
WHERE (@VendorId =-1 or [VendorId]=@VendorId)
order by id desc




' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Cart_DeleteByClient]    ScriptDate: 08/15/2010 21:57:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Cart_DeleteByClient]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'




Create PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Cart_DeleteByClient]
	@ClientId int
AS
Delete FROM {databaseOwner}{objectQualifier}CP_Product_Cart
WHERE [ClientId]=@ClientId





' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Order_Add]    ScriptDate: 08/15/2010 21:57:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Order_Add]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'



CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Order_Add]
	@UserId int,
	@PortalId int,
	@UserName nvarchar(50),
	@OrderNo nvarchar(100),
	@OrderDate datetime,
	@B_FirstName nvarchar(50),
	@B_LastName nvarchar(50),
	@B_Address1 nvarchar(200),
	@B_Address2 nvarchar(200),
	@B_City nvarchar(200),
	@B_RegionCode nvarchar(200),
	@B_CountryCode nvarchar(200),
	@B_PostalCode nvarchar(50),
	@B_Phone1 nvarchar(20),
	@B_Phone2 nvarchar(20),
	@S_FirstName nvarchar(50),
	@S_LastName nvarchar(50),
	@S_Address1 nvarchar(200),
	@S_Address2 nvarchar(200),
	@S_City nvarchar(200),
	@S_RegionCode nvarchar(200),
	@S_CountryCode nvarchar(200),
	@S_PostalCode nvarchar(50),
	@S_Phone1 nvarchar(20),
	@S_Phone2 nvarchar(20),
	@ItemSummary decimal(18, 2),
	@OrderIsPlaced bit,
	@OrderStatus int,
    @NeedAddress bit,
    @ShipSameAsBill bit
AS

INSERT INTO {databaseOwner}{objectQualifier}CP_Product_Order (
	[UserId],
	[PortalId],
	[UserName],
	[OrderNo],
	[OrderDate],
	[B_FirstName],
	[B_LastName],
	[B_Address1],
	[B_Address2],
	[B_City],
	[B_RegionCode],
	[B_CountryCode],
	[B_PostalCode],
	[B_Phone1],
	[B_Phone2],
	[S_FirstName],
	[S_LastName],
	[S_Address1],
	[S_Address2],
	[S_City],
	[S_RegionCode],
	[S_CountryCode],
	[S_PostalCode],
	[S_Phone1],
	[S_Phone2],
	[ItemSummary],
	[OrderIsPlaced],
	[OrderStatus],
    [NeedAddress],
    [ShipSameAsBill]
) VALUES (
	@UserId,
	@PortalId,
	@UserName,
	@OrderNo,
	GetDate(),
	@B_FirstName,
	@B_LastName,
	@B_Address1,
	@B_Address2,
	@B_City,
	@B_RegionCode,
	@B_CountryCode,
	@B_PostalCode,
	@B_Phone1,
	@B_Phone2,
	@S_FirstName,
	@S_LastName,
	@S_Address1,
	@S_Address2,
	@S_City,
	@S_RegionCode,
	@S_CountryCode,
	@S_PostalCode,
	@S_Phone1,
	@S_Phone2,
	@ItemSummary,
	@OrderIsPlaced,
	@OrderStatus,
    @NeedAddress,
    @ShipSameAsBill
)

select SCOPE_IDENTITY()



' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Order_Update]    ScriptDate: 08/15/2010 21:57:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Order_Update]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'


CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Order_Update]
	@Id int, 
	@UserId int, 
	@PortalId int, 
	@UserName nvarchar(50), 
	@OrderNo nvarchar(100), 
	@OrderDate datetime, 
	@B_FirstName nvarchar(50), 
	@B_LastName nvarchar(50), 
	@B_Address1 nvarchar(200), 
	@B_Address2 nvarchar(200), 
	@B_City nvarchar(200), 
	@B_RegionCode nvarchar(200), 
	@B_CountryCode nvarchar(200), 
	@B_PostalCode nvarchar(50), 
	@B_Phone1 nvarchar(20), 
	@B_Phone2 nvarchar(20), 
	@S_FirstName nvarchar(50), 
	@S_LastName nvarchar(50), 
	@S_Address1 nvarchar(200), 
	@S_Address2 nvarchar(200), 
	@S_City nvarchar(200), 
	@S_RegionCode nvarchar(200), 
	@S_CountryCode nvarchar(200), 
	@S_PostalCode nvarchar(50), 
	@S_Phone1 nvarchar(20), 
	@S_Phone2 nvarchar(20), 
	@ItemSummary decimal(18, 2), 
	@OrderIsPlaced bit, 
	@OrderStatus int,
    @NeedAddress bit,
    @ShipSameAsBill bit
AS

UPDATE {databaseOwner}{objectQualifier}CP_Product_Order SET
	[UserId] = @UserId,
	[PortalId] = @PortalId,
	[UserName] = @UserName,
	[OrderNo] = @OrderNo,
	[OrderDate] = @OrderDate,
	[B_FirstName] = @B_FirstName,
	[B_LastName] = @B_LastName,
	[B_Address1] = @B_Address1,
	[B_Address2] = @B_Address2,
	[B_City] = @B_City,
	[B_RegionCode] = @B_RegionCode,
	[B_CountryCode] = @B_CountryCode,
	[B_PostalCode] = @B_PostalCode,
	[B_Phone1] = @B_Phone1,
	[B_Phone2] = @B_Phone2,
	[S_FirstName] = @S_FirstName,
	[S_LastName] = @S_LastName,
	[S_Address1] = @S_Address1,
	[S_Address2] = @S_Address2,
	[S_City] = @S_City,
	[S_RegionCode] = @S_RegionCode,
	[S_CountryCode] = @S_CountryCode,
	[S_PostalCode] = @S_PostalCode,
	[S_Phone1] = @S_Phone1,
	[S_Phone2] = @S_Phone2,
	[ItemSummary] = @ItemSummary,
	[OrderIsPlaced] = @OrderIsPlaced,
	[OrderStatus] = @OrderStatus,
    [NeedAddress] = @NeedAddress,
    [ShipSameAsBill] = @ShipSameAsBill
WHERE
	[Id] = @Id


' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_TicketDetail_Get]    ScriptDate: 08/15/2010 21:57:01 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_TicketDetail_Get]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_TicketDetail_Get]
	@Id int
	
AS

SELECT *
FROM {databaseOwner}{objectQualifier}CP_Product_TicketDetail
WHERE
	[Id] = @Id
	
' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_TicketDetail_GetByTicket]    ScriptDate: 08/15/2010 21:57:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_TicketDetail_GetByTicket]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'


CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_TicketDetail_GetByTicket]
	@TicketId int
AS

SELECT *
FROM {databaseOwner}{objectQualifier}CP_Product_TicketDetail
WHERE
	[TicketId]=@TicketId
order by id asc


' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_TicketDetail_Add]    ScriptDate: 08/15/2010 21:57:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_TicketDetail_Add]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'

CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_TicketDetail_Add]
	@TicketId int,
	@UserId int,
	@UserName nvarchar(50),
	@CreatedDate datetime,
	@Title nvarchar(1000),
	@Description nvarchar(4000)
AS

INSERT INTO {databaseOwner}{objectQualifier}CP_Product_TicketDetail (
	[TicketId],
	[UserId],
	[UserName],
	[CreatedDate],
	[Title],
	[Description]
) VALUES (
	@TicketId,
	@UserId,
	@UserName,
	GetDate(),
	@Title,
	@Description
)

select SCOPE_IDENTITY()

' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_TicketDetail_Update]    ScriptDate: 08/15/2010 21:57:01 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_TicketDetail_Update]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_TicketDetail_Update]
	@Id int, 
	@TicketId int, 
	@UserId int, 
	@UserName nvarchar(50), 
	@CreatedDate datetime, 
	@Title nvarchar(1000), 
	@Description nvarchar(4000) 
AS

UPDATE {databaseOwner}{objectQualifier}CP_Product_TicketDetail SET
	[TicketId] = @TicketId,
	[UserId] = @UserId,
	[UserName] = @UserName,
	[CreatedDate] = @CreatedDate,
	[Title] = @Title,
	[Description] = @Description
WHERE
	[Id] = @Id
' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_TicketDetail_Delete]    ScriptDate: 08/15/2010 21:57:01 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_TicketDetail_Delete]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_TicketDetail_Delete]
	@Id int
AS

DELETE FROM {databaseOwner}{objectQualifier}CP_Product_TicketDetail
WHERE
	[Id] = @Id
' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Product_GetRelatedRows]    ScriptDate: 08/15/2010 21:57:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Product_GetRelatedRows]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'


/****** Object:  StoredProcedure dbo.[CP_Product_Product_ListRelatedRows]    ScriptDate: 10/18/2007 01:57:14 ******/
Create  PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Product_GetRelatedRows]
   @TypeId   int,
   @UserId     int,
   @Id         int,
   @RecordCount  int

 AS
    set rowcount @RecordCount
  
declare @categoryId int
set @categoryId=(SELECT top 1 CategoryId
from  {databaseOwner}{objectQualifier}CP_Product_ProductToCategory
where {databaseOwner}{objectQualifier}CP_Product_ProductToCategory.ProductId=@Id order by {databaseOwner}{objectQualifier}CP_Product_ProductToCategory.CategoryId desc)

    select 
        a.*,
        ''UserName''=
    (select UserName from {databaseOwner}{objectQualifier}Users where {databaseOwner}{objectQualifier}Users.UserId=a.UserId),
    ''RatingTotal''=
    (select sum(Rating) from {databaseOwner}{objectQualifier}CP_Product_Rating where {databaseOwner}{objectQualifier}CP_Product_Rating.ProductId=a.Id),
    ''RatingVotes''=
     (select count(Id) from {databaseOwner}{objectQualifier}CP_Product_Rating where {databaseOwner}{objectQualifier}CP_Product_Rating.ProductId=a.Id),
    ''Comments''=
     (select count(Id) from {databaseOwner}{objectQualifier}CP_Product_Comment where {databaseOwner}{objectQualifier}CP_Product_Comment.ProductId=a.Id and {databaseOwner}{objectQualifier}CP_Product_Comment.IsPrivate=0)
FROM {databaseOwner}{objectQualifier}CP_Product_Product a
    WHERE (a.TypeId = @TypeId)
    and(a.Authed=1)
    and (a.Active=1)
    and (a.Id in (
	SELECT DISTINCT ProductId FROM {databaseOwner}{objectQualifier}CP_Product_ProductToRole
	WHERE ({databaseOwner}{objectQualifier}CP_Product_ProductToRole.RoleId = -1 OR {databaseOwner}{objectQualifier}CP_Product_ProductToRole.RoleId IN (SELECT RoleId FROM {databaseOwner}{objectQualifier}UserRoles WHERE UserId = @UserId))
        ))--UserId
    and( a.Id <>@Id)
    and ( a.Id in (
	SELECT DISTINCT ProductId FROM {databaseOwner}{objectQualifier}CP_Product_ProductToCategory WHERE ({databaseOwner}{objectQualifier}CP_Product_ProductToCategory.CategoryId=@categoryId))
            )--by first category id
      ORDER BY 
	  CreatedDate desc 
       





' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_ProductToCategory_GetByProduct]    ScriptDate: 08/15/2010 21:57:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_ProductToCategory_GetByProduct]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'


create PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_ProductToCategory_GetByProduct]
	@ProductId int
AS

SELECT *
FROM {databaseOwner}{objectQualifier}CP_Product_ProductToCategory
WHERE
	[ProductId]=@ProductId



' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_ProductToRole_GetByProduct]    ScriptDate: 08/15/2010 21:57:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_ProductToRole_GetByProduct]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'



/****** Object:  StoredProcedure dbo.[CP_Product_Role_GetByProduct]    ScriptDate: 10/18/2007 01:57:15 ******/

Create PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_ProductToRole_GetByProduct]
	@ProductId int
AS

SELECT *
FROM {databaseOwner}{objectQualifier}CP_Product_ProductToRole
WHERE
	[ProductId]=@ProductId






' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Download_GetByProductAndOption]    ScriptDate: 08/15/2010 21:57:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Download_GetByProductAndOption]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'



CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Download_GetByProductAndOption]
	@ProductId int,
    @OptionId int
AS

SELECT a.*,
       ''OptionName''=''''
FROM {databaseOwner}{objectQualifier}CP_Product_Download a
where (a.[ProductId]=@ProductId)
and   (a.[OptionId]=@OptionId)



' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Download_Add]    ScriptDate: 08/15/2010 21:57:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Download_Add]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'

CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Download_Add]
	@ProductId int,
	@OptionId int,
	@FileName nvarchar(200),
	@ActualName nvarchar(300),
	@Size int,
	@CreatedDate datetime
AS

INSERT INTO {databaseOwner}{objectQualifier}CP_Product_Download (
	[ProductId],
	[OptionId],
	[FileName],
	[ActualName],
	[Size],
	[CreatedDate]
) VALUES (
	@ProductId,
	@OptionId,
	@FileName,
	@ActualName,
	@Size,
	GetDate()
)

select SCOPE_IDENTITY()

' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_OrderDetail_GetVendorSell]    ScriptDate: 08/15/2010 21:57:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_OrderDetail_GetVendorSell]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'


CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_OrderDetail_GetVendorSell]
	@TypeId int,
    @VendorId int,
    @StartDate datetime,
    @EndDate DateTime
AS
declare @ItemSum decimal(18,2)
select @ItemSum=0

SELECT @ItemSum=Sum([ItemSum])
FROM {databaseOwner}{objectQualifier}CP_Product_OrderDetail a,{databaseOwner}{objectQualifier}CP_Product_Product b
WHERE (a.[ProductId]=b.[Id])
and   (b.[TypeId] = @TypeId)
and   (a.[VendorId]=@VendorId)
and   (a.[CreatedDate] between @StartDate and DateAdd(d,1,@EndDate))

Select @ItemSum


' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Rating_Move]    ScriptDate: 08/15/2010 21:57:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Rating_Move]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'




Create PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Rating_Move]
	@OldProductId int, 
	@NewProductId int
AS

UPDATE {databaseOwner}{objectQualifier}CP_Product_Rating SET
	[ProductId] = @NewProductId
WHERE
	[ProductId] = @OldProductId




' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Rating_Update]    ScriptDate: 08/15/2010 21:57:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Rating_Update]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'



CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Rating_Update]
	@Id int, 
	@ProductId int,
    @ProductName nvarchar(200),
    @VendorId int,
    @VendorName nvarchar(50),
	@ClientId int,
	@ClientName nvarchar(100),
	@Rating int,
	@Info nvarchar(2000),
	@Reply nvarchar(2000),
	@UpdatedDate datetime,
	@Authed bit 
AS

UPDATE {databaseOwner}{objectQualifier}CP_Product_Rating SET
	[ProductId] = @ProductId,
    [ProductName]= @ProductName,
    [VendorId]=@VendorId,
    [VendorName]=@VendorName,
	[ClientId] = @ClientId,
	[ClientName] = @ClientName,
	[Rating] = @Rating,
	[Info] = @Info,
	[Reply] = @Reply,
	[UpdatedDate] = GetDate(),
	[Authed] = @Authed
WHERE
	[Id] = @Id



' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Rating_GetByClient]    ScriptDate: 08/15/2010 21:57:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Rating_GetByClient]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'




CREATE     PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Rating_GetByClient]
        @ClientId int,
        @ProductId int
AS
---Get needs rows
   SELECT a.*
    FROM  {databaseOwner}{objectQualifier}CP_Product_Rating a
    where (a.ClientId=@ClientId)
       and (@ProductId=-1 or a.[ProductId]=@ProductId)
    ORDER BY a.Id desc




' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Rating_Add]    ScriptDate: 08/15/2010 21:57:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Rating_Add]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'




CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Rating_Add]
	@ProductId int,
    @ProductName nvarchar(200),
    @VendorId int,
    @VendorName nvarchar(50),
	@ClientId int,
	@ClientName nvarchar(100),
	@Rating int,
	@Info nvarchar(2000),
	@Reply nvarchar(2000),
	@UpdatedDate datetime,
	@Authed bit
AS

INSERT INTO {databaseOwner}{objectQualifier}CP_Product_Rating (
	[ProductId],
    [ProductName],
    [VendorId],
    [VendorName],
	[ClientId],
	[ClientName],
	[Rating],
	[Info],
	[Reply],
	[UpdatedDate],
	[Authed]
) VALUES (
	@ProductId,
    @ProductName,
    @VendorId,
    @VendorName,
	@ClientId,
	@ClientName,
	@Rating,
	@Info,
	@Reply,
	GetDate(),
	@Authed
)

select SCOPE_IDENTITY()




' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Comment_Update]    ScriptDate: 08/15/2010 21:57:02 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Comment_Update]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Comment_Update]
	@Id int, 
	@PortalId int, 
	@ProductId int, 
	@ProductName nvarchar(200), 
	@UserId int, 
	@UserName nvarchar(50), 
	@CreatedDate datetime, 
	@Comment nvarchar(1000), 
	@Mail nvarchar(30), 
	@Url nvarchar(100), 
	@IsPrivate bit, 
	@Authed bit 
AS

UPDATE {databaseOwner}{objectQualifier}CP_Product_Comment SET
	[PortalId] = @PortalId,
	[ProductId] = @ProductId,
	[ProductName] = @ProductName,
	[UserId] = @UserId,
	[UserName] = @UserName,
	[CreatedDate] = @CreatedDate,
	[Comment] = @Comment,
	[Mail] = @Mail,
	[Url] = @Url,
	[IsPrivate] = @IsPrivate,
	[Authed] = @Authed
WHERE
	[Id] = @Id
' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Comment_Delete]    ScriptDate: 08/15/2010 21:57:02 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Comment_Delete]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Comment_Delete]
	@Id int
AS

DELETE FROM {databaseOwner}{objectQualifier}CP_Product_Comment
WHERE
	[Id] = @Id
' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Comment_Get]    ScriptDate: 08/15/2010 21:57:02 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Comment_Get]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Comment_Get]
	@Id int
	
AS

SELECT *
FROM {databaseOwner}{objectQualifier}CP_Product_Comment
WHERE
	[Id] = @Id
	
' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}CP_Product_Comment_Add]    ScriptDate: 08/15/2010 21:57:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CP_Product_Comment_Add]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'

CREATE PROCEDURE {databaseOwner}[{objectQualifier}CP_Product_Comment_Add]
	@PortalId int,
	@ProductId int,
	@ProductName nvarchar(200),
	@UserId int,
	@UserName nvarchar(50),
	@CreatedDate datetime,
	@Comment nvarchar(1000),
	@Mail nvarchar(30),
	@Url nvarchar(100),
	@IsPrivate bit,
	@Authed bit
AS

INSERT INTO {databaseOwner}{objectQualifier}CP_Product_Comment (
	[PortalId],
	[ProductId],
	[ProductName],
	[UserId],
	[UserName],
	[CreatedDate],
	[Comment],
	[Mail],
	[Url],
	[IsPrivate],
	[Authed]
) VALUES (
	@PortalId,
	@ProductId,
	@ProductName,
	@UserId,
	@UserName,
	GetDate(),
	@Comment,
	@Mail,
	@Url,
	@IsPrivate,
	@Authed
)

select SCOPE_IDENTITY()

' 
END

/******   end new procedures  ******/