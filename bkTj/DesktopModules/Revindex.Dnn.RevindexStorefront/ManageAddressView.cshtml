@using System.Collections.Specialized;
@using DotNetNuke.Entities.Users;
@using Revindex.Business.Revindex.Revindex.Storefront;
@using Revindex.Data.Dnn;
@using Revindex.Dnn.RevindexStorefront.Pages;
@using Revindex.Dnn;
@using Revindex.Web.Mvc.Dnn.Helpers;
@using Revindex.Web.UI.DynamicControls;
@inherits Revindex.Web.Mvc.Dnn.RazorPages.DotNetNukeRazorPage<ManageAddressViewModel>

<div class="rvd-module-container rvdsf rvdsf-manageaddress-container">
	@if (Model.Visible)
	{
		if (!String.IsNullOrEmpty((string)Model.TempData.Peek(Global.TempDataKeys.Alert)) && !Model.IsRedirecting)
		{
			<div class="alert alert-@(Model.TempData[Global.TempDataKeys.Alert])">@Model.TempData[Global.TempDataKeys.Message]</div>
		}
		if (Model.ListView)
		{
			<div class="rvdsf-list-container">
				<div class="row rvdsf-actionbar-container">
					<div class="col-sm-6">
					</div>
					<div class="col-sm-6 text-sm-right">
						<button type="button" id="rvdsfAddManageAddressButton" class="btn btn-primary" onclick="location.href = '@Global.RouteUrl(new NameValueCollection() { { Global.QueryStringKeys.UserAddressID, "0" }, { Global.QueryStringKeys.ReturnUrl, Request.RawUrl }})#@Dnn.Module.ModuleID'">@Html.LocalizeString("AddLink")</button>
					</div>
				</div>
				<hr />
				<div class="row">
					<div class="col-sm-12">
						<table class="table table-striped table-hover">
							<thead>
								<tr>
									<th>@Html.LocalizeString("AddressColumn")</th>
									<th class="hidden-xs d-none d-sm-table-cell">
										<a href="@Global.RouteUrl(new NameValueCollection() {
														{ Global.QueryStringKeys.ManageAddressPageViewIndex, "1" },
														{ Global.QueryStringKeys.ManageAddressSortDirection, Request.QueryString[Global.QueryStringKeys.ManageAddressSortDirection] == "0" ? "1" : "0" },
														{ Global.QueryStringKeys.ManageAddressSortExpression, "PrimaryBilling" }}, Request.QueryString)#@Dnn.Module.ModuleID">@Html.LocalizeString("PrimaryBillingColumn")</a>
													</th>
													<th class="hidden-xs d-none d-sm-table-cell">
														<a href="@Global.RouteUrl(new NameValueCollection() {
														{ Global.QueryStringKeys.ManageAddressPageViewIndex, "1" },
														{ Global.QueryStringKeys.ManageAddressSortDirection, Request.QueryString[Global.QueryStringKeys.ManageAddressSortDirection] == "0" ? "1" : "0" },
														{ Global.QueryStringKeys.ManageAddressSortExpression, "PrimaryShipping" }}, Request.QueryString)#@Dnn.Module.ModuleID">@Html.LocalizeString("PrimaryShippingColumn")</a>
													</th>
													<th></th>
												</tr>
											</thead>
											<tbody>
												@foreach (var ua in Model.PagedUserAddresses)
												{
													<tr onclick="location.href='@Global.RouteUrl(new NameValueCollection() {
										{ Global.QueryStringKeys.UserAddressID, ua.UserAddressID.ToString() },
										{ Global.QueryStringKeys.ReturnUrl, Request.RawUrl }}, false)'" style="cursor:pointer">
														<td>
															<a href="@Global.RouteUrl(new NameValueCollection() {
										{ Global.QueryStringKeys.UserAddressID, ua.UserAddressID.ToString() },
										{ Global.QueryStringKeys.ReturnUrl, Request.RawUrl }}, false)" onclick="event.stopPropagation()">
																@if (!String.IsNullOrEmpty(ua.Company))
																{<text>@ua.Company<br /></text>}
																@ua.FirstName @ua.LastName
															</a><br />
															@ua.Street<br />
															@if (!String.IsNullOrEmpty(ua.Unit)) 
															{ 
																<text>@ua.Unit</text><br />
															}
															@if (!String.IsNullOrEmpty(ua.District)) 
															{ 
																<text>@ua.District</text><br />
															}
															@ua.City @ua.SubdivisionName @ua.PostalCode<br />
															@ua.CountryName<br /><br />
															@ua.Phone<br />
															@ua.Email
														</td>
														<td class="hidden-xs d-none d-sm-table-cell"><input id="rvdsfPrimaryBillingCheckBox_@ua.UserAddressID" type="checkbox" @(ua.PrimaryBilling ? "checked" : "") onclick="event.stopPropagation();  @(ua.PrimaryBilling ? "return false;" : "Revindex.Web.FormPost(this, 'SetPrimaryBilling', false, { userAddressID: " + ua.UserAddressID.ToString() + "})")" /></td>
														<td class="hidden-xs d-none d-sm-table-cell"><input id="rvdsfPrimaryShippingCheckBox_@ua.UserAddressID" type="checkbox" @(ua.PrimaryShipping ? "checked" : "") onclick="event.stopPropagation(); @(ua.PrimaryShipping ? "return false;" : "Revindex.Web.FormPost(this, 'SetPrimaryShipping', false, { userAddressID: " + ua.UserAddressID.ToString() + "})")" /></td>
														<td><a id="rvdsfDeleteManageAddressLink_@ua.UserAddressID" href="#" onclick="event.stopPropagation(); if (confirm('@Html.LocalizeString(Global.LocalizedStrings.Message_ConfirmDelete, Global.FilePaths.LocalSharedResourceFile)')) { Revindex.Web.FormPost(this, 'Delete', false, { userAddressID: @ua.UserAddressID }) }; return false;"><em class="glyphicon glyphicon-remove fa fas fa-trash"></em></a></td>
													</tr>
												}
											</tbody>
										</table>
									</div>
								</div>
								<div class="row">
									<div class="col-sm-12">
										@if (Model.ManageAddressPageViewCount > 1)
										{
											<ul class="pagination pagination-sm">
												<li class="@(Model.ManageAddressPageViewIndex <= 1 ? "disabled" : "") page-item">
													<a class="page-link" href="@(Model.ManageAddressPageViewIndex <= 1 ? "" : Global.RouteUrl(new NameValueCollection() {
										{ Global.QueryStringKeys.ManageAddressPageViewIndex, (Model.ManageAddressPageViewIndex - 1).ToString() },
										{ Global.QueryStringKeys.ManageAddressSortDirection, Request.QueryString[Global.QueryStringKeys.ManageAddressSortDirection] },
										{ Global.QueryStringKeys.ManageAddressSortExpression, Request.QueryString[Global.QueryStringKeys.ManageAddressSortExpression] }}, Request.QueryString) + "#" + Dnn.Module.ModuleID)"><em class="glyphicon glyphicon-chevron-left fa fas fa-chevron-left"></em></a>
												</li>
												@for (int i = 1; i <= Model.ManageAddressPageViewCount; i++)
												{
													if (i == Model.ManageAddressPageViewIndex)
													{
														<li class="active hidden-xs page-item"><span class="page-link">@i</span></li>
													}
													else
													{
														var indexString = i.ToString();
														int minRange = 1 + ((int)((Model.ManageAddressPageViewIndex - 1) / 10) * 10);
														int maxRange = minRange + 9;

														if (i == minRange - 1 || i == maxRange + 1)
														{
															indexString = "...";
														}
														else if (i < minRange || i > maxRange)
														{
															continue;
														}

														<li class="hidden-xs page-item">
															<a class="page-link" href="@Global.RouteUrl(new NameValueCollection() {
											{ Global.QueryStringKeys.ManageAddressPageViewIndex, i.ToString() },
											{ Global.QueryStringKeys.ManageAddressSortDirection, Request.QueryString[Global.QueryStringKeys.ManageAddressSortDirection] },
											{ Global.QueryStringKeys.ManageAddressSortExpression, Request.QueryString[Global.QueryStringKeys.ManageAddressSortExpression] }}, Request.QueryString)#@Dnn.Module.ModuleID">@indexString</a>
										</li>
									}
								}
												<li class="@(Model.ManageAddressPageViewIndex >= Model.ManageAddressPageViewCount ? "disabled" : "") page-item">
													<a class="page-link" href="@(Model.ManageAddressPageViewIndex >= Model.ManageAddressPageViewCount ? "" : Global.RouteUrl(new NameValueCollection() {
										{ Global.QueryStringKeys.ManageAddressPageViewIndex, (Model.ManageAddressPageViewIndex + 1).ToString() },
										{ Global.QueryStringKeys.ManageAddressSortDirection, Request.QueryString[Global.QueryStringKeys.ManageAddressSortDirection] },
										{ Global.QueryStringKeys.ManageAddressSortExpression, Request.QueryString[Global.QueryStringKeys.ManageAddressSortExpression] }}, Request.QueryString) + "#" + Dnn.Module.ModuleID)"><em class="glyphicon glyphicon-chevron-right fa fas fa-chevron-right"></em></a>
												</li>
											</ul>
										}
									</div>
								</div>
							</div>
		}
		else
		{
			<div class="rvd-form">
				@Html.Partial("Pages/Shared/BackView", Model.BackView)
				<h2>@Html.LocalizeString("UserAddressHeader")@(Html.Partial("Pages/Shared/BreadcrumbView", Model.BreadcrumbView))</h2>
				<div class="row rvdsf-actionbar-container">
					<div class="col-sm-6">
						<a class="btn btn-link" href="@Global.RouteUrl(new NameValueCollection())#@Dnn.Module.ModuleID"><em class="glyphicon glyphicon-list fa fas fa-list"></em> @Html.LocalizeString("ViewListLink")</a>
					</div>
				</div>
				<hr />
				<fieldset>
					<div class="col-sm-offset-3 offset-sm-3 col-sm-6">
						<div class="form-group">
							<div class="row">
								<div class="col-xs-6 col-6"><input type="checkbox" name="PrimaryBillingManageAddressField" checked="@Model.PrimaryBillingManageAddressField" value="true" /> @Html.LocalizeString("PrimaryBillingLabel")</div>
								<div class="col-xs-6 col-6"><input type="checkbox" name="PrimaryShippingManageAddressField" checked="@Model.PrimaryShippingManageAddressField" value="true" /> @Html.LocalizeString("PrimaryShippingLabel")</div>
							</div>
						</div>
						<div class="form-group">
							<label class="control-label required">@Html.LocalizeString("FirstNameLabel")</label>
							<input type="text" name="FirstNameManageAddressField" class="form-control" required data-msg="@Html.LocalizeString(Global.LocalizedStrings.Message_FieldRequiredError, Global.FilePaths.LocalSharedResourceFile)" value="@Model.FirstNameManageAddressField" autocomplete="given-name" />
						</div>
						<div class="form-group">
							<label class="control-label required">@Html.LocalizeString("LastNameLabel")</label>
							<input type="text" name="LastNameManageAddressField" class="form-control" required data-msg="@Html.LocalizeString(Global.LocalizedStrings.Message_FieldRequiredError, Global.FilePaths.LocalSharedResourceFile)" value="@Model.LastNameManageAddressField" autocomplete="family-name" />
						</div>
						<div class="form-group">
							<label class="control-label">@Html.LocalizeString("CompanyLabel")</label>
							<input type="text" name="CompanyManageAddressField" class="form-control" value="@Model.CompanyManageAddressField" autocomplete="organization"/>
						</div>
						<div class="form-group">
							<label class="control-label required">@Html.LocalizeString("CountryLabel")</label>
							<select id="rvdsfCountryCodeManageAddressField" name="CountryCodeManageAddressField" class="form-control" required data-msg="@Html.LocalizeString(Global.LocalizedStrings.Message_FieldRequiredError, Global.FilePaths.LocalSharedResourceFile)" onchange="Revindex.Web.FormPost(this, 'CountryChanged', false, { countryCode: this.value })" autocomplete="country">
								<option value=""></option>
								@foreach (var country in Model.Countries)
								{
									<option value="@country.IsoAlpha2Code" @(Model.CountryCodeManageAddressField == country.IsoAlpha2Code ? "selected" : "")>@country.Name</option>
								}
							</select>
						</div>
						<div class="form-group">
							<label class="control-label required">@Html.LocalizeString("StreetLabel")</label>
							<input type="text" name="StreetManageAddressField" maxlength="200" class="form-control" required data-msg="@Html.LocalizeString(Global.LocalizedStrings.Message_FieldRequiredError, Global.FilePaths.LocalSharedResourceFile)" autocomplete="address-line1" value="@Model.StreetManageAddressField" placeholder="@Html.LocalizeString("StreetPlaceHolder")" />
						</div>
						<div class="form-group">
							<input type="text" name="UnitManageAddressField" maxlength="200" class="form-control" autocomplete="address-line2" value="@Model.UnitManageAddressField" placeholder="@Html.LocalizeString("UnitPlaceHolder")" />
						</div>
						@if (Model.HasDistrictSystem)
						{
							<div class="form-group">
								<label class="control-label required">@Html.LocalizeString("DistrictLabel")</label>
								<input type="text" name="DistrictManageAddressField" maxlength="50" class="form-control" autocomplete="address-level3" value="@Model.DistrictManageAddressField" />
							</div>
						}
						<div class="form-group">
							<label class="control-label required">@Html.LocalizeString("CityLabel")</label>
							<input type="text" name="CityManageAddressField" class="form-control" required data-msg="@Html.LocalizeString(Global.LocalizedStrings.Message_FieldRequiredError, Global.FilePaths.LocalSharedResourceFile)" value="@Model.CityManageAddressField" autocomplete="address-level2" />
						</div>
						@if (Model.Subdivisions.Count > 0)
						{
							<div class="form-group">
								<label class="control-label required">@Html.LocalizeString("SubdivisionLabel")</label>
								<select name="SubdivisionCodeManageAddressField" required data-msg="@Html.LocalizeString(Global.LocalizedStrings.Message_FieldRequiredError, Global.FilePaths.LocalSharedResourceFile)" class="form-control" autocomplete="address-level1">
									<option value=""></option>
									@foreach (var subdivision in Model.Subdivisions)
									{
										<option value="@subdivision.IsoCode" @(Model.SubdivisionCodeManageAddressField == subdivision.IsoCode ? "selected" : "")>@subdivision.Name</option>
									}
								</select>
							</div>
						}
						<div class="form-group">
							<label class="control-label @(!String.IsNullOrEmpty(Model.CountryCodeManageAddressField) && Model.Countries.Where(c => c.IsoAlpha2Code == Model.CountryCodeManageAddressField).First().HasPostalCodeSystem ? "required" : "")">@Html.LocalizeString("PostalCodeLabel")</label>
							<input type="text" name="PostalCodeManageAddressField" class="form-control" value="@Model.PostalCodeManageAddressField" @(!String.IsNullOrEmpty(Model.CountryCodeManageAddressField) && Model.Countries.Where(c => c.IsoAlpha2Code == Model.CountryCodeManageAddressField).First().HasPostalCodeSystem ? "required" : "") data-msg="@Html.LocalizeString(Global.LocalizedStrings.Message_FieldRequiredError, Global.FilePaths.LocalSharedResourceFile)" autocomplete="postal-code" />
						</div>
						<div class="form-group">
							<label class="control-label required">@Html.LocalizeString("PhoneLabel")</label>
							<input type="text" name="PhoneManageAddressField" class="form-control" required data-msg="@Html.LocalizeString(Global.LocalizedStrings.Message_FieldRequiredError, Global.FilePaths.LocalSharedResourceFile)" value="@Model.PhoneManageAddressField" autocomplete="tel"/>
						</div>
						<div class="form-group">
							<label class="control-label">@Html.LocalizeString("EmailLabel")</label>
							<input type="email" name="EmailManageAddressField" class="form-control" maxlength="256" value="@Model.EmailManageAddressField" autocomplete="email" />
						</div>
						<div class="text-right form-group">
							@if (!String.IsNullOrEmpty(Request.QueryString[Global.QueryStringKeys.ReturnUrl]) && Model.UserAddressID > 0)
							{
								<button id="rvdsfDeleteManageAddressButton" type="button" class="btn btn-default btn-light" onclick="if (confirm('@Html.LocalizeString(Global.LocalizedStrings.Message_ConfirmDelete, Global.FilePaths.LocalSharedResourceFile)')) { Revindex.Web.FormPost(this, 'Delete', false, { userAddressID: @Model.UserAddressID }) }">@Html.LocalizeString("DeleteLink")</button>
							}
							<button type="button" id="rvdsfCancelManageAddressButton" class="btn btn-default btn-light" onclick="Revindex.Web.FormPost(this, 'Cancel', false)">@Html.LocalizeString("CancelLink")</button>
							<button id="rvdsfSaveManageAddressButton" type="button" class="btn btn-primary" onclick="if (rvdsfManageAddress.validate()) { Revindex.Web.FormPost(this, 'Save', true) }">@Html.LocalizeString("SaveLink")</button>
							@if (!String.IsNullOrEmpty(Request.QueryString[Global.QueryStringKeys.ReturnUrl]))
							{
								<button id="rvdsfSaveAndReturnManageAddressButton" type="button" class="btn btn-primary" onclick="if (rvdsfManageAddress.validate()) { Revindex.Web.FormPost(this, 'Save', true, { Return: true }) }">@Html.LocalizeString("SaveAndReturnLink")</button>
							}
						</div>
					</div>
				</fieldset>
			</div>
		}
	}
	<input type="hidden" name="@Model.ViewStateName" value="@Model.ViewStateData" />
	<script type="text/plain" id="rvdsfStartupScriptManageOrder">
		@foreach (var script in Model.StartupScripts)
		{
			<text>@Html.Raw(script)</text>
		}
	</script>
</div>

@* Uses Revindex *@
<script src="~/DesktopModules/Revindex.Dnn.RevindexStorefront/Scripts/Revindex/Global.js" defer></script>

@* Uses jQuery Validation. See https://jqueryvalidation.org *@
<script src="~/DesktopModules/Revindex.Dnn.RevindexStorefront/Scripts/jquery-validation/jquery.validate.min.js" defer></script>

@* Uses jQuery Unobtrusive Validation. See http://www.mobzystems.com/blog/setting-up-jquery-unobtrusive-validation/ *@
<script src="~/DesktopModules/Revindex.Dnn.RevindexStorefront/Scripts/jquery-validate-unobtrusive/jquery.validate.unobtrusive.min.js" defer></script>

<script type="text/javascript">
	var rvdsfManageAddress = rvdsfManageAddress || {}

	rvdsfManageAddress.validate = function () {

		var validationResult = $('#Form .rvdsf-manageaddress-container input, .rvdsf-manageaddress-container select, .rvdsf-manageaddress-container textarea').valid()

		// Scroll to first error
		if (!validationResult) {
			$('html, body').animate({
				scrollTop: $('.has-error').offset().top - 110
			}, 800);
		}

		return validationResult
	}

	function pageLoad(sender, args) {

		// Restore jQuery Unobstrusive Validation. Parse will not update unless we reset it first.
		var form = $("#Form").removeData("validator").removeData("unobtrusiveValidation")
		$.validator.unobtrusive.parse(form);

		// Scroll to first error
		if ($('.rvd-module-container div.alert.alert-danger:visible, .rvd-module-container div.alert.alert-warning:visible, .rvd-module-container div.alert.alert-success:visible').length > 0) {
			$('html, body').animate({
				scrollTop: $('.rvd-module-container div.alert.alert-danger:visible, .rvd-module-container div.alert.alert-warning:visible, .rvd-module-container div.alert.alert-success:visible').offset().top - 110
			}, 200);
		}

		// Initialize jQuery Validation with Bootstrap default styles
		$('#Form').validate({
            highlight: function(element) {
				$(element).closest('.form-group').addClass('has-error');
				$(element).addClass('is-invalid');
            },
            unhighlight: function(element) {
				$(element).closest('.form-group').removeClass('has-error');
				$(element).removeClass('is-invalid');
            },
            errorElement: 'div',
            errorClass: 'help-block invalid-feedback',
            errorPlacement: function(error, element) {
                if (element.parent('.input-group').length) {
                    error.insertAfter(element.parent());
                } else if(element.prop('type') === 'checkbox') {
                    error.appendTo(element.parent().parent());
                } else if(element.prop('type') === 'radio') {
                    error.appendTo(element.parent().parent());
                } else {
                    error.insertAfter(element);
				}
			},
			onsubmit: false
        })

		// Add custom method to validate at least one checkbox in group is selected
		$.validator.addMethod("requiredGroup", function (value, element, params) {
			if (params)
				return ($("input[name='" + params + "']:checked").length > 0)
			else
				return true
		}, "@HttpUtility.JavaScriptStringEncode(DotNetNuke.Services.Localization.Localization.GetString(Global.LocalizedStrings.Message_FieldRequiredError, Global.FilePaths.LocalSharedResourceFile))")

		// Execute start up scripts
		if ($("#rvdsfStartupScriptManageOrder").length > 0) {
			eval($("#rvdsfStartupScriptManageOrder").text())
		}
	}

	$(document).ready(function () {
		Revindex.Web.MaintainFocus.Initialize(true)
	})
</script>
