@using System.Collections.Specialized;
@using DotNetNuke.Entities.Users;
@using Revindex.Business.Revindex.Revindex.Storefront;
@using Revindex.Data.Dnn;
@using Revindex.Dnn.RevindexStorefront.Pages;
@using Revindex.Dnn;
@using Revindex.Web.Mvc.Dnn.Helpers;
@using Revindex.Web.UI.DynamicControls;
@inherits Revindex.Web.Mvc.Dnn.RazorPages.DotNetNukeRazorPage<ManageWishListViewModel>

<div class="rvd-module-container rvdsf rvdsf-managewishlist-container">
	@if (Model.Visible)
	{
		if (!String.IsNullOrEmpty((string)Model.TempData.Peek(Global.TempDataKeys.Alert)) && !Model.IsRedirecting)
		{
			<div class="alert alert-@(Model.TempData[Global.TempDataKeys.Alert])">@Model.TempData[Global.TempDataKeys.Message]</div>
		}
		if (Model.ListView)
		{
			<div class="rvdsf-list-container">
				<div class="row rvdsf-actionbar-container">
					<div class="col-sm-6">
					</div>
					<div class="col-sm-6 text-sm-right">
						<button type="button" id="rvdsfAddManageWishListButton" class="btn btn-primary" onclick="location.href = '@Global.RouteUrl(new NameValueCollection() { { Global.QueryStringKeys.WishListID, "0" }, { Global.QueryStringKeys.ReturnUrl, Request.RawUrl }})#@Dnn.Module.ModuleID'">@Html.LocalizeString("AddLink")</button>
					</div>
				</div>
				<hr />
				<div class="row">
					<div class="col-sm-12">
						<table class="table table-striped table-hover">
							<thead>
								<tr>
									<th>
										<a href="@Global.RouteUrl(new NameValueCollection() {
														{ Global.QueryStringKeys.ManageWishListPageViewIndex, "1" },
														{ Global.QueryStringKeys.ManageWishListSortDirection, Request.QueryString[Global.QueryStringKeys.ManageWishListSortDirection] == "0" ? "1" : "0" },
														{ Global.QueryStringKeys.ManageWishListSortExpression, "EventDate" }}, Request.QueryString)#@Dnn.Module.ModuleID">@Html.LocalizeString("NameColumn")</a>
													</th>
													<th>
														<a href="@Global.RouteUrl(new NameValueCollection() {
														{ Global.QueryStringKeys.ManageWishListPageViewIndex, "1" },
														{ Global.QueryStringKeys.ManageWishListSortDirection, Request.QueryString[Global.QueryStringKeys.ManageWishListSortDirection] == "0" ? "1" : "0" },
														{ Global.QueryStringKeys.ManageWishListSortExpression, "EventDate" }}, Request.QueryString)#@Dnn.Module.ModuleID">@Html.LocalizeString("EventDateColumn")</a>
													</th>
													<th class="hidden-xs d-none d-sm-table-cell">
														<a href="@Global.RouteUrl(new NameValueCollection() {
														{ Global.QueryStringKeys.ManageWishListPageViewIndex, "1" },
														{ Global.QueryStringKeys.ManageWishListSortDirection, Request.QueryString[Global.QueryStringKeys.ManageWishListSortDirection] == "0" ? "1" : "0" },
														{ Global.QueryStringKeys.ManageWishListSortExpression, "WishListType" }}, Request.QueryString)#@Dnn.Module.ModuleID">@Html.LocalizeString("TypeColumn")</a>
													</th>
													<th class="hidden-xs d-none d-sm-table-cell">
														<a href="@Global.RouteUrl(new NameValueCollection() {
														{ Global.QueryStringKeys.ManageWishListPageViewIndex, "1" },
														{ Global.QueryStringKeys.ManageWishListSortDirection, Request.QueryString[Global.QueryStringKeys.ManageWishListSortDirection] == "0" ? "1" : "0" },
														{ Global.QueryStringKeys.ManageWishListSortExpression, "Published" }}, Request.QueryString)#@Dnn.Module.ModuleID">@Html.LocalizeString("PublishedColumn")</a>
													</th>
													<th></th>
												</tr>
											</thead>
											<tbody>
												@foreach (var wl in Model.PagedWishLists)
												{
													<tr onclick="location.href='@Global.RouteUrl(new NameValueCollection() {
								{ Global.QueryStringKeys.WishListID, wl.WishListID.ToString() },
								{ Global.QueryStringKeys.ReturnUrl, Request.RawUrl }}, false)'" style="cursor: pointer">
														<td>
															<a href="@Global.RouteUrl(new NameValueCollection() {
								{ Global.QueryStringKeys.WishListID, wl.WishListID.ToString() },
								{ Global.QueryStringKeys.ReturnUrl, Request.RawUrl }}, false)" onclick="event.stopPropagation()">
																@wl.Name
															</a>
														</td>
														<td>@(wl.EventDate.HasValue ? wl.EventDate.Value.ToString("yyyy-MM-dd") : "")</td>
														<td class="hidden-xs d-none d-sm-table-cell">@Html.LocalizeString(((int)wl.WishListType).ToString(), Global.FilePaths.LocalWishListTypeResourceFile)</td>
														<td class="hidden-xs d-none d-sm-table-cell"><input type="checkbox" disabled checked="@wl.Published" /></td>
														<td><a id="rvdsfDeleteWishListManageWishListLink_@wl.WishListID" href="#" onclick="event.stopPropagation(); if (confirm('Are you sure you want to delete this item?')) { Revindex.Web.FormPost(this, 'DeleteWishList', false, { wishListID: @wl.WishListID }) }; return false;"><em class="glyphicon glyphicon-remove fa fas fa-trash"></em></a></td>
													</tr>
												}
											</tbody>
										</table>
									</div>
								</div>
								<div class="row">
									<div class="col-sm-12">
										@if (Model.ManageWishListPageViewCount > 1)
										{
											<ul class="pagination pagination-sm">
												<li class="@(Model.ManageWishListPageViewIndex <= 1 ? "disabled" : "") page-item">
													<a class="page-link" href="@(Model.ManageWishListPageViewIndex <= 1 ? "" : Global.RouteUrl(new NameValueCollection() {
								{ Global.QueryStringKeys.ManageWishListPageViewIndex, (Model.ManageWishListPageViewIndex - 1).ToString() },
								{ Global.QueryStringKeys.ManageWishListSortDirection, Request.QueryString[Global.QueryStringKeys.ManageWishListSortDirection] },
								{ Global.QueryStringKeys.ManageWishListSortExpression, Request.QueryString[Global.QueryStringKeys.ManageWishListSortExpression] }}, Request.QueryString) + "#" + Dnn.Module.ModuleID)"><em class="glyphicon glyphicon-chevron-left fa fas fa-chevron-left"></em></a>
												</li>
												@for (int i = 1; i <= Model.ManageWishListPageViewCount; i++)
												{
													if (i == Model.ManageWishListPageViewIndex)
													{
														<li class="active hidden-xs page-item"><span class="page-link">@i</span></li>
													}
													else
													{
														var indexString = i.ToString();
														int minRange = 1 + ((int)((Model.ManageWishListPageViewIndex - 1) / 10) * 10);
														int maxRange = minRange + 9;

														if (i == minRange - 1 || i == maxRange + 1)
														{
															indexString = "...";
														}
														else if (i < minRange || i > maxRange)
														{
															continue;
														}

														<li class="hidden-xs page-item">
															<a class="page-link" href="@Global.RouteUrl(new NameValueCollection() {
									{ Global.QueryStringKeys.ManageWishListPageViewIndex, i.ToString() },
									{ Global.QueryStringKeys.ManageWishListSortDirection, Request.QueryString[Global.QueryStringKeys.ManageWishListSortDirection] },
									{ Global.QueryStringKeys.ManageWishListSortExpression, Request.QueryString[Global.QueryStringKeys.ManageWishListSortExpression] }}, Request.QueryString)#@Dnn.Module.ModuleID">@indexString</a>
								</li>
							}
						}
												<li class="@(Model.ManageWishListPageViewIndex >= Model.ManageWishListPageViewCount ? "disabled" : "") page-item">
													<a class="page-link" href="@(Model.ManageWishListPageViewIndex >= Model.ManageWishListPageViewCount ? "" : Global.RouteUrl(new NameValueCollection() {
								{ Global.QueryStringKeys.ManageWishListPageViewIndex, (Model.ManageWishListPageViewIndex + 1).ToString() },
								{ Global.QueryStringKeys.ManageWishListSortDirection, Request.QueryString[Global.QueryStringKeys.ManageWishListSortDirection] },
								{ Global.QueryStringKeys.ManageWishListSortExpression, Request.QueryString[Global.QueryStringKeys.ManageWishListSortExpression] }}, Request.QueryString) + "#" + Dnn.Module.ModuleID)"><em class="glyphicon glyphicon-chevron-right fa fas fa-chevron-right"></em></a>
												</li>
											</ul>
										}
									</div>
								</div>
							</div>
						}
						else
						{
							<div class="rvd-form">
								@Html.Partial("Pages/Shared/BackView", Model.BackView)
								<h2>@Html.LocalizeString("WishListHeader")@(Html.Partial("Pages/Shared/BreadcrumbView", Model.BreadcrumbView))</h2>
								<div class="row rvdsf-actionbar-container">
									<div class="col-sm-6">
										<a class="btn btn-link" href="@Global.RouteUrl(new NameValueCollection())#@Dnn.Module.ModuleID"><em class="glyphicon glyphicon-list fa fas fa-list"></em> @Html.LocalizeString("ViewListLink")</a>
									</div>
									<div class="col-sm-6 text-sm-right">
										@if (Model.WishListID > 0 && Model.WishList.Published)
										{
											<button type="button" class="btn btn-primary" onclick="location.href = '@Model.WishList.TabUrl'">@Html.LocalizeString("ShareLink")</button>
										}
									</div>
								</div>
								<div class="rvdsf-managewishlist-detail-container" style="min-height: 400px">
									<ul id="rvdsfManageWishListDetailTabs" class="nav nav-tabs hidden-xs d-none d-sm-flex">
										<li class="nav-item"><a class="nav-link" data-toggle="tab" href="#rvdsfManageWishListDetailGeneral">@Html.LocalizeString("GeneralLabel")</a></li>
										<li class="nav-item"><a class="nav-link" data-toggle="tab" href="#rvdsfManageWishListDetailProducts">@Html.LocalizeString("ProductsLabel")</a></li>
									</ul>
									<div id="rvdsfManageWishListDetailContent" class="tab-content panel-group">
										<div id="rvdsfManageWishListDetailGeneral" class="card tab-pane panel">
											<div class="card-header panel-heading d-sm-none visible-xs" id="rvdsfManageWishListDetailGeneralHeader">
												<h6 class="mb-0">
													<a class="collapsed" data-toggle="collapse" href="#rvdsfManageWishListDetailGeneralPanel" data-parent="#rvdsfManageWishListDetailContent">
														@Html.LocalizeString("GeneralLabel")
													</a>
												</h6>
											</div>
											<div id="rvdsfManageWishListDetailGeneralPanel" class="collapse panel-collapse" data-parent="#rvdsfManageWishListDetailContent">
												<div class="card-body panel-body">
													<div class="col-sm-offset-3 offset-sm-3 col-sm-6">
														<div class="form-group">
															<label class="control-label required">@Html.LocalizeString("WishListTypeLabel")</label>
															<div>
																@foreach (var wishListType in Enum.GetValues(typeof(WishListType)).Cast<WishListType>().OrderBy(wlt => Html.LocalizeString(((int)wlt).ToString(), Global.FilePaths.LocalWishListTypeResourceFile)))
																{
																	<div class="radio radio-sm-inline">
																		<label class="">
																			<input type="radio" name="WishListTypeManageWishListField" value="@((int)wishListType)" checked="@(Model.WishListTypeManageWishListField == wishListType)">
																			@Html.LocalizeString(((int)wishListType).ToString(), Global.FilePaths.LocalWishListTypeResourceFile)
																		</label>
																	</div>
																}
															</div>
														</div>
														<div class="form-group">
															<label class="control-label required">@Html.LocalizeString("NameLabel")</label>
															<input class="form-control" type="text" name="NameManageWishListField" required data-msg="@Html.LocalizeString(Global.LocalizedStrings.Message_FieldRequiredError, Global.FilePaths.LocalSharedResourceFile)" value="@Model.NameManageWishListField" maxlength="200" />
														</div>
														<div class="form-group">
															<label class="control-label">@Html.LocalizeString("PersonalMessageLabel")</label>
															<textarea class="form-control" name="PersonalMessageManageWishListField" style="height: 100px">@Model.PersonalMessageManageWishListField</textarea>
														</div>
														<div class="form-group">
															<label>
																<input type="checkbox" checked="@Model.PublishedManageWishListField" value="true" onclick="if ($(this).next().val() == 'True') $(this).next().val('False'); else $(this).next().val('True');" /> @Html.LocalizeString("PublishedLabel")
																<input type="hidden" name="PublishedManageWishListField" value="@Model.PublishedManageWishListField.ToString()" />
															</label>
															<span class="help-text">@Html.LocalizeString("PublishedHelp")</span>
														</div>
														<h3>@Html.LocalizeString("RegistrantHeader")</h3>
														<div class="help-text">@Html.LocalizeString("RegistrantHelp")</div>
														<hr />
														<div class="form-group">
															<label class="control-label required">@Html.LocalizeString("RegistrantFirstNameLabel")</label>
															<input class="form-control" type="text" name="RegistrantFirstNameManageWishListField" required data-msg="@Html.LocalizeString(Global.LocalizedStrings.Message_FieldRequiredError, Global.FilePaths.LocalSharedResourceFile)" value="@Model.RegistrantFirstNameManageWishListField" />
														</div>
														<div class="form-group">
															<label class="control-label required">@Html.LocalizeString("RegistrantLastNameLabel")</label>
															<input class="form-control" type="text" name="RegistrantLastNameManageWishListField" required data-msg="@Html.LocalizeString(Global.LocalizedStrings.Message_FieldRequiredError, Global.FilePaths.LocalSharedResourceFile)" value="@Model.RegistrantLastNameManageWishListField" />
														</div>
														<div class="form-group">
															<label class="control-label">@Html.LocalizeString("Registrant2FirstNameLabel")</label>
															<input class="form-control" type="text" name="Registrant2FirstNameManageWishListField" value="@Model.Registrant2FirstNameManageWishListField" />
														</div>
														<div class="form-group">
															<label class="control-label">@Html.LocalizeString("Registrant2LastNameLabel")</label>
															<input class="form-control" type="text" name="Registrant2LastNameManageWishListField" value="@Model.Registrant2LastNameManageWishListField" />
														</div>
														<h3>@Html.LocalizeString("ShippingHeader")</h3>
														<div class="help-text">@Html.LocalizeString("ShippingHelp")</div>
														<hr />
														@if (Model.UserAddresses.Count > 0)
														{
															<div class="text-right form-group">
																<div class="btn-group">
																	<button type="button" class="btn dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
																		@Html.LocalizeString("UserAddressLink") <span class="caret"></span>
																	</button>
																	<ul class="dropdown-menu rvdsf-useraddress-container">
																		@foreach (var ua in Model.UserAddresses)
																		{
																			<li class="dropdown-item">
																				<a id="rvdsfUserAddressManageWishListLink_@(ua.UserAddressID)" href="#" onclick="Revindex.Web.FormPost(this, 'UserAddressChanged', false, { userAddressID: @ua.UserAddressID }); return false;">
																					<strong>@ua.FirstName  @ua.LastName @(String.IsNullOrEmpty(ua.Company) ? "" : "(" + ua.Company + ")")</strong><br />
																					<span>@ua.Street</span><br />
																					@if (!String.IsNullOrEmpty(ua.Unit)) 
																					{ 
																						<span>@ua.Unit</span><br />
																					}
																					@if (!String.IsNullOrEmpty(ua.District)) 
																					{ 
																						<span>@ua.District</span><br />
																					}
																					<span>@ua.City</span><br />
																					<span>@ua.SubdivisionName</span>
																					<span>@ua.PostalCode</span>
																					<span>@ua.CountryName</span>
																				</a>
																			</li>
																			<li role="separator" class="divider dropdown-divider"></li>
																		}
																	</ul>
																</div>
															</div>
														}
														<div class="form-group">
															<label class="control-label required">@Html.LocalizeString("ShippingFirstNameLabel")</label>
															<input type="text" name="ShippingFirstNameManageWishListField" class="form-control" required data-msg="@Html.LocalizeString(Global.LocalizedStrings.Message_FieldRequiredError, Global.FilePaths.LocalSharedResourceFile)" value="@Model.ShippingFirstNameManageWishListField" autocomplete="given-name" />
														</div>
														<div class="form-group">
															<label class="control-label required">@Html.LocalizeString("ShippingLastNameLabel")</label>
															<input type="text" name="ShippingLastNameManageWishListField" class="form-control" required data-msg="@Html.LocalizeString(Global.LocalizedStrings.Message_FieldRequiredError, Global.FilePaths.LocalSharedResourceFile)" value="@Model.ShippingLastNameManageWishListField" autocomplete="family-name" />
														</div>
														<div class="form-group">
															<label class="control-label">@Html.LocalizeString("ShippingCompanyLabel")</label>
															<input type="text" name="ShippingCompanyManageWishListField" class="form-control" value="@Model.ShippingCompanyManageWishListField" autocomplete="organization" />
														</div>
														<div class="form-group">
															<label class="control-label required">@Html.LocalizeString("ShippingCountryLabel")</label>
															<select id="rvdsfShippingCountryCodeManageWishListField" name="ShippingCountryCodeManageWishListField" class="form-control" required data-msg="@Html.LocalizeString(Global.LocalizedStrings.Message_FieldRequiredError, Global.FilePaths.LocalSharedResourceFile)" onchange="Revindex.Web.FormPost(this, 'ShippingCountryChanged', false, { countryCode: this.value })" autocomplete="country">
																<option value=""></option>
																@foreach (var country in Model.Countries)
																{
																	<option value="@country.IsoAlpha2Code" @(Model.ShippingCountryCodeManageWishListField == country.IsoAlpha2Code ? "selected" : "")>@country.Name</option>
																}
															</select>
														</div>
														<div class="form-group">
															<label class="control-label required">@Html.LocalizeString("ShippingStreetLabel")</label>
															<input type="text" name="ShippingStreetManageWishListField" maxlength="200" class="form-control" required data-msg="@Html.LocalizeString(Global.LocalizedStrings.Message_FieldRequiredError, Global.FilePaths.LocalSharedResourceFile)" autocomplete="address-line1" value="@Model.ShippingStreetManageWishListField" placeholder="@Html.LocalizeString("StreetPlaceHolder")" />
														</div>
														<div class="form-group">
															<input type="text" name="ShippingUnitManageWishListField" class="form-control" value="@Model.ShippingUnitManageWishListField" placeholder="@Html.LocalizeString("UnitPlaceHolder")" autocomplete="address-line2" />
														</div>
														@if (Model.HasShippingDistrictSystem)
														{
															<div class="form-group">
																<label class="control-label">@Html.LocalizeString("ShippingDistrictLabel")</label>
																<input type="text" name="ShippingDistrictManageWishListField" class="form-control" value="@Model.ShippingDistrictManageWishListField" autocomplete="address-level3" />
															</div>
														}
														<div class="form-group">
															<label class="control-label required">@Html.LocalizeString("ShippingCityLabel")</label>
															<input type="text" name="ShippingCityManageWishListField" class="form-control" required data-msg="@Html.LocalizeString(Global.LocalizedStrings.Message_FieldRequiredError, Global.FilePaths.LocalSharedResourceFile)" value="@Model.ShippingCityManageWishListField" autocomplete="address-level2" />
														</div>
														@if (Model.ShippingSubdivisions.Count > 0)
														{
															<div class="form-group">
																<label class="control-label required">@Html.LocalizeString("ShippingSubdivisionLabel")</label>
																<select name="ShippingSubdivisionCodeManageWishListField" required data-msg="@Html.LocalizeString(Global.LocalizedStrings.Message_FieldRequiredError, Global.FilePaths.LocalSharedResourceFile)" class="form-control" autocomplete="address-level1">
																	<option value=""></option>
																	@foreach (var subdivision in Model.ShippingSubdivisions)
																	{
																		<option value="@subdivision.IsoCode" @(Model.ShippingSubdivisionCodeManageWishListField == subdivision.IsoCode ? "selected" : "")>@subdivision.Name</option>
																	}
																</select>
															</div>
														}
														<div class="form-group">
															<label class="control-label @(!String.IsNullOrEmpty(Model.ShippingCountryCodeManageWishListField) && Model.Countries.Where(c => c.IsoAlpha2Code == Model.ShippingCountryCodeManageWishListField).First().HasPostalCodeSystem ? "required" : "")">@Html.LocalizeString("ShippingPostalCodeLabel")</label>
															<input type="text" name="ShippingPostalCodeManageWishListField" class="form-control" value="@Model.ShippingPostalCodeManageWishListField" @(!String.IsNullOrEmpty(Model.ShippingCountryCodeManageWishListField) && Model.Countries.Where(c => c.IsoAlpha2Code == Model.ShippingCountryCodeManageWishListField).First().HasPostalCodeSystem ? "required" : "") data-msg="@Html.LocalizeString("PostalCodeRequiredError")" autocomplete="postal-code" />
														</div>
														<div class="form-group">
															<label class="control-label required">@Html.LocalizeString("ShippingPhoneLabel")</label>
															<input type="text" name="ShippingPhoneManageWishListField" class="form-control" required data-msg="@Html.LocalizeString(Global.LocalizedStrings.Message_FieldRequiredError, Global.FilePaths.LocalSharedResourceFile)" value="@Model.ShippingPhoneManageWishListField" autocomplete="tel" />
														</div>
														<div class="form-group">
															<label class="control-label">@Html.LocalizeString("ShippingEmailLabel")</label>
															<input type="email" name="ShippingEmailManageWishListField" class="form-control" maxlength="256" value="@Model.ShippingEmailManageWishListField" autocomplete="email" />
														</div>
														<h3>@Html.LocalizeString("EventHeader")</h3>
														<div class="help-text">@Html.LocalizeString("EventHelp")</div>
														<hr />
														<div class="form-group">
															<label class="control-label">@Html.LocalizeString("EventDateLabel")</label>
															<input id="rvdsfEventDateManageWishListInput" name="EventDateManageWishListField" value="@(Model.EventDateManageWishListField.HasValue ? Model.EventDateManageWishListField.Value.ToString("yyyy-MM-dd") : "")" placeholder="YYYY-MM-DD" style="width: 100%" />
														</div>
														<div class="form-group">
															<label class="control-label">@Html.LocalizeString("EventCountryLabel")</label>
															<select id="rvdsfEventCountryCodeManageWishListField" name="EventCountryCodeManageWishListField" class="form-control" onchange="Revindex.Web.FormPost(this, 'EventCountryChanged', false, { countryCode: this.value })">
																<option value=""></option>
																@foreach (var country in Model.Countries)
																{
																	<option value="@country.IsoAlpha2Code" @(Model.EventCountryCodeManageWishListField == country.IsoAlpha2Code ? "selected" : "")>@country.Name</option>
																}
															</select>
														</div>
														@if (Model.EventSubdivisions.Count > 0)
														{
															<div class="form-group">
																<label class="control-label">@Html.LocalizeString("EventSubdivisionLabel")</label>
																<select name="EventSubdivisionCodeManageWishListField" class="form-control">
																	<option value=""></option>
																	@foreach (var subdivision in Model.EventSubdivisions)
																	{
																		<option value="@subdivision.IsoCode" @(Model.EventSubdivisionCodeManageWishListField == subdivision.IsoCode ? "selected" : "")>@subdivision.Name</option>
																	}
																</select>
															</div>
														}
														<div class="form-group">
															<label class="control-label">@Html.LocalizeString("EventCityLabel")</label>
															<input type="text" name="EventCityManageWishListField" class="form-control" value="@Model.EventCityManageWishListField" />
														</div>
														<div class="text-right form-group">
															@if (!String.IsNullOrEmpty(Request.QueryString[Global.QueryStringKeys.ReturnUrl]) && Model.WishListID > 0)
															{
																<button id="rvdsfDeleteManageWishListButton" type="button" class="btn btn-default btn-light" onclick="if (confirm('@Html.LocalizeString(Global.LocalizedStrings.Message_ConfirmDelete, Global.FilePaths.LocalSharedResourceFile)')) { Revindex.Web.FormPost(this, 'DeleteWishList', false, { wishListID: @Model.WishListID }) }">@Html.LocalizeString("DeleteLink")</button>
															}
															<button type="button" id="rvdsfCancelManageWishListButton" class="btn btn-default btn-light" onclick="Revindex.Web.FormPost(this, 'Cancel', false)">@Html.LocalizeString("CancelLink")</button>
															<button id="rvdsfSaveManageWishListButton" type="button" class="btn btn-primary" onclick="if (rvdsfManageWishList.validate()) { Revindex.Web.FormPost(this, 'Save', true) }">@Html.LocalizeString("SaveLink")</button>
															@if (!String.IsNullOrEmpty(Request.QueryString[Global.QueryStringKeys.ReturnUrl]))
															{
																<button id="rvdsfSaveAndReturnManageWishListButton" type="button" class="btn btn-primary" onclick="if (rvdsfManageWishList.validate()) { Revindex.Web.FormPost(this, 'Save', true, { Return: true }) }">@Html.LocalizeString("SaveAndReturnLink")</button>
															}
														</div>
													</div>
												</div>
											</div>
										</div>
										<div id="rvdsfManageWishListDetailProducts" class="card tab-pane panel">
											<div class="card-header panel-heading d-sm-none visible-xs" id="rvdsfManageWishListDetailShippingProductsHeader">
												<h6 class="mb-0">
													<a class="collapsed" data-toggle="collapse" href="#rvdsfManageWishListDetailProductsPanel" data-parent="#rvdsfManageWishListDetailContent">
														@Html.LocalizeString("ProductsLabel")
													</a>
												</h6>
											</div>
											<div id="rvdsfManageWishListDetailProductsPanel" class="collapse panel-collapse" data-parent="#rvdsfManageWishListDetailContent">
												<div class="card-body panel-body">
													<div class="col-sm-12">
														@if (Model.WishList == null || Model.WishList.WishListDetails.Count == 0)
														{
															<div class="alert alert-info">@Html.LocalizeString("EmptyWishListMessage")</div>
															<button class="btn btn-primary" type="button" onclick="location.href = '@Model.ProductList.TabUrl'">@Html.LocalizeString("BrowseProductsLink")</button>
														}
														else
														{
															<table class="table table-hover">
															<tbody>
																@foreach (var wishListDetail in Model.WishList.WishListDetails.OrderBy(wld => wld.ProductVariant.Product.Name))
																{
																	var product = wishListDetail.ProductVariant.Product;

																	<tr>
																		<td>
																			<div class="rvdsf-managewishlist-container">
																				<div class="rvdsf-product-container row" style="@(wishListDetail.DesiredQuantity - wishListDetail.OrderedQuantity == 0 ? "filter: grayscale(100%)" : "")">
																					<div class="col-sm-9">
																						@if (product.ShowPrice && product.DefaultProductVariant.CombinedSavings > 0)
																						{
																							<div class="rvdsf-label-savings">
																								@Html.LocalizeString("SavingsLabel")@if (product.ProductVariants.Count == 1)
																								{<span> @product.DefaultProductVariant.FormattedCombinedPercentSavings</span>}
																							</div>
																						}
																						<div class="rvdsf-product-gallery-container">
																							@if (product.DefaultThumbnailGallery != null)
																							{
																								<a href="@product.DefaultProductVariant.ProductDetail.TabUrl"><img class="img-responsive img-fluid center-block d-block mx-auto" src="@product.DefaultThumbnailGallery.MediaUrl" alt="@wishListDetail.ProductVariant.Product.DefaultThumbnailGallery.AlternateText" /></a>
																							}
																						</div>
																						<div class="rvdsf-product-info-container">
																							<div class="rvdsf-field-name">
																								<a class="rvdsf-label-name" href="@product.ProductDetail.TabUrl">@product.Name</a>
																							</div>
																							@if (product.ShowProductReviews)
																							{
																								<div class="rvdsf-field-rating">
																									<input type="hidden" class="rating" readonly value="@(product.AverageOverallRating == 0 ? "" : product.AverageOverallRating.ToString(System.Globalization.CultureInfo.InvariantCulture))" />
																									@if (product.RatingCount > 0)
																									{
																										<span class="badge">@product.RatingCount</span>
																									}
																								</div>
																							}
																							@if (product.ShowPrice)
																							{
																								if (product.ProductVariants.Count == 1)
																								{
																									if (String.IsNullOrEmpty(product.DefaultProductVariant.PriceText))
																									{
																										<div class="rvdsf-field-price">
																											@if (product.DefaultProductVariant.CombinedPromotionPrice.HasValue)
																											{
																												<span class="rvdsf-label-price"><s>@product.DefaultProductVariant.FormattedCombinedPrice</s></span>
																												<span class="rvdsf-label-promotionprice">@product.DefaultProductVariant.FormattedCombinedPromotionPrice</span>
																											}
																											else
																											{
																												<span class="rvdsf-label-price">@product.DefaultProductVariant.FormattedCombinedPrice</span>
																											}
																										</div>
																									}
																									else
																									{
																										<div class="rvdsf-field-price">
																											<span class="rvdsf-label-pricetext">@product.DefaultProductVariant.PriceText</span>
																										</div>
																									}
																								}
																								else if (product.ProductVariants.Count > 1 && !String.IsNullOrEmpty(product.FormattedMinCombinedSellingPrice) && !String.IsNullOrEmpty(product.FormattedMaxCombinedSellingPrice))
																								{
																									<div class="rvdsf-field-price">
																										<span class="rvdsf-label-price">@(product.FormattedMinCombinedSellingPrice == product.FormattedMaxCombinedSellingPrice ? product.FormattedMinCombinedSellingPrice : product.FormattedMinCombinedSellingPrice + " - " + product.FormattedMaxCombinedSellingPrice)</span>
																									</div>
																								}
																							}
																							@if (product.ShowQuantity && product.AllowInternetOrder && !product.DefaultProductVariant.HasFormFields && product.ProductVariants.Count == 1)
																							{
																								<div class="rvdsf-product-form-container form-horizontal">
																									<div class="form-group rvdsf-field-qty row">
																										<label class="control-label col-form-label col-sm-6 text-sm-right" for="rvdsfManageWishListQuantityInput_@(Dnn.Module.ModuleID)_@(wishListDetail.WishListDetailID)">@Html.LocalizeString("QuantityLabel")</label>
																										<div class="col-sm-6 text-left">
																											@if (product.DefaultProductVariant.AllowableOrderQuantityList.Count == 0)
																											{
																												<input id="rvdsfManageWishListQuantityInput_@(Dnn.Module.ModuleID)_@(wishListDetail.WishListDetailID)" name="rvdsfManageWishListQuantityInput_@(Dnn.Module.ModuleID)_@(wishListDetail.WishListDetailID)" type="number" class="form-control" required step="1" min="@(product.DefaultProductVariant.MinOrderQuantity.HasValue ? product.DefaultProductVariant.MinOrderQuantity : product.DefaultProductVariant.DefaultQuantity)" max="@(product.DefaultProductVariant.MaxOrderQuantity.HasValue ? product.DefaultProductVariant.MaxOrderQuantity : 9999 )" value="@product.DefaultProductVariant.DefaultQuantity" onchange="if (this.value == '') this.value = this.min; else if (parseInt(this.value) > this.max) this.value = this.max; else if (parseInt(this.value) < this.min) this.value = this.min;" onkeypress="return event.charCode >= 48 && event.charCode <= 57" />
																											}
																											else
																											{
																												<select id="rvdsfManageWishListQuantityInput_@(Dnn.Module.ModuleID)_@(wishListDetail.WishListDetailID)" name="rvdsfManageWishListQuantityInput_@(Dnn.Module.ModuleID)_@(wishListDetail.WishListDetailID)" class="form-control">
																													@foreach (var qty in product.DefaultProductVariant.AllowableOrderQuantityList)
																													{
																														<option value="@qty">@qty</option>
																													}
																												</select>
																											}
																										</div>
																									</div>
																								</div>
																							}
																							<div class="btn-toolbar">
																								@if (product.ShowSeeDetails)
																								{
																									<button type="button" class="rvdsf-btn-seedetails btn btn-primary" onclick="location.href = '@product.DefaultProductVariant.ProductDetail.TabUrl'">@Html.LocalizeString("SeeDetailsLink")</button>
																								}

																								@if (product.AllowInternetOrder && product.ProductVariants.Count == 1 && !product.DefaultProductVariant.HasFormFields && product.DefaultProductVariant.HasAcceptableInventory)
																								{
																									if (product.ShowAddToCart)
																									{
																										<button type="button" class="rvdsf-btn-addtocart btn btn-primary" onclick="rvdsfManageWishList.addProductToCart(@product.DefaultProductVariant.ProductVariantID, ($('#rvdsfManageWishListQuantityInput_@(Dnn.Module.ModuleID)_@(wishListDetail.WishListDetailID)').length ? $('#rvdsfManageWishListQuantityInput_@(Dnn.Module.ModuleID)_@(wishListDetail.WishListDetailID)').val() : @product.DefaultProductVariant.DefaultQuantity), 'rvdsfManageWishListMessage_@(Dnn.Module.ModuleID)_@(wishListDetail.WishListDetailID)', null)">@(product.DefaultProductVariant.SalesType == SalesType.Quote ? Html.LocalizeString("AddToQuoteLink") : Html.LocalizeString("AddToCartLink"))</button>
																									}

																									if (product.ShowBuyNow)
																									{
																										<button type="button" class="rvdsf-btn-buynow btn btn-primary" onclick="rvdsfManageWishList.addProductToCart(@product.DefaultProductVariant.ProductVariantID, ($('#rvdsfManageWishListQuantityInput_@(Dnn.Module.ModuleID)_@(wishListDetail.WishListDetailID)').length ? $('#rvdsfManageWishListQuantityInput_@(Dnn.Module.ModuleID)_@(wishListDetail.WishListDetailID)').val() : @product.DefaultProductVariant.DefaultQuantity), 'rvdsfManageWishListMessage_@(Dnn.Module.ModuleID)_@(wishListDetail.WishListDetailID)', '@Model.Checkout.TabUrl')">@(product.DefaultProductVariant.SalesType == SalesType.Quote ? Html.LocalizeString("QuoteNowLink") : Html.LocalizeString("BuyNowLink"))</button>
																									}
																								}
																							</div>
																							@if (!product.ProductVariants.Exists(pv => pv.HasAcceptableInventory))
																							{
																								<div class="alert alert-info rvdsf-label-soldout">@Html.LocalizeString("SoldOutLabel")</div>
																							}
																							<div id="rvdsfManageWishListMessage_@(Dnn.Module.ModuleID)_@(wishListDetail.WishListDetailID)" style="display:none"></div>
																						</div>
																				
																					</div>
																					<div class="col-sm-3">
																						<div class="rvdsf-product-form-container form-horizontal">
																							<div class="form-group rvdsf-field-qty row">
																								<label class="control-label col-form-label col-sm-6 text-sm-right">@Html.LocalizeString("DesiredLabel")</label>
																								<div class="col-sm-6">
																									<input id="rvdsfManageWishListDesiredQuantityInput_@(wishListDetail.WishListDetailID)" name="rvdsfManageWishListDesiredQuantityInput_@(wishListDetail.WishListDetailID)" min="1" type="number" class="form-control" required step="1" value="@(wishListDetail.DesiredQuantity - wishListDetail.OrderedQuantity)" onchange="if (this.value == '') this.value = 1; Revindex.Web.FormPost(this, 'UpdateDesiredQuantity', false, { wishListDetailID: @wishListDetail.WishListDetailID, desiredQuantity: this.value })" onkeypress="return event.charCode >= 48 && event.charCode <= 57" />
																								</div>
																							</div>
																							<div class="form-group rvdsf-field-qty row">
																								<label class="control-label col-form-label col-sm-6 text-sm-right">@Html.LocalizeString("OrderedLabel")</label>
																								<p class="form-control-static form-control-plaintext col-sm-6">@wishListDetail.OrderedQuantity</p>
																							</div>
																							@if (wishListDetail.Contributors.Where(c => c.UserID != Dnn.User.UserID).Count() > 0)
																							{
																							<div class="form-group row">
																								<label class="control-label col-form-label col-sm-6 text-right">@Html.LocalizeString("ContributorsLabel")</label>
																								<p class="form-control-static form-control-plaintext col-sm-6">
																									@foreach (var user in wishListDetail.Contributors.Where(c => c.UserID != Dnn.User.UserID).OrderBy(c => c.DisplayName))
																									{
																										<text>@user.DisplayName<br /></text>
																									}
																								</p>
																							</div>
																							}
																						</div>
																					</div>																			
																				</div>
																			</div>
																		</td>
																		<td><a id="rvdsfDeleteWishListDetailLink_@wishListDetail.WishListDetailID" href="#" onclick="if (confirm('Are you sure you want to delete this item?')) { Revindex.Web.FormPost(this, 'DeleteWishListDetail', false, { wishListDetailID: @wishListDetail.WishListDetailID }) }; return false;"><em class="glyphicon glyphicon-remove fa fas fa-trash"></em></a></td>
																	</tr>
																}
															</tbody>
														</table>
														}
													</div>
												</div>
											</div>
										</div>
									</div>
								</div>
							</div>
						}
					}
	<input type="hidden" name="@Model.ViewStateName" value="@Model.ViewStateData" />
	<script type="text/plain" id="rvdsfStartupScriptManageOrder">
		@foreach (var script in Model.StartupScripts)
		{
			<text>@Html.Raw(script)</text>
		}
	</script>
</div>

@* Uses Revindex *@
<script src="~/DesktopModules/Revindex.Dnn.RevindexStorefront/Scripts/Revindex/Global.js" defer></script>

@* Uses jQuery Validation. See https://jqueryvalidation.org *@
<script src="~/DesktopModules/Revindex.Dnn.RevindexStorefront/Scripts/jquery-validation/jquery.validate.min.js" defer></script>

@* Uses jQuery Unobtrusive Validation. See http://www.mobzystems.com/blog/setting-up-jquery-unobtrusive-validation/ *@
<script src="~/DesktopModules/Revindex.Dnn.RevindexStorefront/Scripts/jquery-validate-unobtrusive/jquery.validate.unobtrusive.min.js" defer></script>

@* Uses Kendo UI. See https://www.telerik.com/documentation *@
<link rel="stylesheet" href="https://kendo.cdn.telerik.com/2020.3.1021/styles/kendo.common-bootstrap.min.css">
<link rel="stylesheet" href="https://kendo.cdn.telerik.com/2020.3.1021/styles/kendo.bootstrap.min.css">
<script src="https://kendo.cdn.telerik.com/2020.3.1021/js/kendo.core.min.js" defer></script>
<script src="https://kendo.cdn.telerik.com/2020.3.1021/js/kendo.userevents.min.js" defer></script>
<script src="https://kendo.cdn.telerik.com/2020.3.1021/js/kendo.selectable.min.js" defer></script>
<script src="https://kendo.cdn.telerik.com/2020.3.1021/js/kendo.calendar.min.js" defer></script>
<script src="https://kendo.cdn.telerik.com/2020.3.1021/js/kendo.popup.min.js" defer></script>
<script src="https://kendo.cdn.telerik.com/2020.3.1021/js/kendo.datepicker.min.js" defer></script>
<script src="https://kendo.cdn.telerik.com/2020.3.1021/js/kendo.rating.min.js" defer></script>
<script src="https://kendo.cdn.telerik.com/2020.3.1021/js/cultures/kendo.culture.@(Dnn.Portal.CultureCode).min.js" defer></script>
<script src="https://kendo.cdn.telerik.com/2020.3.1021/js/messages/kendo.messages.@(Dnn.Portal.CultureCode).min.js" defer></script>

<script type="text/javascript">
	var rvdsfManageWishList = rvdsfManageWishList || {}

	rvdsfManageWishList.validate = function () {

		var validationResult = $('#Form .rvdsf-managewishlist-container input, .rvdsf-managewishlist-container select, .rvdsf-managewishlist-container textarea').valid()

		// Scroll to first error
		if (!validationResult) {
			$('html, body').animate({
				scrollTop: $('.has-error').offset().top - 110
			}, 800);
		}

		return validationResult
	}

	rvdsfManageWishList.addProductToCart = function (productVariantID, quantity, messageContainerID, redirect) {
        var salesOrderDetailData = {
            ProductVariantID: productVariantID,
            Quantity: quantity
        }

        var servicesFramework = $.ServicesFramework(@Dnn.Module.ModuleID)

        $.ajax({
            type: "POST",
            beforeSend: servicesFramework.setModuleHeaders,
            url: servicesFramework.getServiceRoot("@Dnn.Module.DesktopModule.FolderName") + "Cart/SalesOrderDetail",
            data: salesOrderDetailData
        })
        .done(function (data, textStatus, jqXHR) {

            // Notify all Cart Summary modules to rebind
            $(".rvdsf-cartsummary-container").each(function () {
                this.databind()
            })

            $("#" + messageContainerID).attr("class", "alert alert-success").html("<span class='glyphicon glyphicon-ok fa fas fa-check'></span> @HttpUtility.JavaScriptStringEncode(Html.LocalizeString(Global.LocalizedStrings.Message_ProductAddedToCart, Global.FilePaths.LocalSharedResourceFile)) <a class='btn btn-link' href='@Model.Cart.TabUrl'>@HttpUtility.JavaScriptStringEncode(Html.LocalizeString("CartLink"))</a>").show().fadeOut(10000)

            if (redirect)
                location.href = redirect
        })
        .fail(function (data, textStatus, errorThrown) {
            $("#" + messageContainerID).attr("class", "alert alert-danger").html("<span class='glyphicon glyphicon-remove fa fas fa-exclamation-circle'></span> " + (data.responseJSON.Message ? kendo.htmlEncode(data.responseJSON.Message) : "@HttpUtility.JavaScriptStringEncode(Html.LocalizeString(Global.LocalizedStrings.Message_ProductNotAvailable, Global.FilePaths.LocalSharedResourceFile))")).show().fadeOut(10000)
        })
    }

	function pageLoad(sender, args) {

		// Restore jQuery Unobstrusive Validation. Parse will not update unless we reset it first.
		var form = $("#Form").removeData("validator").removeData("unobtrusiveValidation")
		$.validator.unobtrusive.parse(form);

		// Scroll to first error
		if ($('.rvd-module-container div.alert.alert-danger:visible, .rvd-module-container div.alert.alert-warning:visible, .rvd-module-container div.alert.alert-success:visible').length > 0) {
			$('html, body').animate({
				scrollTop: $('.rvd-module-container div.alert.alert-danger:visible, .rvd-module-container div.alert.alert-warning:visible, .rvd-module-container div.alert.alert-success:visible').offset().top - 110
			}, 200);
		}

		// Initialize jQuery Validation with Bootstrap default styles
		$('#Form').validate({
			// Do not ignore hidden tabs fields
			ignore: "",

			highlight: function(element) {
				$(element).closest('.form-group').addClass('has-error');
				$(element).addClass('is-invalid');
			},
			unhighlight: function(element) {
				$(element).closest('.form-group').removeClass('has-error');
				$(element).removeClass('is-invalid');
			},
			errorElement: 'div',
			errorClass: 'help-block invalid-feedback',
			errorPlacement: function(error, element) {
				if (element.parent('.input-group').length) {
					error.insertAfter(element.parent());
				} else if(element.prop('type') === 'checkbox') {
					error.appendTo(element.parent().parent());
				} else if(element.prop('type') === 'radio') {
					error.appendTo(element.parent().parent());
				} else {
					error.insertAfter(element);
				}
			},
			onsubmit: false
		})

		// Add custom method to validate at least one checkbox in group is selected
		$.validator.addMethod("requiredGroup", function (value, element, params) {
			if (params)
				return ($("input[name='" + params + "']:checked").length > 0)
			else
				return true
		}, "@HttpUtility.JavaScriptStringEncode(DotNetNuke.Services.Localization.Localization.GetString(Global.LocalizedStrings.Message_FieldRequiredError, Global.FilePaths.LocalSharedResourceFile))")

		// Track selected tab or collapsible panel
		$('#rvdsfManageWishListDetailTabs li > a').click(function () {
			sessionStorage.setItem("rvdsfManageWishListDetailTabs.selectedTab", $(this).attr('href'));
		});

		$('#rvdsfManageWishListDetailContent a[data-toggle=collapse]').click(function () {
			sessionStorage.setItem("rvdsfManageWishListDetailTabs.selectedTab", $(this).attr('href'));
		});

		// Restore last selected tab or collapsible panel
		if (sessionStorage.getItem("rvdsfManageWishListDetailTabs.selectedTab") == null) {
			$("#rvdsfManageWishListDetailTabs li:first-child > a").tab("show")
			$("#rvdsfManageWishListDetailGeneralPanel").collapse("show")
		}
		else {
			var selectedTab = sessionStorage.getItem("rvdsfManageWishListDetailTabs.selectedTab")
			if (selectedTab) {
				$("#rvdsfManageWishListDetailTabs li > a[href='" + selectedTab + "']").tab("show")
				$(selectedTab).collapse("show")
			}
		}

		$("#rvdsfEventDateManageWishListInput").kendoDatePicker({
			culture: "@Dnn.Portal.CultureCode",
			format: "yyyy-MM-dd"
		});

		$('input.rating').not('.k-hidden').kendoRating({ label: false, precision: 'half' })

		// Execute start up scripts
		if ($("#rvdsfStartupScriptManageOrder").length > 0) {
			eval($("#rvdsfStartupScriptManageOrder").text())
		}
	}

	$(document).ready(function () {
		Revindex.Web.MaintainFocus.Initialize(true)
	})
</script>
