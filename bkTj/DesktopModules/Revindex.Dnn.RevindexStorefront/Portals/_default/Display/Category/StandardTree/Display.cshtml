@* Template name: StandardTree *@
@using Revindex.Dnn.RevindexStorefront.Models;
@using Revindex.Web.Mvc.Dnn.Helpers;
@inherits Revindex.Dnn.RevindexStorefront.Views.CategoryWebViewPage<CategoryViewModel>

@*
    The following category uses the Bootstrap treeview, which normally takes a javascript object.
    We render the unordered list in HTML first and convert to object later for extra SEO points.
    https://github.com/jonmiles/bootstrap-treeview
*@
@functions
{
	public bool HasProducts(CategoryModel category)
	{
			return category.ProductCount > 0 || Model.Categories.Where(cm => cm.ParentCategoryID == category.CategoryID).Any(cm => HasProducts(cm));
	}

	public HtmlString RenderTreeNodes(int? parentCategoryID)
	{
		string htmlOutput = string.Empty;

		var categories = Model.Categories.Where(cm => cm.ParentCategoryID == parentCategoryID);
		if (categories.Count() > 0)
		{
			var childOutput = "";
			foreach (var c in categories)
			{
				if (HasProducts(c))
				{
					childOutput += "<li data-state-selected=\"" + (Model.CategoryID == c.CategoryID ? "true" : "") + "\"> ";
					childOutput += "<a href=\"" + HttpUtility.HtmlEncode(c.ProductList.TabUrl) + "\" >" + HttpUtility.HtmlEncode(c.Name) + "</a>";
					childOutput += RenderTreeNodes(c.CategoryID);
					childOutput += "</li>";
				}
			}
			htmlOutput += String.IsNullOrEmpty(childOutput) ? "" : "<ul>" + childOutput + "</ul>";
		}

		return new HtmlString(htmlOutput);
	}
}

<div class="rvdsf rvdsf-category-container">
    <nav class="navbar navbar-default navbar-light visible-xs d-block d-sm-none">
        <div class="navbar-header">
            <button class="navbar-toggle navbar-toggler float-right" type="button" data-toggle="collapse" data-target="#rvdsfCategoryTree">
                <i class="glyphicon glyphicon-align-justify fa fas fa-reorder navbar-toggler-icon"></i>
            </button>
            <a class="navbar-brand">@Html.LocalizeString("Header")</a>
        </div>
    </nav>
    <div id="rvdsfCategoryTree" class="collapse-xs rvdsf-category-treeview">
        @RenderTreeNodes(null);
    </div>
</div>

@* Uses Bootstrap Tree View. See https://github.com/jonmiles/bootstrap-treeview *@
<script src="~/DesktopModules/Revindex.Dnn.RevindexStorefront/Scripts/bootstrap-treeview/bootstrap-treeview.min.js"></script>
<script type="text/javascript">
    function convertUnorderedListToObject(jUL, obj) {
			jUL.children("li").map(function () {
				try {
					var li = {
					text: $(this).children("a")[0].text,
                    href: $(this).children("a")[0].href,
                    state: {
					expanded: false,
                        selected: Boolean(this.dataset.stateSelected),
                    },
                    selectable: false,
                }

				obj.push(li);

                $(this).children("ul").map(function () {
					li.nodes = [];
					convertUnorderedListToObject($(this), li.nodes);
				});
			}

			catch (e) {
				console.log(e)

			}
		})
    }


	var categoryObjects = [];
	convertUnorderedListToObject($('.rvdsf-category-treeview > ul'), categoryObjects);

    $('.rvdsf-category-treeview').treeview({
	collapseIcon: "glyphicon glyphicon-chevron-down fa fas fa-chevron-down",
        data: categoryObjects,
        enableLinks: true,
        expandIcon: "glyphicon glyphicon-chevron-right fa fas fa-chevron-right",
    });

	// Reveal our selected category
	var selectedNodes = $('.rvdsf-category-treeview').treeview('getSelected');
	if (selectedNodes.length > 0) {
        $('.rvdsf-category-treeview').treeview('revealNode', selectedNodes[0]);
        $('.rvdsf-category-treeview').treeview('expandNode', selectedNodes[0]);
	}

</script>