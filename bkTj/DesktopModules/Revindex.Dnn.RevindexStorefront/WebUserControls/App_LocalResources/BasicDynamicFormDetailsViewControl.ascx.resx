<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="FieldTypeBasicDynamicFormLabelControl.Text" xml:space="preserve">
    <value>Field type</value>
  </data>
  <data name="FieldTypeBasicDynamicFormLabelControl.Help" xml:space="preserve">
    <value>The type of input control to display on screen.</value>
  </data>
  <data name="FieldIDBasicDynamicFormLabelControl.Text" xml:space="preserve">
    <value>ID</value>
  </data>
  <data name="FieldIDBasicDynamicFormLabelControl.Help" xml:space="preserve">
    <value>The ID is used to identify the field internally. Enter a unique ID for this field (e.g. &amp;quot;Custom_Date&amp;quot;). The first letter must begin with an alphabet. The ID can only contain alphabets, underscore and numbers without spaces.</value>
  </data>
  <data name="FieldLabelBasicDynamicFormLabelControl.Text" xml:space="preserve">
    <value>Label</value>
  </data>
  <data name="FieldLabelBasicDynamicFormLabelControl.Help" xml:space="preserve">
    <value>The label is the text that appears to the left of the input field on the web page.</value>
  </data>
  <data name="FieldRequiredBasicDynamicFormLabelControl.Text" xml:space="preserve">
    <value>Required</value>
  </data>
  <data name="FieldRequiredBasicDynamicFormLabelControl.Help" xml:space="preserve">
    <value>Indicate if the input field value is required.</value>
  </data>
  <data name="FieldValidatorTextBasicDynamicFormLabelControl.Text" xml:space="preserve">
    <value>Validator text</value>
  </data>
  <data name="FieldValidatorTextBasicDynamicFormLabelControl.Help" xml:space="preserve">
    <value>The validation message to display on error.</value>
  </data>
  <data name="FieldInputControlWidthBasicDynamicFormLabelControl.Text" xml:space="preserve">
    <value>Input control width</value>
  </data>
  <data name="FieldInputControlWidthBasicDynamicFormLabelControl.Help" xml:space="preserve">
    <value>The width of the input control or leave blank for default value (px or %).</value>
  </data>
  <data name="FieldInputControlHeightBasicDynamicFormLabelControl.Text" xml:space="preserve">
    <value>Input control height</value>
  </data>
  <data name="FieldInputControlHeightBasicDynamicFormLabelControl.Help" xml:space="preserve">
    <value>The height of the input control or leave blank for default value (px or %).</value>
  </data>
  <data name="SelectedDateCalendarFieldTypeBasicDynamicFormLabelControl.Text" xml:space="preserve">
    <value>Selected date</value>
  </data>
  <data name="SelectedDateCalendarFieldTypeBasicDynamicFormLabelControl.Help" xml:space="preserve">
    <value>Default selected date.</value>
  </data>
  <data name="AutoPostBackCheckBoxFieldTypeBasicDynamicFormLabelControl.Text" xml:space="preserve">
    <value>Auto update</value>
  </data>
  <data name="AutoPostBackCheckBoxFieldTypeBasicDynamicFormLabelControl.Help" xml:space="preserve">
    <value>Indicates whether an automatic postback to the server occurs when an action is performed on the control.</value>
  </data>
  <data name="CausesValidationCheckBoxFieldTypeBasicDynamicFormLabelControl.Text" xml:space="preserve">
    <value>Causes validation</value>
  </data>
  <data name="CausesValidationCheckBoxFieldTypeBasicDynamicFormLabelControl.Help" xml:space="preserve">
    <value>Indicates whether validation is performed when an action is performed on the control.</value>
  </data>
  <data name="CheckedCheckBoxFieldTypeBasicDynamicFormLabelControl.Text" xml:space="preserve">
    <value>Checked</value>
  </data>
  <data name="CheckedCheckBoxFieldTypeBasicDynamicFormLabelControl.Help" xml:space="preserve">
    <value>Indicate if checkbox is checked by default.</value>
  </data>
  <data name="TextCheckBoxFieldTypeBasicDynamicFormLabelControl.Text" xml:space="preserve">
    <value>Text</value>
  </data>
  <data name="AutoPostBackCheckBoxListFieldTypeBasicDynamicFormLabelControl.Text" xml:space="preserve">
    <value>Auto update</value>
  </data>
  <data name="AutoPostBackCheckBoxListFieldTypeBasicDynamicFormLabelControl.Help" xml:space="preserve">
    <value>Indicates whether an automatic postback to the server occurs when an action is performed on the control.</value>
  </data>
  <data name="CausesValidationCheckBoxListFieldTypeBasicDynamicFormLabelControl.Text" xml:space="preserve">
    <value>Causes validation</value>
  </data>
  <data name="CausesValidationCheckBoxListFieldTypeBasicDynamicFormLabelControl.Help" xml:space="preserve">
    <value>Indicates whether validation is performed when an action is performed on the control.</value>
  </data>
  <data name="RepeatDirectionCheckBoxListFieldTypeBasicDynamicFormLabelControl.Text" xml:space="preserve">
    <value>Repeat direction</value>
  </data>
  <data name="RepeatDirectionCheckBoxListFieldTypeBasicDynamicFormLabelControl.Help" xml:space="preserve">
    <value>Determine how list items are displayed on screen.</value>
  </data>
  <data name="ListItemCheckBoxListFieldTypeBasicDynamicFormLabelControl.Text" xml:space="preserve">
    <value>List items</value>
  </data>
  <data name="ListItemCheckBoxListFieldTypeBasicDynamicFormLabelControl.Help" xml:space="preserve">
    <value>List of selectable items. Each list item contains a name that is displayed to the end user and a value that is internally being stored.</value>
  </data>
  <data name="AutoPostBackDatePickerFieldTypeBasicDynamicFormLabelControl.Text" xml:space="preserve">
    <value>Auto update</value>
  </data>
  <data name="AutoPostBackDatePickerFieldTypeBasicDynamicFormLabelControl.Help" xml:space="preserve">
    <value>Indicates whether an automatic postback to the server occurs when an action is performed on the control.</value>
  </data>
  <data name="SelectedDateDatePickerFieldTypeBasicDynamicFormLabelControl.Text" xml:space="preserve">
    <value>Selected date</value>
  </data>
  <data name="SelectedDateDatePickerFieldTypeBasicDynamicFormLabelControl.Help" xml:space="preserve">
    <value>Default selected date.</value>
  </data>
  <data name="AutoPostBackDropDownListFieldTypeBasicDynamicFormLabelControl.Text" xml:space="preserve">
    <value>Auto update</value>
  </data>
  <data name="AutoPostBackDropDownListFieldTypeBasicDynamicFormLabelControl.Help" xml:space="preserve">
    <value>Indicates whether an automatic postback to the server occurs when an action is performed on the control.</value>
  </data>
  <data name="CausesValidationDropDownListFieldTypeBasicDynamicFormLabelControl.Text" xml:space="preserve">
    <value>Causes validation</value>
  </data>
  <data name="CausesValidationDropDownListFieldTypeBasicDynamicFormLabelControl.Help" xml:space="preserve">
    <value>Indicates whether validation is performed when an action is performed on the control.</value>
  </data>
  <data name="ListItemDropDownListFieldTypeBasicDynamicFormLabelControl.Text" xml:space="preserve">
    <value>List items</value>
  </data>
  <data name="ListItemDropDownListFieldTypeBasicDynamicFormLabelControl.Help" xml:space="preserve">
    <value>List of selectable items. Each list item contains a name that is displayed to the end user and a value that is internally being stored.</value>
  </data>
  <data name="FileExtensionFileUploadFieldTypeBasicDynamicFormLabelControl.Text" xml:space="preserve">
    <value>File extension</value>
  </data>
  <data name="FileExtensionFileUploadFieldTypeBasicDynamicFormLabelControl.Help" xml:space="preserve">
    <value>List of valid file extensions acceptable for upload. Separate each file extension by a pipe (e.g. .gif|.GIF|.jpg|.JPG|.jpeg|.JPEG|.png|.PNG). Leave blank to accept any file.</value>
  </data>
  <data name="ValueHiddenFieldTypeBasicDynamicFormLabelControl.Text" xml:space="preserve">
    <value>Default value</value>
  </data>
  <data name="ValueHiddenFieldTypeBasicDynamicFormLabelControl.Help" xml:space="preserve">
    <value>Default hidden value.</value>
  </data>
  <data name="AutoPostBackListBoxFieldTypeBasicDynamicFormLabelControl.Text" xml:space="preserve">
    <value>Auto update</value>
  </data>
  <data name="AutoPostBackListBoxFieldTypeBasicDynamicFormLabelControl.Help" xml:space="preserve">
    <value>Indicates whether an automatic postback to the server occurs when an action is performed on the control.</value>
  </data>
  <data name="CausesValidationListBoxFieldTypeBasicDynamicFormLabelControl.Text" xml:space="preserve">
    <value>Causes validation</value>
  </data>
  <data name="CausesValidationListBoxFieldTypeBasicDynamicFormLabelControl.Help" xml:space="preserve">
    <value>Indicates whether validation is performed when an action is performed on the control.</value>
  </data>
  <data name="SelectionModeListBoxFieldTypeBasicDynamicFormLabelControl.Text" xml:space="preserve">
    <value>Selection mode</value>
  </data>
  <data name="SelectionModeListBoxFieldTypeBasicDynamicFormLabelControl.Help" xml:space="preserve">
    <value>Determine how the list items can be selected.</value>
  </data>
  <data name="ListItemListBoxFieldTypeBasicDynamicFormLabelControl.Text" xml:space="preserve">
    <value>List items</value>
  </data>
  <data name="ListItemListBoxFieldTypeBasicDynamicFormLabelControl.Help" xml:space="preserve">
    <value>List of selectable items. Each list item contains a name that is displayed to the end user and a value that is internally being stored.</value>
  </data>
  <data name="TextLiteralFieldTypeBasicDynamicFormLabelControl.Text" xml:space="preserve">
    <value>Default text</value>
  </data>
  <data name="TextLiteralFieldTypeBasicDynamicFormLabelControl.Help" xml:space="preserve">
    <value>Default literal text.</value>
  </data>
  <data name="AutoPostBackRadioButtonListFieldTypeBasicDynamicFormLabelControl.Text" xml:space="preserve">
    <value>Auto update</value>
  </data>
  <data name="AutoPostBackRadioButtonListFieldTypeBasicDynamicFormLabelControl.Help" xml:space="preserve">
    <value>Indicates whether an automatic postback to the server occurs when an action is performed on the control.</value>
  </data>
  <data name="CausesValidationRadioButtonListFieldTypeBasicDynamicFormLabelControl.Text" xml:space="preserve">
    <value>Causes validation</value>
  </data>
  <data name="CausesValidationRadioButtonListFieldTypeBasicDynamicFormLabelControl.Help" xml:space="preserve">
    <value>Indicates whether validation is performed when an action is performed on the control.</value>
  </data>
  <data name="RepeatDirectionRadioButtonListFieldTypeBasicDynamicFormLabelControl.Text" xml:space="preserve">
    <value>Repeat direction</value>
  </data>
  <data name="RepeatDirectionRadioButtonListFieldTypeBasicDynamicFormLabelControl.Help" xml:space="preserve">
    <value>Determine how list items are displayed on screen.</value>
  </data>
  <data name="ListItemRadioButtonListFieldTypeBasicDynamicFormLabelControl.Text" xml:space="preserve">
    <value>List items</value>
  </data>
  <data name="ListItemRadioButtonListFieldTypeBasicDynamicFormLabelControl.Help" xml:space="preserve">
    <value>List of selectable items. Each list item contains a name that is displayed to the end user and a value that is internally being stored.</value>
  </data>
  <data name="AutoPostBackTextBoxFieldTypeBasicDynamicFormLabelControl.Text" xml:space="preserve">
    <value>Auto update</value>
  </data>
  <data name="AutoPostBackTextBoxFieldTypeBasicDynamicFormLabelControl.Help" xml:space="preserve">
    <value>Indicates whether an automatic postback to the server occurs when an action is performed on the control.</value>
  </data>
  <data name="CausesValidationTextBoxFieldTypeBasicDynamicFormLabelControl.Text" xml:space="preserve">
    <value>Causes validation</value>
  </data>
  <data name="CausesValidationTextBoxFieldTypeBasicDynamicFormLabelControl.Help" xml:space="preserve">
    <value>Indicates whether validation is performed when an action is performed on the control.</value>
  </data>
  <data name="TextTextBoxFieldTypeBasicDynamicFormLabelControl.Text" xml:space="preserve">
    <value>Default text</value>
  </data>
  <data name="TextTextBoxFieldTypeBasicDynamicFormLabelControl.Help" xml:space="preserve">
    <value>Default text value that will be displayed in the input field on screen.</value>
  </data>
  <data name="TextModeTextBoxFieldTypeBasicDynamicFormLabelControl.Text" xml:space="preserve">
    <value>Text mode</value>
  </data>
  <data name="TextModeTextBoxFieldTypeBasicDynamicFormLabelControl.Help" xml:space="preserve">
    <value>Determine if textbox should allow multiple lines or single line data entry.</value>
  </data>
  <data name="DataTypeTextBoxFieldTypeBasicDynamicFormLabelControl.Text" xml:space="preserve">
    <value>Data type</value>
  </data>
  <data name="DataTypeTextBoxFieldTypeBasicDynamicFormLabelControl.Help" xml:space="preserve">
    <value>Specify the type of data allowed to be entered.</value>
  </data>
  <data name="MinimumValueTextBoxFieldTypeBasicDynamicFormLabelControl.Text" xml:space="preserve">
    <value>Min value</value>
  </data>
  <data name="MinimumValueTextBoxFieldTypeBasicDynamicFormLabelControl.Help" xml:space="preserve">
    <value>Specify the minimum value that can be entered or leave blank for any value.</value>
  </data>
  <data name="MaximumValueTextBoxFieldTypeBasicDynamicFormLabelControl1.Text" xml:space="preserve">
    <value>Max value</value>
  </data>
  <data name="MaximumValueTextBoxFieldTypeBasicDynamicFormLabelControl1.Help" xml:space="preserve">
    <value>Specify the maximum value that can be entered or leave blank for any value.</value>
  </data>
  <data name="WrapTextBoxFieldTypeBasicDynamicFormLabelControl.Text" xml:space="preserve">
    <value>Wrap</value>
  </data>
  <data name="WrapTextBoxFieldTypeBasicDynamicFormLabelControl.Help" xml:space="preserve">
    <value>Determine if text entered will automatically wrap if it overflows the textbox boundary.</value>
  </data>
  <data name="MaxLengthTextBoxFieldTypeBasicDynamicFormLabelControl.Text" xml:space="preserve">
    <value>Max length</value>
  </data>
  <data name="MaxLengthTextBoxFieldTypeBasicDynamicFormLabelControl.Help" xml:space="preserve">
    <value>The maximum length of text that can be entered. Leave blank for unlimited.</value>
  </data>
  <data name="SingleSelectionPermittedOnlyMessage.Text" xml:space="preserve">
    <value>Only one list item can be marked as selected.</value>
  </data>
</root>