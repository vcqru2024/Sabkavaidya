@inherits Custom.Hybrid.RazorTyped
@using ToSic.Razor.Blade;
@{
  var domId = "app-accordion4-" + UniqueKey;
}

<div class="co-container-outer">
  <div class="co-container-inner app-accordion4-wrapper" @domId @Kit.Edit.Attribute("quick-edit-config", new { modules = new {  enable = true }})>
    @foreach (var accord in MyItems) {

      var initiallyExpanded = accord.Bool("InitiallyExpanded");
      var hasIcon = Text.Has(accord.String("Icon"));

    // SectionHeaderId is the ID of the header of the accordion item
    var sectionHeaderId = "a-" + UniqueKey + "-" + accord.Id;
    // SectionId is the ID of the content of the accordion item and also the target attribute of the section header
    var sectionId = "a-" + accord.Id;

      <div class="app-accordion4-item" @Kit.Toolbar.Default().For(accord)>
        <div class='app-accordion4-title @(initiallyExpanded ? "is-expanded" : "")' data-accordion-parent="#@sectionId">
          <h2 class='@(Text.Has(accord.String("Icon")) ? "" : "co-no-icon")'>
            @if (Text.Has(accord.String("Icon"))) {
              <span><i class='app-accordion4-icon fas @accord.String("Icon")' aria-hidden="true"></i></span>
            }
            @accord.String("Title")
          </h2>

          @* Up / Down arrows *@
          <svg aria-hidden="true" focusable="false" data-prefix="fas" data-icon="chevron-down" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" class="svg-inline--fa fa-chevron-down fa-w-14"><path fill="currentColor" d="M207.029 381.476L12.686 187.132c-9.373-9.373-9.373-24.569 0-33.941l22.667-22.667c9.357-9.357 24.522-9.375 33.901-.04L224 284.505l154.745-154.021c9.379-9.335 24.544-9.317 33.901.04l22.667 22.667c9.373 9.373 9.373 24.569 0 33.941L240.971 381.476c-9.373 9.372-24.569 9.372-33.942 0z" class=""></path></svg>
          <svg aria-hidden="true" focusable="false" data-prefix="fas" data-icon="chevron-up" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" class="svg-inline--fa fa-chevron-up fa-w-14"><path fill="currentColor" d="M240.971 130.524l194.343 194.343c9.373 9.373 9.373 24.569 0 33.941l-22.667 22.667c-9.357 9.357-24.522 9.375-33.901.04L224 227.495 69.255 381.516c-9.379 9.335-24.544 9.317-33.901-.04l-22.667-22.667c-9.373-9.373-9.373-24.569 0-33.941L207.03 130.525c9.372-9.373 24.568-9.373 33.941-.001z" class=""></path></svg>
        </div>
        
          <div class='app-accordion4-content @(initiallyExpanded ? "is-expanded" : "")'  data-accordion-child="@sectionId">

         @* When the current item is just a demo-preview, show a message to help the editor *@
         @if (accord.IsDemoItem) {
            if (MyUser.IsContentAdmin) {
              <div class="alert alert-info" data-accordion-child="@sectionId">
                @App.Resources.Html("DemoItemMessage", container: "")
              </div>
            }
        } else {
            var innerBlocks = accord.Children("DesignedContent");

            // Show message if no content and user is admin
            if (!innerBlocks.Any() && MyUser.IsContentAdmin) {
              <div class="alert alert-info" data-accordion-child="@sectionId">
                @App.Resources.Html("NoContentMessage", container: "")
              </div>
            }

          @* Now show the inner section with all the blocks *@
            <div class='sc-content-block-list @(initiallyExpanded ? "is-expanded" : "")' @Kit.Edit.ContextAttributes(accord, field: "DesignedContent") data-accordion-child="@sectionId">
              @foreach (var designedContent in accord.Children("DesignedContent")) {
                @Kit.Render.One(designedContent);
              }
            </div>
        }
          </div>
      </div>
    }
  </div>
</div>

@Html.Partial("./Assets.cshtml", new { domId })