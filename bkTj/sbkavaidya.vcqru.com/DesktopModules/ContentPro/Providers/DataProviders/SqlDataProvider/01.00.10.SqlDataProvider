/************************************************************/
/*****              SqlDataProvider                     *****/
/*****                                                  *****/
/*****                                                  *****/
/***** Note: To manually execute this script you must   *****/
/*****       perform a search and replace operation     *****/
/*****       for {databaseOwner} and {objectQualifier}  *****/
/*****                                                  *****/
/************************************************************/

	if (exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}{objectQualifier}ContentPro_Categories') and OBJECTPROPERTY(id, N'IsTable') = 1)) and (not exists (select * from dbo.syscolumns where id = object_id(N'{databaseOwner}{objectQualifier}ContentPro_Categories') and name='CatUrl'))
ALTER TABLE {databaseOwner}[{objectQualifier}ContentPro_Categories] ADD
[CatUrl] [nvarchar](max) NULL
GO

	if (exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}{objectQualifier}ContentPro_Categories') and OBJECTPROPERTY(id, N'IsTable') = 1)) and (not exists (select * from dbo.syscolumns where id = object_id(N'{databaseOwner}{objectQualifier}ContentPro_Categories') and name='IsPublic'))
ALTER TABLE {databaseOwner}[{objectQualifier}ContentPro_Categories] ADD
[IsPublic] [bit] NULL
GO

	if (exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}{objectQualifier}ContentPro_View') and OBJECTPROPERTY(id, N'IsTable') = 1)) and (not exists (select * from dbo.syscolumns where id = object_id(N'{databaseOwner}{objectQualifier}ContentPro_View') and name='CategoryTag'))
ALTER TABLE {databaseOwner}[{objectQualifier}ContentPro_View] ADD
[CategoryTag] [bit] NULL
GO

	if (exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}{objectQualifier}ContentPro_View') and OBJECTPROPERTY(id, N'IsTable') = 1)) and (not exists (select * from dbo.syscolumns where id = object_id(N'{databaseOwner}{objectQualifier}ContentPro_View') and name='CategoryTagFSet'))
ALTER TABLE {databaseOwner}[{objectQualifier}ContentPro_View] ADD
[CategoryTagFSet] [int] NULL
GO


if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}{objectQualifier}ContentPro_CountCategoriesContent') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
	drop procedure {databaseOwner}{objectQualifier}ContentPro_CountCategoriesContent
GO


CREATE PROCEDURE {databaseOwner}[{objectQualifier}ContentPro_CountCategoriesContent] 
	-- Add the parameters for the stored procedure here
	@CatTag int,
	@FSet int

AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

SELECT cc.CatID,c.CatName,c.CatUrl,COUNT(cc.ContentID) as Count
FROM {databaseOwner}{objectQualifier}ContentPro_ContentCategories cc
inner join {databaseOwner}{objectQualifier}ContentPro_Categories c on cc.CatId = c.CatID
inner join {databaseOwner}{objectQualifier}ContentPro_Content content on content.ContentID = cc.ContentID
WHERE c.IsPublic = 1 and c.IsPublic = 1 ANd content.FieldSetID = @FSet
GROUP BY cc.CatID,c.CatName,c.CatUrl
order by c.CatName asc;

END

GO



/************************************************************/
/*****              SqlDataProvider                     *****/
/************************************************************/