<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ArticleMode.Text" xml:space="preserve">
    <value>Single content item</value>
  </data>
  <data name="ArticleTemplates.Text" xml:space="preserve">
    <value>Views</value>
  </data>
  <data name="BFinish.Text" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="BSelectTemplate.Text" xml:space="preserve">
    <value>Select Template</value>
  </data>
  <data name="Finishlbl.Text" xml:space="preserve">
    <value>Done!</value>
  </data>
  <data name="ListMode.Text" xml:space="preserve">
    <value>List of content items</value>
  </data>
  <data name="OtherPage.Text" xml:space="preserve">
    <value />
  </data>
  <data name="SamePage.Text" xml:space="preserve">
    <value />
  </data>
  <data name="SelectArticle.Text" xml:space="preserve">
    <value>Select content item</value>
  </data>
  <data name="SelectModelbl.Text" xml:space="preserve">
    <value>Select Mode</value>
  </data>
  <data name="SelectSamePage.Text" xml:space="preserve">
    <value>Show article in another page?</value>
  </data>
  <data name="SelectTabID.Text" xml:space="preserve">
    <value>Select which page will be displayed:</value>
  </data>
  <data name="SelectTemplate.Text" xml:space="preserve">
    <value>Select details template</value>
  </data>
  <data name="SelectTempList.Text" xml:space="preserve">
    <value>Select list template</value>
  </data>
  <data name="ViewNamelbl.Text" xml:space="preserve">
    <value>View Name</value>
  </data>
  <data name="CArticle.Text" xml:space="preserve">
    <value>Let me choose which content items are displayed</value>
  </data>
  <data name="CDynamic.Text" xml:space="preserve">
    <value>This module will display a content item dynamically</value>
  </data>
  <data name="SelectDynamiclbl.Text" xml:space="preserve">
    <value>How should this module work?</value>
  </data>
  <data name="SelectTemplateDynlbl.Text" xml:space="preserve">
    <value>Select Dynamic Template</value>
  </data>
  <data name="BFSetDyn.Text" xml:space="preserve">
    <value>Select Content</value>
  </data>
  <data name="SelectFSetDynlbl.Text" xml:space="preserve">
    <value>Select content set to display</value>
  </data>
  <data name="BAll.Text" xml:space="preserve">
    <value>Filter</value>
  </data>
  <data name="BOne.Text" xml:space="preserve">
    <value>Filter</value>
  </data>
  <data name="Filter1lbl.Text" xml:space="preserve">
    <value>Success!</value>
  </data>
  <data name="Filter2lbl.Text" xml:space="preserve">
    <value>Success!</value>
  </data>
  <data name="TreeAlllbl.Text" xml:space="preserve">
    <value>Show items belonging to ALL selected categories:</value>
  </data>
  <data name="TreeOnelbl.Text" xml:space="preserve">
    <value>Show items belonging to any ONE of selected categories below:</value>
  </data>
  <data name="TemplateArtHeadlbl.Text" xml:space="preserve">
    <value>Content Display Options</value>
  </data>
  <data name="OrderFieldlbl.Text" xml:space="preserve">
    <value>Select field to order by:</value>
  </data>
  <data name="Sitemaplbl.Text" xml:space="preserve">
    <value>Include these items in the DNN sitemap?</value>
  </data>
  <data name="lblBootstrap.Text" xml:space="preserve">
    <value>Include Bootstrap?</value>
  </data>
  <data name="lblNumberOfArticles.Text" xml:space="preserve">
    <value>Set the number of items per page (0 = unlimited)</value>
  </data>
  <data name="ModuleUrllbl.Text" xml:space="preserve">
    <value>Do you have more than one ContentPro module in this page?</value>
  </data>
  <data name="RFinish.Text" xml:space="preserve">
    <value>Return</value>
  </data>
  <data name="Paginglbl.Text" xml:space="preserve">
    <value>Use paging?</value>
  </data>
  <data name="SelectFSetlbl.Text" xml:space="preserve">
    <value>Select content set to display</value>
  </data>
  <data name="PleaseSelect.Text" xml:space="preserve">
    <value>Please select</value>
  </data>
  <data name="valDDSelectFSet.Error" xml:space="preserve">
    <value>Please select Content to be displayed</value>
  </data>
  <data name="CCategoryTag.Text" xml:space="preserve">
    <value>This module will display Category/Tag content</value>
  </data>
  <data name="AllowCommentslbl.Text" xml:space="preserve">
    <value>Show comments</value>
  </data>
  <data name="CArchive.Text" xml:space="preserve">
    <value>This module will display Archive content</value>
  </data>
  <data name="AllowCommentsLoginlbl.Text" xml:space="preserve">
    <value>Comments permissions</value>
  </data>
  <data name="DDCatTaglbl.Text" xml:space="preserve">
    <value>Select category or tag</value>
  </data>
  <data name="DDCatTagFSetlbl.Text" xml:space="preserve">
    <value>Select one FieldSet to show</value>
  </data>
  <data name="lblUseMeta.Text" xml:space="preserve">
    <value>Use Meta data?</value>
  </data>
  <data name="lblNoCategoriesExist.Text" xml:space="preserve">
    <value>No categories exist.</value>
  </data>
  <data name="valSelectTemplate.Error" xml:space="preserve">
    <value>Please select a template</value>
  </data>
  <data name="helpDisplayArchive.Text" xml:space="preserve">
    <value>To display an archive list of posts by year/month rather than an article list or an individual article.</value>
  </data>
  <data name="helpDisplayDynamic.Text" xml:space="preserve">
    <value>Used for an 'article details' page which will load in an article dynamically via the id from the Querystring.</value>
  </data>
  <data name="helpDisplayTagCategory.Text" xml:space="preserve">
    <value>To display a tag or category list rather than a article list or an individual article.</value>
  </data>
  <data name="helpHowShouldModuleWork.Text" xml:space="preserve">
    <value>Let me choose: this allows you to specificy exactly what content this module will display</value>
  </data>
  <data name="helpLetMeChoose.Text" xml:space="preserve">
    <value>You will be able to choose from a list or single content item from your chosen content set.</value>
  </data>
  <data name="SocialGroupslbl.Text" xml:space="preserve">
    <value>Don't use social groups?</value>
  </data>
  <data name="NumRelatedlbl.Text" xml:space="preserve">
    <value>How many related content</value>
  </data>
  <data name="Relatedlbl.Text" xml:space="preserve">
    <value>Use related content</value>
  </data>
  <data name="AbsoluteUrllbl.Text" xml:space="preserve">
    <value>Use absolute urls</value>
  </data>
  <data name="Scrollinglbl.Text" xml:space="preserve">
    <value>Scrolling</value>
  </data>
  <data name="DetailsTablbl.Text" xml:space="preserve">
    <value>Select article page</value>
  </data>
</root>