<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="plTemplate.Text" xml:space="preserve">
    <value>Template </value>
  </data>
  <data name="plTemplate.Help" xml:space="preserve">
    <value>Template locates under desktopmodules/crossclassified/product/template/AccountLink, you can customize your own.</value>
  </data>
  <data name="ControlTitle_edit.Text" xml:space="preserve">
    <value>Account link settings</value>
  </data>
  <data name="plLinkTarget.Help" xml:space="preserve">
    <value>Choose how to open target window when click link item.</value>
  </data>
  <data name="plLinkTarget.Text" xml:space="preserve">
    <value>Link Target</value>
  </data>
  <data name="plShowCart.Help" xml:space="preserve">
    <value>Check to show shopping cart link, Note, if online order is disabled in "Product settings" of Cp_Admin module, cart link will not show even this option is checked.  </value>
  </data>
  <data name="plShowCart.Text" xml:space="preserve">
    <value>Show "My Cart" Link</value>
  </data>
  <data name="plShowAccount.Help" xml:space="preserve">
    <value>Check to show account link</value>
  </data>
  <data name="plShowAccount.Text" xml:space="preserve">
    <value>Show "My Account" Link</value>
  </data>
  <data name="plShowHelp.Help" xml:space="preserve">
    <value>Check to show help link, Note, if help page  is not specified in "General Settings" of Cp_Admin module, help link will not show even this option is checked.  </value>
  </data>
  <data name="plShowHelp.Text" xml:space="preserve">
    <value>Show "Help" Link</value>
  </data>
  <data name="plShowOrder.Help" xml:space="preserve">
    <value>Check to show order history link, Note, if online order is disabled in "Product settings" of Cp_Admin module, order link will not show even this option is checked.  </value>
  </data>
  <data name="plShowOrder.Text" xml:space="preserve">
    <value>Show "My Orders" Link</value>
  </data>
  <data name="plShowProduct.Help" xml:space="preserve">
    <value>Check to show ordered product link, Note, if online order is disabled in "Product settings" of Cp_Admin module, order link will not show even this option is checked.</value>
  </data>
  <data name="plShowProduct.Text" xml:space="preserve">
    <value>Show "My Ordered Products" Link</value>
  </data>
  <data name="plShowAuction.Help" xml:space="preserve">
    <value>Check to show "My Auction" link.</value>
  </data>
  <data name="plShowAuction.Text" xml:space="preserve">
    <value>Show "My Auction" Link</value>
  </data>
  <data name="secAbout.Text" xml:space="preserve">
    <value>About Cp_Product_AccountLink sub module</value>
  </data>
  <data name="secGeneral.Text" xml:space="preserve">
    <value>General</value>
  </data>
  <data name="Tip_About.Text" xml:space="preserve">
    <value>Classified Pro is an enterprise-class DNN module which helps you to create an online store, auction website and also publish classified ads. It contains 16 sub modules and 1 skin object. Cp_Product_AccountLink is one of these 16 sub modules, it is used to show common links for the buyer (e.g. My Cart, My Orders). These links are mainly link to Cp_Admin sub module. For example, click "My Cart" link is equal to click "Cp_Admin sub module - Buyer Center - My Cart".&lt;br/&gt;&lt;br/&gt;

You can add multiple instances of Cp_Product_AccountLink sub module to different pages. It is template based, you can customize your desired display effect by create different templates.&lt;br/&gt;&lt;br/&gt;

Classified Pro also contains a skin object which works the same as Cp_Product_AccountLink sub module. However, since it is a skin object, it can be easily integrated with your site skin (theme) and looks more elegant. Check "Classified Pro user guide.pdf" for more detail.&lt;br/&gt;&lt;br/&gt;


If current site enables content localization, Cp_Product_AccountLink sub module will generate link according to page culture. For example, if current page culture is "en-US (English)", it will navigate to English page of Cp_Admin sub module; if current page culture is "zh-CN (Simple Chinese)", it will navigate to Simple Chinese page of Cp_Admin sub module; if page culture is neutral, it will navigate according to current context culture.</value>
  </data>
</root>