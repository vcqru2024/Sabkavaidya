<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Date.ErrorMessage" xml:space="preserve">
    <value>Invalid date</value>
  </data>
  <data name="lblCreatedDate.Text" xml:space="preserve">
    <value>Created</value>
  </data>
  <data name="chkActive.Text" xml:space="preserve">
    <value>Active</value>
  </data>
  <data name="ControlTitle_uservendor_discount.Text" xml:space="preserve">
    <value>My Common Discounts</value>
  </data>
  <data name="lblId.Text" xml:space="preserve">
    <value>Id</value>
  </data>
  <data name="lblDescription.Text" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="divCoupon.Text" xml:space="preserve">
    <value>Promos &amp; Coupons</value>
  </data>
  <data name="lblActive.Text" xml:space="preserve">
    <value>Active</value>
  </data>
  <data name="lblDiscount.Text" xml:space="preserve">
    <value>Discount (%)</value>
  </data>
  <data name="lblEndDate.Text" xml:space="preserve">
    <value>End Date</value>
  </data>
  <data name="lblStartDate.Text" xml:space="preserve">
    <value>Start Date</value>
  </data>
  <data name="Between1to100.Text" xml:space="preserve">
    <value>Value must between 1 to 100</value>
  </data>
  <data name="btnAddDiscount.Text" xml:space="preserve">
    <value>Add Discount</value>
  </data>
  <data name="plDiscount.Help" xml:space="preserve">
    <value>Enter a value which between 1 - 100.</value>
  </data>
  <data name="plDiscount.Text" xml:space="preserve">
    <value>Discount (%)</value>
  </data>
  <data name="plDiscountActive.Help" xml:space="preserve">
    <value>Check to enable this item</value>
  </data>
  <data name="plDiscountActive.Text" xml:space="preserve">
    <value>Active</value>
  </data>
  <data name="plEndDate.Help" xml:space="preserve">
    <value>Enter a expire date, leave it as blank if you don't want limit expire date</value>
  </data>
  <data name="plEndDate.Text" xml:space="preserve">
    <value>End Date</value>
  </data>
  <data name="plStartDate.Help" xml:space="preserve">
    <value>Enter a start date</value>
  </data>
  <data name="plStartDate.Text" xml:space="preserve">
    <value>Start Date</value>
  </data>
  <data name="lblCouponDiscountList.Text" xml:space="preserve">
    <value>My common coupons</value>
  </data>
  <data name="plCoupon.Help" xml:space="preserve">
    <value>Enter coupon (or promo code), value can't be null. Note, value is case insensitive.</value>
  </data>
  <data name="plCoupon.Text" xml:space="preserve">
    <value>Coupon</value>
  </data>
  <data name="Tip_Discount.Text" xml:space="preserve">
    <value>Enter a value which between 1 - 100, 100 = totally free. Discount Price = Product Price * (100 - discount)/100.</value>
  </data>
  <data name="Tip_Discount_Coupon.Text" xml:space="preserve">
    <value>The Coupon system provides the option to create unique codes which customers can enter when items are added to the cart. 
Coupons can be configured to any discount percentage;  and set an end date for the coupon promotion.</value>
  </data>
  <data name="plDiscountDescription.Help" xml:space="preserve">
    <value>Enter description for this discount (optional)</value>
  </data>
  <data name="plDiscountDescription.Text" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="lblCoupon.Text" xml:space="preserve">
    <value>Coupon</value>
  </data>
  <data name="Tip_SameDiscount_Coupon.Text" xml:space="preserve">
    <value>Coupon already exist, please check it. Note, the coupon is case insensitive.</value>
  </data>
  <data name="lblIsPublic.Text" xml:space="preserve">
    <value>Public</value>
  </data>
  <data name="plIsPublic.Help" xml:space="preserve">
    <value>Check this option to show coupon to visitors.</value>
  </data>
  <data name="plIsPublic.Text" xml:space="preserve">
    <value>Public</value>
  </data>
  <data name="Tip_Public.Text" xml:space="preserve">
    <value>Check this option to show coupon to visitors.</value>
  </data>
  <data name="divRoleDiscount.Text" xml:space="preserve">
    <value>Role Discounts</value>
  </data>
  <data name="lblRoleDiscountList.Text" xml:space="preserve">
    <value>My common role discounts</value>
  </data>
  <data name="Tip_Discount_Role.Text" xml:space="preserve">
    <value>Role discounts are used to setup a discount for a specific role. Register users who belong to that role will get discount when order your products, this is a great way to encourage users to subscribe your site roles.</value>
  </data>
  <data name="Tip_SameDiscount_Role.Text" xml:space="preserve">
    <value>Role discount for same condition (same role/same departments) already exists, please check it.</value>
  </data>
  <data name="divDateDiscount.Text" xml:space="preserve">
    <value>Date Discount</value>
  </data>
  <data name="lblDateDiscountList.Text" xml:space="preserve">
    <value>My common date discounts</value>
  </data>
  <data name="Tip_Discount_Date.Text" xml:space="preserve">
    <value>Date discounts are used to setup a discount for a specific period. For example, you can create a 30% discount between 12/25 to 12/30, so users who buy your products in this period will get 30% discount.</value>
  </data>
  <data name="plDiscountType.Help" xml:space="preserve">
    <value>Choose departments which this discount will be applied. Uncheck all will apply to all departments.</value>
  </data>
  <data name="plDiscountType.Text" xml:space="preserve">
    <value>Apply to departments</value>
  </data>
  <data name="Tip_DiscountType.Text" xml:space="preserve">
    <value>Choose departments which this discount will be applied. Uncheck all will apply to all departments.</value>
  </data>
  <data name="plRole.Help" xml:space="preserve">
    <value>Select a role</value>
  </data>
  <data name="plRole.Text" xml:space="preserve">
    <value>Apply to role</value>
  </data>
</root>