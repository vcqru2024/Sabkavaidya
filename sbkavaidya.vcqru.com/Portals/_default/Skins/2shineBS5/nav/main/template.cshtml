@using DotNetNuke.Web.DDRMenu
@using System.Dynamic

@inherits DotNetNuke.Web.Razor.DotNetNukeWebPage<dynamic>

@{
    var root = Model.Source.root;
}

@helper RenderNodes(IList<MenuNode> nodes)
{
    if (nodes != null && nodes.Count > 0)
    {
        <ul class="@(nodes[0].Depth == 0 ? "navbar-nav" : "dropdown-menu")">
            @foreach (var node in nodes)
            {
                var cssClasses = new List<string> { "nav-item", "nav-" + node.TabId };

                if (node.First) { cssClasses.Add("first"); }
                if (node.Last) { cssClasses.Add("last"); }
                if (node.HasChildren()) { cssClasses.Add("has-child dropdown"); }
                if (!node.Enabled) { cssClasses.Add("disabled"); }
                if (node.Breadcrumb) { cssClasses.Add("active"); }
                else { cssClasses.Add("inactive"); }

                var classString = string.Join(" ", cssClasses);

                var linkCssClasses = new List<string>();
                if (nodes[0].Depth != 0)
                {
                    linkCssClasses.Add("dropdown-item");
                }
                else
                {
                    linkCssClasses.Add("nav-link");
                }
                if (node.Breadcrumb) { linkCssClasses.Add("active"); }
                if (node.HasChildren()) { linkCssClasses.Add("dropdown-toggle"); }

                var linkClassString = string.Join(" ", linkCssClasses);

                <li class="@classString">
                    <a class="@linkClassString" target='@(node.Target == "_blank" ? "_blank" : "_self")' href='@(node.Enabled ? node.Url : "javascript:void(0)")'>
                        @if (node.Icon != null)
                        {
                            <img src="@node.Icon" alt="Node Icon" />
                        }
                        @node.Text
                    </a>

                    @RenderNodes(node.Children)
                </li>
            }
        </ul>
    }
}

@RenderNodes(root.Children)
