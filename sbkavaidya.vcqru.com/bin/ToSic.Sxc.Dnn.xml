<doc>
  <assembly>
    <name>ToSic.Sxc.Dnn</name>
  </assembly>
  <members>
    <member name="P:ToSic.Sxc.Dnn.dist.CachedPageBase.ServiceProvider">
      <summary>
            Get the service provider only once - ideally in Dnn9.4 we will get it from Dnn
            If we would get it multiple times, there are edge cases where it could be different each time! #2614
            <para><a href="https://go.2sxc.org/xref17?xref=ToSic.Sxc.Dnn.dist.CachedPageBase.ServiceProvider">ðŸ“– ServiceProvider</a></para></summary>
    </member>
    <member name="M:ToSic.Sxc.Dnn.dist.CachedPageBase.GetSiteRoot(System.Int32,System.Int32)">
      <summary>
            portalId and pageId context is lost on DesktopModules/ToSIC_SexyContent/dist/...aspx
            and DNN Framework can not resolve site root, so we need to handle it by ourselves
            </summary>
      <param name="pageId"></param>
      <param name="portalId"></param>
      <returns></returns>
    </member>
    <member name="T:ToSic.Sxc.Dnn.StartUp.StartupDnn">
      <summary>
            This configures .net Core Dependency Injection
            The StartUp is defined as an IServiceRouteMapper.
            This way DNN will auto-run this code before anything else
            <para><a href="https://go.2sxc.org/xref17?xref=ToSic.Sxc.Dnn.StartUp.StartupDnn">ðŸ“– StartupDnn</a></para></summary>
    </member>
    <member name="M:ToSic.Sxc.Dnn.StartUp.StartupDnn.RegisterRoutes(DotNetNuke.Web.Api.IMapRoute)">
      <summary>
            This will be called by DNN when loading the assemblies.
            We just want to trigger the DI-Configure
            </summary>
      <param name="mapRouteManager"></param>
    </member>
    <member name="M:ToSic.Sxc.Dnn.StartUp.StartupDnn.Configure">
      <summary>
            Configure IoC for 2sxc. If it's already configured, do nothing.
            </summary>
    </member>
    <member name="T:ToSic.Sxc.Dnn.StartUp.StartupDnn9">
      <summary>
            This is the preferred way to start Dependency Injection, but it requires Dnn 9.4+
            If an older version of Dnn is used, this code will not run
            <para><a href="https://go.2sxc.org/xref17?xref=ToSic.Sxc.Dnn.StartUp.StartupDnn9">ðŸ“– StartupDnn9</a></para></summary>
    </member>
    <member name="P:ToSic.Sxc.Dnn.View.ServiceProvider">
      <summary>
            Get the service provider only once - ideally in Dnn9.4 we will get it from Dnn
            If we would get it multiple times, there are edge cases where it could be different each time! #2614
            <para><a href="https://go.2sxc.org/xref17?xref=ToSic.Sxc.Dnn.View.ServiceProvider">ðŸ“– ServiceProvider</a></para></summary>
    </member>
    <member name="P:ToSic.Sxc.Dnn.View.Block">
      <summary>
            Block needs to self-initialize when first requested, because it's used in the Actions-Menu builder
            which runs before page-load
            <para><a href="https://go.2sxc.org/xref17?xref=ToSic.Sxc.Dnn.View.Block">ðŸ“– Block</a></para></summary>
    </member>
    <member name="M:ToSic.Sxc.Dnn.View.Page_Load(System.Object,System.EventArgs)">
      <summary>
            Page Load event
            </summary>
    </member>
    <member name="M:ToSic.Sxc.Dnn.View.Page_PreRender(System.Object,System.EventArgs)">
      <summary>
            Process View if a Template has been set
            </summary>
      <param name="sender"></param>
      <param name="e"></param>
    </member>
    <member name="F:ToSic.Sxc.Dnn.View.phOutput">
      <summary>
            phOutput control.
            </summary>
      <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
    </member>
    <member name="M:ToSic.Sxc.Dnn.View.TryCatchAndLogToDnn``1(System.Func{``0})">
      <summary>
            Run some code in a try/catch, and output it nicely if an error is thrown
            </summary>
      <param name="action"></param>
    </member>
    <member name="M:ToSic.Sxc.Dnn.View.HtmlLog">
      <summary>
            Html Comment containing the log for the current module
            </summary>
      <returns></returns>
    </member>
    <member name="M:ToSic.Sxc.Dnn.View.GetOptionalDetailedLogToAttach">
      <summary>
            optional detailed logging
            </summary>
      <returns></returns>
    </member>
    <member name="F:ToSic.Sxc.Dnn.View._moduleActions">
      <summary>
            Causes DNN to create the menu with all actions like edit entity, new, etc.
            </summary>
    </member>
  </members>
</doc>